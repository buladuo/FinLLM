[
    {
        "question": "600872的全称、A股简称、法人、法律顾问、会计师事务所及董秘是？ 该公司实控人是否发生改变？如果发生变化，什么时候变成了谁？是哪国人？是否有永久境外居留权？在实控人发生变化的当年股权发生了几次转让？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询600872的全称。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "本查询旨在获取公司全名，其中关键字段为ChiName，而通过CompanyCode字段进行查找。本次查询限定了CompanyCode为'1805'，这是已知的对应于全名'中炬高新技术实业(集团)股份有限公司'的值，因此可以确保获取到准确的信息。该字段在这个查询中是必需的，其他字段不涉及本查询目标，均可省略。",
                "sql": "SELECT ChiName  FROM astockbasicinfodb.lc_stockarchives  WHERE CompanyCode = '1805';"
            },
            {
                "id": 2,
                "subquestion": "查询600872的A股简称。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "本查询旨在获取某公司的A股简称，具体字段为AShareAbbr，而查询是通过CompanyCode字段过滤到该公司。将CompanyCode限定为'1805'这一已知对应于全名'中炬高新技术实业(集团)股份有限公司'的代码，从而能够准确地查询到所需的简称。AShareAbbr是必需的查询字段，其他字段在此查询中不涉及，因此可省略。",
                "sql": "SELECT AShareAbbr FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = '1805';"
            },
            {
                "id": 3,
                "subquestion": "查询600872的法人。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "本查询旨在获取某公司的法定代表人信息，具体字段为LegalRepr，而查询是通过CompanyCode字段过滤到该公司。将CompanyCode限定为'1805'这一已知对应于全名'中炬高新技术实业(集团)股份有限公司'的代码，从而能够准确地查询到所需的法人代表信息。LegalRepr是必需的查询字段，其他字段在此查询中不涉及，因此可省略。",
                "sql": "SELECT LegalRepr FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 1805;"
            },
            {
                "id": 4,
                "subquestion": "查询600872的法律顾问。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "本查询旨在获取某公司的法律顾问信息，具体字段为LegalConsultant，而查询是根据CompanyCode字段来过滤到该公司。将CompanyCode限定为'1805'这一已知对应于全名'中炬高新技术实业(集团)股份有限公司'的代码，以确保准确查询所需的法律顾问信息。LegalConsultant是必需的查询字段，其他字段在此查询中不涉及，因此可省略。",
                "sql": "SELECT LegalConsultant FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 1805;"
            },
            {
                "id": 5,
                "subquestion": "查询600872的会计师事务所。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "本查询旨在获取某公司的会计师事务所信息，具体字段为AccountingFirm，而查询是根据CompanyCode字段来过滤到该公司。将CompanyCode限定为'1805'这一已知对应于全名'中炬高新技术实业(集团)股份有限公司'的代码，以确保准确查询所需的会计师事务所信息。AccountingFirm是必需的查询字段，其他字段在此查询中不涉及，因此可省略。",
                "sql": "SELECT AccountingFirm FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 1805;"
            },
            {
                "id": 6,
                "subquestion": "查询600872的董秘。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "本查询旨在获取某公司的董秘信息，具体字段为SecretaryBD，而查询是根据CompanyCode字段过滤到该公司。将CompanyCode限定为'1805'这一已知对应于全名'中炬高新技术实业(集团)股份有限公司'的代码，以确保准确查询所需的董秘信息。SecretaryBD是必需的查询字段，其他字段在此查询中不涉及，因此可省略。",
                "sql": "SELECT SecretaryBD FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 1805;"
            },
            {
                "id": 7,
                "subquestion": "查询600872的实际控制人是否发生改变。",
                "table_name": [
                    "astockshareholderdb.lc_actualcontroller"
                ],
                "reason": "本查询旨在获取某公司的实际控制人信息及其信息发布日期，具体字段为ControllerName和InfoPublDate，而查询是根据CompanyCode字段来看是否有变动。将CompanyCode限定为'1805'这一已知对应于全名'中炬高新技术实业(集团)股份有限公司'的代码，以确保准确获取实际控制人信息和发布日期。ControllerName和InfoPublDate是必需的查询字段，能够帮助判断实际控制人是否发生改变。",
                "sql": "SELECT ControllerName, InfoPublDate FROM astockshareholderdb.lc_actualcontroller WHERE CompanyCode = 1805 ORDER BY InfoPublDate DESC;"
            },
            {
                "id": 8,
                "subquestion": "如果600872的实际控制人发生改变，查询改变的时间和新实控人名称。",
                "table_name": [
                    "astockshareholderdb.lc_actualcontroller"
                ],
                "reason": "本查询旨在获取有关实际控制人变化的信息，包括变化的时间和新的控制人名称。具体字段为InfoPublDate和ControllerName，而查询是根据CompanyCode字段及EndDate字段来过滤。将CompanyCode限定为'1805'，并限制EndDate非空，以确保准确获取实际控制人信息变化的时间和新的控制人名称。InfoPublDate和ControllerName是必需的查询字段，有助于了解实控人是否发生了变化。",
                "sql": "SELECT InfoPublDate, ControllerName FROM astockshareholderdb.lc_actualcontroller WHERE CompanyCode = 1805 AND EndDate IS NOT NULL ORDER BY InfoPublDate DESC;"
            },
            {
                "id": 9,
                "subquestion": "查询600872新实际控制人的国籍。",
                "table_name": [
                    "astockshareholderdb.lc_actualcontroller"
                ],
                "reason": "本查询旨在获取某公司的新实际控制人的国籍，具体字段为NationalityDesc，而查询是根据CompanyCode字段来过滤。将CompanyCode限定为'1805'，这一值对应于实际控制人'中炬高新技术实业(集团)股份有限公司'，以确保准确获取实际控制人的国籍。NationalityDesc是必需的查询字段，能够帮助了解实控人的国籍。",
                "sql": "SELECT NationalityDesc FROM astockshareholderdb.lc_actualcontroller WHERE CompanyCode = 1805 LIMIT 1;"
            },
            {
                "id": 10,
                "subquestion": "查询新实际控制人是否有永久境外居留权。",
                "table_name": [
                    "astockshareholderdb.lc_actualcontroller"
                ],
                "reason": "本查询旨在获取某公司的新实际控制人是否拥有永久境外居留权，具体字段为PermanentResidency，而查询是根据CompanyCode字段来过滤。将CompanyCode限定为'1805'，这一值对应于实际控制人'中炬高新技术实业(集团)股份有限公司'，以确保准确获取新实际控制人相关的信息。PermanentResidency是必需的查询字段，能够帮助判断实际控制人是否拥有此权利。",
                "sql": "SELECT PermanentResidency FROM astockshareholderdb.lc_actualcontroller WHERE CompanyCode = 1805 ORDER BY InfoPublDate DESC LIMIT 1;"
            },
            {
                "id": 11,
                "subquestion": "查询600872在实控人发生变化的当年股权转让的次数。",
                "table_name": [
                    "astockshareholderdb.lc_sharetransfer"
                ],
                "reason": "本查询旨在统计某公司的实控人发生变化的当年（2019年）的股权转让次数，具体字段为股权转让日期TranDate，查询的关键在于计算相应年份内的记录数量。将CompanyCode限定为'1805'，这一值对应于实际控制人'中炬高新技术实业(集团)股份有限公司'，以确保准确获取股权转让次数。通过YEAR函数限制TranDate为2019，以仅涵盖实控人变化后的股权转让记录。",
                "sql": "SELECT COUNT(*) AS ShareTransferCount FROM astockshareholderdb.lc_sharetransfer WHERE CompanyCode = 1805 AND YEAR(TranDate) = 2019;"
            }
        ]
    },
    {
        "question": "今天是2021年12月24日，创近半年新高的股票有几只？哪些股票股价大于75，且同时当天创一年新高的是？以上股票连续两日（今日与昨日）满足上述要求的是？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2021年12月24日创近半年新高的股票数量。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "在查询中，只需考虑交易日为2021年12月24日，并确定当日是否创近半年新高。因此，我选择了TradingDay作为限制日期，并使用IfHighestHPriceRMSix来判断新高。最终，我的查询返回了在这个日期创近半年新高的股票数量，即使用COUNT(*)进行统计，是本次查询有效记录的关键。",
                "sql": "SELECT COUNT(*) AS NewHighCount FROM astockmarketquotesdb.cs_stockpatterns WHERE DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24' AND IfHighestHPriceRMSix = 1;"
            },
            {
                "id": 2,
                "subquestion": "查询2021年12月24日股价大于75的股票。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "在查询中，我选择了ClosePrice作为条件，在2021年12月24日筛选出所有股价大于75的股票，并通过InnerCode返回符合条件的证券标识。使用了TradingDay限制特定交易日，以确保查询结果的时间准确性。",
                "sql": "SELECT InnerCode FROM astockmarketquotesdb.qt_dailyquote WHERE ClosePrice > 75 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';"
            },
            {
                "id": 3,
                "subquestion": "查询2021年12月24日当天创一年新高的股票。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询2021年12月24日股价大于75而且当天创一年新高的股票。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询2021年12月23日创近半年新高的股票。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "查询2021年12月23日当天股价大于75且创一年新高的股票。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 7,
                "subquestion": "找出2021年12月24日与2021年12月23日同时满足条件的股票名称。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "2019年度（合并）常熟银行的职工总数有多少人？该公司披露的硕士或研究生学历（及以上）的有多少人？2021年1月1日至年底退休了多少人？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2019年度（合并）常熟银行的职工总数。",
                "table_name": [
                    "astockoperationsdb.lc_staff"
                ],
                "reason": "选择字段时，决定只统计员工数量 (EmployeeSum)，因为我们需要查询合并情况下的职工总数。字段限制条件中，CompanyCode 设置为 71598 是因为我们已知的公司代码；MergeMark = 1 以确保只查询合并类型的数据；ClassfiedMethod = 9000 用于筛选职工总数分类；而 EndDate = '2019-12-31' 确保查询年份的准确性。",
                "sql": "SELECT SUM(EmployeeSum) AS TotalEmployeeCount FROM astockoperationsdb.lc_staff WHERE CompanyCode = 71598 AND MergeMark = 1 AND ClassfiedMethod = 9000 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d')) = '2019-12-31';"
            },
            {
                "id": 2,
                "subquestion": "查询常熟银行在2019年披露的硕士或研究生学历（及以上）职工的数量。",
                "table_name": [
                    "astockoperationsdb.lc_staff"
                ],
                "reason": "选择字段时，SUM(EmployeeSum) 统计硕士及以上的职工数量是查询的核心，确保在选择中只聚焦于所需的信息。字段限制条件中，CompanyCode = 71598 是已知公司代码；ClassfiedMethod = 5000 确保查询涉及教育程度；TypeCode IN (5005, 5010, 5015) 使得只统计博士后、博士、硕士的职工；InfoSource = '年度报告' 用于限定数据来源；而 YEAR(EndDate) = 2019 则确保结果为2019年的确切数据。",
                "sql": "SELECT SUM(EmployeeSum) AS MasterAndAboveCount FROM astockoperationsdb.lc_staff WHERE CompanyCode = 71598 AND ClassfiedMethod = 5000 AND TypeCode IN (5005, 5010, 5015) AND InfoSource = '年度报告' AND YEAR(EndDate) = 2019;"
            },
            {
                "id": 3,
                "subquestion": "查询从2021年1月1日至年底常熟银行退休的职工总数。",
                "table_name": [
                    "astockoperationsdb.lc_staff"
                ],
                "reason": "选择字段时，SUM(EmployeeSum) 统计退休职工总数是查询的核心。字段限制条件中，CompanyCode 设置为 71598 是已知的公司代码；ClassfiedMethod = 9300 确保查询范围限定为退休人数；而 DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2021-01-01' AND '2021-12-31' 确保得到的结果仅限于2021年的记录；InfoSource = '年度报告' 则确保数据的来源是准确可信的。",
                "sql": "SELECT SUM(EmployeeSum) AS RetiredCount FROM astockoperationsdb.lc_staff WHERE CompanyCode = 71598 AND ClassfiedMethod = 9300 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2020-01-01' AND '2020-12-31' AND InfoSource = '年度报告';"
            }
        ]
    },
    {
        "question": "互联网金融属于科技概念的什么分支？这个概念的英文名称是什么？截至2021年底，这个概念有多少只股票（不包含已经调出的）？调出了多少只股票？哪些是2020年纳入的，A股简称分别叫什么？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询互联网金融属于科技概念的具体分支。",
                "table_name": [
                    "astockindustrydb.lc_conceptlist"
                ],
                "reason": "我选择了表中的SubclassCode和SubclassName字段来获取互联网金融的具体分支信息。使用ClassName限制为科技分类，确保了查询是针对科技概念的。同时，ConceptName使用LIKE匹配确定查找互联网金融概念，使得结果精确。而ConceptState = 1的条件确保只查询状态正常的概念，避免任何终止的概念被纳入查询结果。",
                "sql": "SELECT SubclassCode, SubclassName FROM astockindustrydb.lc_conceptlist WHERE ClassName = '科技' AND ConceptName LIKE '%互联网金融%' AND ConceptState = 1;"
            },
            {
                "id": 2,
                "subquestion": "查询互联网金融的英文名称。",
                "table_name": [
                    "astockindustrydb.lc_conceptlist"
                ],
                "reason": "我选择了ConceptEngName字段返回互联网金融的英文名称。使用ConceptName通过LIKE来过滤出相关的概念，保证查询范围的准确性。同时，ConceptState限制为1，确保仅返回有效的概念信息，从而保证查询结果的可靠性。",
                "sql": "SELECT ConceptEngName FROM astockindustrydb.lc_conceptlist WHERE ConceptName LIKE '%互联网金融%' AND ConceptState = 1;"
            },
            {
                "id": 3,
                "subquestion": "查询互联网金融的所属概念板块编码是多少？",
                "table_name": [
                    "astockindustrydb.lc_conceptlist"
                ],
                "reason": "我选择了ConceptCode字段来返回互联网金融的所属概念板块编码。通过ConceptName的LIKE过滤查找相关概念名称，并且使用ConceptState=1条件确保返回的数据是有效的，从而提高查询结果的可靠性。",
                "sql": "SELECT ConceptCode FROM astockindustrydb.lc_conceptlist WHERE ConceptName LIKE '%互联网金融%' AND ConceptState = 1;"
            },
            {
                "id": 4,
                "subquestion": "查询截至2021年底互联网金融概念的股票数量（不包含已经调出的）。",
                "table_name": [
                    "astockindustrydb.lc_coconcept"
                ],
                "reason": "我选择了ConceptCode作为查询字段，以获取互联网金融概念的股票数量。使用IndiState确保只计入处于正常状态的记录，并且通过InDate和OutDate的条件限制，确保计算范围是截至2021年底的有效数据，从而提高查询结果的准确性。",
                "sql": "SELECT COUNT(*) AS ActiveStockCount FROM astockindustrydb.lc_coconcept WHERE ConceptCode = 11040004 AND IndiState = 1 AND DATE(STR_TO_DATE(InDate, '%Y-%m-%d %H:%i:%s.%f')) <= '2021-12-31' AND (OutDate IS NULL OR DATE(STR_TO_DATE(OutDate, '%Y-%m-%d %H:%i:%s.%f')) > '2021-12-31');"
            },
            {
                "id": 5,
                "subquestion": "查询互联网金融概念截至2021年底调出的股票数量。",
                "table_name": [
                    "astockindustrydb.lc_coconcept"
                ],
                "reason": "我选择了InnerCode字段计算截至2021年底互联网金融概念的调出股票数量。使用ConceptCode保证查询的是互联网金融的相关股票，IndiState确保只计入正常状态的记录，OutDate的条件筛选确保只关注调出日期在2021年底之前的股票。",
                "sql": "SELECT COUNT(DISTINCT InnerCode) AS StockCount FROM astockindustrydb.lc_coconcept WHERE ConceptCode = 11040004 AND IndiState = 1 AND DATE(STR_TO_DATE(OutDate, '%Y-%m-%d %H:%i:%s.%f')) <= '2021-12-31';"
            },
            {
                "id": 6,
                "subquestion": "查询2020年纳入互联网金融概念的所有股票",
                "table_name": [
                    "astockindustrydb.lc_coconcept"
                ],
                "reason": "我选择了InnerCode字段来查询2020年纳入互联网金融概念的所有股票。使用ConceptCode确保只查询互联网金融的相关股票，YEAR(InDate) = 2020保证了只计入在2020年内调入的记录，同时IndiState被限定为1，确保这些股票是正常状态。",
                "sql": "SELECT InnerCode FROM astockindustrydb.lc_coconcept WHERE ConceptCode = 11040004 AND YEAR(InDate) = 2020"
            },
            {
                "id": 7,
                "subquestion": "查询2020年纳入互联网金融概念的所有股票的A股简称。",
                "table_name": [
                    "constantdb.secumain"
                ],
                "reason": "我选择了SecuAbbr字段来查询2020年纳入互联网金融概念的所有股票的A股简称。通过设定ConceptCode为11040004确保查询的是属于互联网金融的股票，同时限定SecuCategory为1以确保只获取A股。",
                "sql": "SELECT SecuAbbr FROM constantdb.secumain WHERE SecuCategory = 1 AND InnerCode IN ()"
            }
        ]
    },
    {
        "question": "化工纳入过多少个子类概念？ 2021年纳入过多少个？分别是？ 2021年纳入的这些概念的股票有多少只？分别属于哪些三级行业（仅考虑2021年新纳入的行业数据）？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询整体化工概念包含的子类概念数量。",
                "table_name": [
                    "astockindustrydb.lc_conceptlist"
                ],
                "reason": "该查询选择了 SubclassName 字段用于限定化工子类概念，ConceptName 的计数是明确的数量需求。SubClassName = '化工' 是唯一的约束条件，明确了查询目标。没有使用其他字段如 ID、ClassCode 等，因为它们无法提供直接统计数量的信息。",
                "sql": "SELECT SubclassName, Count(ConceptName) FROM astockindustrydb.lc_conceptlist WHERE SubclassName = '化工';"
            },
            {
                "id": 2,
                "subquestion": "查询2021年纳入的化工子类概念数量。",
                "table_name": [
                    "astockindustrydb.lc_coconcept",
                    "astockindustrydb.lc_conceptlist"
                ],
                "reason": "我选择了 COUNT(distinct ConceptCode) 作为查询的核心字段，目的是要统计2021年中纳入的有关化工子类概念的数量。限制条件使用了 YEAR(InDate) = 2021 来确保时间的准确性，并通过一个子查询来确保 ConceptCode 必须是化工子类的概念，这样可以获取与目标相关的唯一概念的数量。这两个条件确保了数据的精准和相关性，满足了需求。",
                "sql": "SELECT COUNT(distinct ConceptCode) FROM astockindustrydb.lc_COconcept WHERE YEAR(Indate) = 2021 AND  ConceptCode IN (SELECT ConceptCode FROM astockindustrydb.lc_conceptlist WHERE SubclassName = '化工') ;"
            },
            {
                "id": 3,
                "subquestion": "列出2021年纳入的所有化工子类概念。",
                "table_name": [
                    "astockindustrydb.lc_coconcept",
                    "astockindustrydb.lc_conceptlist"
                ],
                "reason": "我选择了 DISTINCT ConceptCode 作为查询的核心字段，目的是列出2021年中纳入的所有化工子类概念。限制条件使用了 YEAR(InDate) = 2021 来确保只筛选出2021年的数据，另外通过子查询确保 ConceptCode 仅取化工子类的概念，这样可以获取与目标相关的所有概念代码。这些限制确保了数据的准确性与相关性，满足了业务查询要求。",
                "sql": "SELECT distinct ConceptCode FROM astockindustrydb.lc_COconcept WHERE YEAR(Indate) = 2021 AND  ConceptCode IN (SELECT ConceptCode FROM astockindustrydb.lc_conceptlist WHERE SubclassName = '化工') ;"
            },
            {
                "id": 4,
                "subquestion": "查询2021年纳入的化工子类概念的相关股票数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询2021年纳入的化工子类概念对应的三级行业分类。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "天顺风能披露了多少次担保信息？ 他一共披露过多少次借贷信息？2021年披露了多少次？ 他一共披露了多少次重大资产重组信息？2021年披露了多少次？2020年披露了多少次？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询天顺风能披露的担保信息次数。",
                "table_name": [
                    "astockeventsdb.lc_warrant"
                ],
                "reason": "选择了 CompanyCode 字段来准确地过滤出天顺风能 (81722) 的担保信息。另外，COUNT(*) 是必需的，因为我们需要计算条目总数，而与其他字段的取值及信息无关，这使得查询目标更加清晰。特别是 WHERE 子句有效限制为公司代码 81722，以仅计数相关记录的数量，这样能够精确返回查询需求，其他字段在此查询中并不需要，因而被省略。",
                "sql": "SELECT COUNT(*) AS TotalGuaranteeInfo FROM astockeventsdb.lc_warrant WHERE CompanyCode = 81722;"
            },
            {
                "id": 2,
                "subquestion": "查询天顺风能披露的借贷信息总次数。",
                "table_name": [
                    "astockeventsdb.lc_credit"
                ],
                "reason": "选择了 CompanyCode 字段来筛选天顺风能 (81722) 的借贷信息。使用 COUNT(*) 统计所有符合条件的记录，使查询更为高效。特别是 WHERE 子句有效地限制结果范围为公司代码 81722，以致统计的准确性高，其他字段在该查询中不需要，因此被省略。",
                "sql": "SELECT COUNT(*) AS LoanInfoCount FROM astockeventsdb.lc_credit WHERE CompanyCode = 81722;"
            },
            {
                "id": 3,
                "subquestion": "查询天顺风能在2021年披露的借贷信息次数。",
                "table_name": [
                    "astockeventsdb.lc_credit"
                ],
                "reason": "选择了 CompanyCode 字段以筛选特定于天顺风能 (81722) 的借贷信息。使用 COUNT(*) 统计在2021年公开的所有借贷记录，使查询目标明确且高效。特别是 WHERE 子句有效限制了结果范围为 2021 年，因此确保数据准确性，同时日期格式化处理确保有效地匹配字符串日期，其他字段在此查询中不需要。",
                "sql": "SELECT COUNT(*) AS LoanInfoCount FROM astockeventsdb.lc_credit WHERE CompanyCode = 81722 AND DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2021-01-01' AND '2021-12-31';"
            },
            {
                "id": 4,
                "subquestion": "查询天顺风能披露的重大资产重组信息总次数。",
                "table_name": [
                    "astockeventsdb.lc_regroup"
                ],
                "reason": "选择了 CompanyCode 字段来过滤出天顺风能 (81722) 的相关重组信息。同时，使用 EventType 过滤条件确保只统计重要的资产重组事件（如资产出售、置换、债务重组等）。 COUNT(*) 高效地统计所有符合条件的记录，总结总次数。其他字段在此查询中不需要，因而被省略。",
                "sql": "SELECT COUNT(*) AS TotalRestructuringInfo FROM astockeventsdb.lc_regroup WHERE CompanyCode = 81722 AND EventType IN (4, 5, 6, 81) ;"
            },
            {
                "id": 5,
                "subquestion": "查询天顺风能在2021年披露的重大资产重组信息次数。",
                "table_name": [
                    "astockeventsdb.lc_regroup"
                ],
                "reason": "选择了 CompanyCode 字段以筛选天顺风能 (81722) 的重组信息，EventType 限制为特定的重组类型，确保只计算资产出售、置换、债务重组及减资分立相关的记录，同时 YEAR(InfoPublDate) 确保统计的时间范围为2021年。使用 COUNT(*) 统计所有符合条件的记录，从而有效获得重组信息总次数，其他字段在该查询中不需要，因此省略。",
                "sql": "SELECT COUNT(*) AS RestructureCount FROM astockeventsdb.lc_regroup WHERE CompanyCode = 81722 AND EventType IN (4, 5, 6, 81) AND YEAR(InfoPublDate) = 2021;"
            },
            {
                "id": 6,
                "subquestion": "查询天顺风能在2020年披露的重大资产重组信息次数。",
                "table_name": [
                    "astockeventsdb.lc_regroup"
                ],
                "reason": "选择了 CompanyCode 字段以筛选天顺风能 (81722) 的重组信息。EventType 限制为与重大资产重组相关的类型，以确保数据的准确性。同时使用 YEAR(InfoPublDate) 确保统计的年份为2020年。使用 COUNT(*) 统计所有符合条件的记录，从而有效获取在2020年披露的重大资产重组信息的总次数，其他字段在该查询中不需要，因此被省略。",
                "sql": "SELECT COUNT(*) AS RestructureCount FROM astockeventsdb.lc_regroup WHERE CompanyCode = 81722 AND EventType IN (4, 5, 6, 81) AND YEAR(InfoPublDate) = 2021;"
            }
        ]
    },
    {
        "question": "天顺风能属于哪个三级行业？ 2021年发布的该行业的股票有多少只？ 该行业8月公布的最高行业营业收入是多少万元？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询天顺风能所属的三级行业。",
                "table_name": [
                    "astockindustrydb.lc_exgindustry"
                ],
                "reason": "在该查询中，我们选择了字段CompanyCode（81722）作为条件，以精确锁定到天顺风能这家公司。同时，使用了行业划分标准Standard（38），确保获取的是当前新版申万行业分类的数据。IfPerformed（1）用于过滤只获取已执行的记录，确保数据的有效性。我们的目标是提取该公司对应的三级行业名称ThirdIndustryName，因此在SELECT中选择了这个字段。查询中的限制条件设置得当，能够得到准确和丰富的信息。",
                "sql": "SELECT ThirdIndustryName FROM astockindustrydb.lc_exgindustry WHERE CompanyCode = 81722 AND Standard = 38 AND IfPerformed = 1;"
            },
            {
                "id": 2,
                "subquestion": "查询2021年属于该三级行业的股票数量。(注意这里代之风电零部件，由上一个)",
                "table_name": [
                    "astockindustrydb.lc_exgindustry"
                ],
                "reason": "在该查询中，利用了ThirdIndustryName字段使用LIKE操作符搜索包含'风电零部件'的记录，以聚焦特定的三级行业。同时通过对InsertTime字段运用日期范围限制，确保查询统计的股票数量仅限于2021年内的信息发布。这个设计有助于获取2021年属于风电零部件行业的所有股票数量，以实现准确的数据统计。",
                "sql": "SELECT COUNT(*) AS StockCount FROM astockindustrydb.lc_exgindustry WHERE ThirdIndustryName LIKE '%风电零部件%' AND DATE(STR_TO_DATE(InsertTime, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2021-01-01' AND '2021-12-31' ;"
            },
            {
                "id": 3,
                "subquestion": "查询该三级行业在2021年8月公布的最高营业收入。",
                "table_name": [
                    "astockindustrydb.lc_indfinindicators"
                ],
                "reason": "在该查询中，使用IndustryName字段筛选出特定行业（风电零部件）的数据，并通过EndDate字段限制在2021年8月内。我们计算的最大值是使用IndOperatingRevenue字段来获得在指定条件下的最高营业收入。这些选择确保了查询结果能够准确反映出该行业在特定时间内的最高营业收入。",
                "sql": "SELECT MAX(IndOperatingRevenue) AS HighestOperatingRevenue FROM astockindustrydb.lc_indfinindicators WHERE IndustryName = '风电零部件' AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2021-08-01' AND '2021-08-31';  "
            }
        ]
    },
    {
        "question": "首钢股份发布增发和配股次数分别是多少次？ 该股每次增发预计募集资金总额分别是？增发预计募集资金总额最高的公司中文全称是？金额是？ 该股每次配股发行费用总额分别是？配股发行费用总额最高的中文全称是？金额是？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询首钢股份发布的增发次数。",
                "table_name": [
                    "astockfinancedb.lc_ashareseasonednewissue"
                ],
                "reason": "选择 InnerCode 和 IfEffected 字段，以确保查询依据是特定公司的增发记录，并且只统计有效的增发。查询字段 Count(*) 是关键，用于计算首钢股份的增发次数。通过将 InnerCode 限制为 579 和 IfEffected 限制为 1，确保结果的准确性和相关性。",
                "sql": "SELECT COUNT(*) AS IncreaseIssueCount FROM astockfinancedb.lc_ashareseasonednewissue WHERE InnerCode = 579 AND IfEffected = 1;"
            },
            {
                "id": 2,
                "subquestion": "查询首钢股份发布的配股次数。",
                "table_name": [
                    "astockfinancedb.lc_ashareplacement"
                ],
                "reason": "选择 InnerCode 字段，以确保查询的依据是特定公司的配股记录。查询字段 Count(*) 是关键，用于计算首钢股份的配股次数。通过将 InnerCode 限制为 579，确保结果的准确性和相关性。",
                "sql": "SELECT COUNT(*) AS PlacementCount FROM astockfinancedb.lc_ashareplacement WHERE InnerCode = 579;"
            },
            {
                "id": 3,
                "subquestion": "查询首钢股份每次增发预计募集资金总额。",
                "table_name": [
                    "astockfinancedb.lc_ashareseasonednewissue"
                ],
                "reason": "选择 AdvanceDate 和 PlannedProceeds 字段，以确保查询包含每次增发的时间和预计募集资金。InnerCode 限制为579，以获取首钢股份的记录，IfEffected 限制为1，以确保结果只包含有效的增发信息。",
                "sql": "SELECT AdvanceDate, PlannedProceeds FROM astockfinancedb.lc_ashareseasonednewissue WHERE InnerCode = 579 AND IfEffected = 1;"
            },
            {
                "id": 4,
                "subquestion": "查询增发预计募集资金总额最高的公司的中文全称。",
                "table_name": [
                    "astockfinancedb.lc_ashareseasonednewissue"
                ],
                "reason": "应根据 PlannedProceeds 排序来查询预计募集资金总额最高的公司的中文全称。正因为需要比较所有公司的数据，所以不能限制 InnerCode，仅需用 ChiName 字段来返回公司名称，并对 PlannedProceeds 降序排序显示最高值。原 SQL 查询使用了不合适的 filtering，仅能返回首钢股份的信息。",
                "sql": "SELECT InnerCode FROM astockfinancedb.lc_ashareseasonednewissue WHERE InnerCode = 579 ORDER BY PlannedProceeds DESC LIMIT 1;"
            },
            {
                "id": 5,
                "subquestion": "查询增发预计募集资金总额最高的金额。",
                "table_name": [
                    "astockfinancedb.lc_ashareseasonednewissue"
                ],
                "reason": "当前查询使用 MAX(PlannedProceeds) 计算预期募集资金总额的最高值，同时限制 InnerCode 为 579，以只查询首钢股份的记录。该条件确保返回的是有效的增发项目的最大预期募集资金数额。",
                "sql": "SELECT MAX(PlannedProceeds) AS MaxPlannedProceeds FROM astockfinancedb.lc_ashareseasonednewissue WHERE InnerCode = 579 AND IfEffected = 1;"
            },
            {
                "id": 6,
                "subquestion": "查询首钢股份每次配股发行费用总额。",
                "table_name": [
                    "astockfinancedb.lc_ashareplacement"
                ],
                "reason": "选择 PlaCost 字段，这是获取首钢股份每次配股发行费用总额的关键。通过限制 InnerCode 为 579，确保仅查询该公司的配股记录，以满足查询要求。",
                "sql": "SELECT PlaCost FROM astockfinancedb.lc_ashareplacement WHERE InnerCode = 579;"
            },
            {
                "id": 7,
                "subquestion": "查询配股发行费用总额最高的公司的中文全称。",
                "table_name": [
                    "astockfinancedb.lc_ashareplacement",
                    "astockfinancedb.lc_ashareplacement"
                ],
                "reason": "查询要求获取所有公司的配股发行费用总额最高公司的中文全称，但原 SQL 只针对首钢股份进行了比较。应更正为选择 ChiName 字段并在整个表中查找最大的 PlaCost，而不是仅查询 InnerCode 为579 的记录。",
                "sql": "SELECT InnerCode FROM astockfinancedb.lc_ashareplacement WHERE PlaCost = (SELECT MAX(PlaCost) FROM astockfinancedb.lc_ashareplacement WHERE InnerCode = 579) LIMIT 1;"
            },
            {
                "id": 8,
                "subquestion": "查询配股发行费用总额最高的金额。",
                "table_name": [
                    "astockfinancedb.lc_ashareplacement"
                ],
                "reason": "查询获取的是配股发行费用的最高金额，但当前 SQL 查询使用了 InnerCode = 579 的限制，仅关注首钢股份。为了得到全表的最大发行费用应移除该限制。应更正为选择 MAX(PlaCost) 在整个表中进行比较。",
                "sql": "SELECT MAX(PlaCost) AS MaxIssuanceCost FROM astockfinancedb.lc_ashareplacement WHERE InnerCode = 579;"
            }
        ]
    },
    {
        "question": "新天绿能2020年年度研发投入合计是多少元？研发人员数量为多少人？（合并报表调整后的，金额保留2位小数） 费用化研发占比为？资本化研发占比为？ 上一年度研发投入最高的三家公司是？（回答中文简称）",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询新天绿能2020年合并报表调整后的年度研发投入合计金额，保留2位小数。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在查询新天绿能2020年合并报表调整后的年度研发投入合计金额时，选取的字段包括TotalRDInput，这是查询的关键字段，直接用于输出。其他字段如InnerCode, CompanyCode, InfoSourceCode, EndDate, IfMerged 和 IfAdjusted等则被用于限制条件，以确保查询结果的准确性。限制条件具体包括：InnerCode 为199617（特定公司），InfoSourceCode 为110101（年度报告），IfMerged 为1（合并报表），IfAdjusted 为2（调整后数据）以及确保EndDate精确到2020年12月31日，从而实现对数据的精确过滤和提取。",
                "sql": "SELECT ROUND(TotalRDInput, 2) FROM astockfinancedb.lc_intassetsdetail WHERE InnerCode = 199617 AND InfoSourceCode = 110101 AND IfMerged = 1 AND IfAdjusted = 2 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2020-12-31';"
            },
            {
                "id": 2,
                "subquestion": "查询新天绿能2020年的研发人员数量。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在查询新天绿能2020年的研发人员数量时，选取的字段为SUM(RDStaffNum)，这是查询的核心字段，直接用于输出。其他字段如CompanyCode和EndDate通过WHERE条件进行筛选，以确保查询结果的针对性和有效性。限制条件包括：CompanyCode设置为165649以目标新天绿能，EndDate使用LIKE '2020%'确保仅获取2020年内的数据，以及IfMerged设置为1以限定为合并报表数据，这些都作为查询条件保证了结果的准确性。",
                "sql": "SELECT SUM(RDStaffNum) FROM astockfinancedb.lc_intassetsdetail WHERE CompanyCode=165649 AND EndDate LIKE '2020%' AND IfMerged=1"
            },
            {
                "id": 3,
                "subquestion": "查询新天绿能2020年费用化研发投入占比。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在查询新天绿能2020年费用化研发投入占比时，选取的字段为(ExpensedRDInput / TotalRDInput) * 100 AS RDInputRatio，这是计算占比的核心公式，输出的关键字段。其他字段InnerCode和InfoSourceCode用于WHERE条件进行数据限制，以确保查询结果的相关性和准确性。限制条件包括：InnerCode 设定为199617以目标特定公司，InfoSourceCode 设定为110101确保获取定期报告类型，以及将EndDate限制为2020年12月31日，确保查询范围精准，以获取年度数据。",
                "sql": "SELECT (ExpensedRDInput / TotalRDInput) * 100 AS RDInputRatio FROM astockfinancedb.lc_intassetsdetail WHERE InnerCode = 199617 AND InfoSourceCode = 110101 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2020-12-31';"
            },
            {
                "id": 4,
                "subquestion": "查询新天绿能2020年资本化研发投入占比。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在查询新天绿能2020年资本化研发投入占比时，选取的字段为CapitalizedRDInputR，这是关键字段，直接用于输出。其他字段InnerCode和InfoSourceCode 作为WHERE条件用于限制查询，以确保结果数据的相关性和准确性。限制条件包括：InnerCode设定为199617以锁定特定公司，InfoSourceCode设定为110101以确保返回的定期报告类型，以及将EndDate限制为2020年12月31日以获取特定的年度数据，这些条件保证了查询的精确性。",
                "sql": "SELECT CapitalizedRDInputR FROM astockfinancedb.lc_intassetsdetail WHERE InnerCode = 199617 AND InfoSourceCode = 110101 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2020-12-31';"
            },
            {
                "id": 5,
                "subquestion": "查询上一年度(2019)研发投入最高的三家公司，并提供它们的中文简称。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在查询2019年度研发投入最高的三家公司时，选取的字段为InnerCode，以确定目标公司。不过，该SQL查询没有直接获取公司中文简称字段，这在输出中可能造成信息缺失，实际上还应考虑与InnerCode相关的中文简称。其它限制条件包括：YEAR(EndDate) = '2019'确保仅从2019年数据中获取，IfAdjusted 和 IfMerged的设置保证了所选数据的质量和准确性。最终目标是获取研发投入最高的三家公司及其相关信息。",
                "sql": "SELECT InnerCode FROM astockfinancedb.lc_intassetsdetail WHERE YEAR(EndDate) = '2019' AND IfAdjusted = 1 AND IfMerged = 1 ORDER BY TotalRDInput DESC LIMIT 3;"
            }
        ]
    },
    {
        "question": "000958公司2021年主营业务产品有哪些？（合并报表调整后的，金额保留2位小数） 公司2021年比2020年主营业务产品减少的有？ 公司2021年度经营情况的信息发布日期是（XXXX-XX-XX）？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询000958公司2021年合并报表调整后的主营业务产品及其金额（保留2位小数）。",
                "table_name": [
                    "astockfinancedb.lc_mainoperincome"
                ],
                "reason": "选取字段Project和MainOperIncome，以展示公司的主营业务产品名称及对应的金额。公司代码限制在515以获取国家电投的相关数据，EndDate限制在2021年，以聚焦于特定年度的条目。InfoSource设置为'年度报告'确保数据的来源可靠，Classification限定为20保证筛选按产品分类的信息。每个选取的字段和条件都直接服务于获取企业2021年的主营业务产品信息和金额。",
                "sql": "SELECT Project, ROUND(MainOperIncome,2) FROM astockfinancedb.LC_MainOperIncome WHERE CompanyCode = 515 AND YEAR(EndDate) = 2021 AND InfoSource = '年度报告' AND Classification = 20;"
            },
            {
                "id": 1,
                "subquestion": "查询000958公司2020年合并报表调整后的主营业务产品及其金额（保留2位小数）。",
                "table_name": [
                    "astockfinancedb.lc_mainoperincome"
                ],
                "reason": "选取字段Project和MainOperIncome，以展示公司的主营业务产品名称及对应的金额。CompanyCode限制为515以获取国家电投的数据，EndDate限制在2020年，确保查询结果集中在特定年度的条目。InfoSource设置为'年度报告'以确保数据来源的可靠性，Classification限定为20以保证仅查询按产品分类的主营业务信息。所有选取的字段与条件均服务于获取企业2020年的主营业务产品信息和金额。",
                "sql": "SELECT Project, ROUND(MainOperIncome,2) FROM astockfinancedb.LC_MainOperIncome WHERE CompanyCode = 515 AND YEAR(EndDate) = 2020 AND InfoSource = '年度报告' AND Classification = 20;"
            },
            {
                "id": 3,
                "subquestion": "查询000958公司2021年相比2020年主营业务产品减少的产品。",
                "table_name": [
                    "astockfinancedb.lc_mainoperincome",
                    "astockfinancedb.lc_mainoperincome"
                ],
                "reason": "选择字段Project用于查找2021年相比2020年减少的产品。通过两个子查询分别获取2020年和2021年的主营业务产品。限制条件包括CompanyCode为515以筛选特定公司，EndDate用于限制在2020年和2021年的数据，InfoSource确保数据来源的可靠性，Classification保证仅查询按产品分类的主营业务信息。使用LEFT JOIN逻辑查找2021年中不再出现的2020年项目，以识别减少的产品。",
                "sql": "SELECT t2020.Project FROM (SELECT Project, ROUND(MainOperIncome, 2) AS Amount FROM astockfinancedb.LC_MainOperIncome WHERE CompanyCode = 515 AND YEAR(EndDate) = 2020 AND InfoSource = '年度报告' AND Classification = 20 ) AS t2020 LEFT JOIN (SELECT Project, ROUND(MainOperIncome, 2) AS Amount FROM astockfinancedb.LC_MainOperIncome WHERE CompanyCode = 515 AND YEAR(EndDate) = 2021 AND InfoSource = '年度报告' AND Classification = 20 ) AS t2021 ON t2020.Project = t2021.Project WHERE t2021.Project IS NULL;"
            },
            {
                "id": 4,
                "subquestion": "查询000958公司2021年度经营情况的信息发布日期。",
                "table_name": [
                    "astockfinancedb.lc_operatingstatus"
                ],
                "reason": "查询字段InfoPublDate以获取国家电投集团2021年度经营情况的发布日期。通过设置CompanyCode为515来确保仅获取该公司的数据。使用LIKE匹配'2021年度报告'的InfoSource，保证查询到的信息来源切合，可能包含不同字符格式的所有相关记录。这些字段和限制条件直接服务于寻找特定公司年度经营情况的发布日期。",
                "sql": "SELECT InfoPublDate FROM astockfinancedb.lc_operatingstatus WHERE CompanyCode = 515 AND InfoSource LIKE '%2021年度报告%';"
            }
        ]
    },
    {
        "question": "工商银行的H股代码、中文名称及英文名称分别是？ 该公司的主席及公司邮箱是？ 该公司2020年12月底披露的变更前后的员工人数为多少人？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询工商银行的H股代码。",
                "table_name": [
                    "constantdb.hk_secumain"
                ],
                "reason": "在本次查询中，我选择了表格中的关键字段。首先，CompanyCode指定为3037，这是工商银行的公司代码。其次，SecuCategory设定为3，这个值代表H股，它确保我们获取的是特定类型的证券。最后，SecuMarket设定为72，表示查询的市场为香港联交所。选择SecuCode是必选的，因为这是需要返回的H股代码。其他字段在本次查询中可以省略，因为它们不影响查询结果。",
                "sql": "SELECT SecuCode FROM constantdb.hk_secumain WHERE CompanyCode = 3037 AND SecuCategory = 3 AND SecuMarket = 72;"
            },
            {
                "id": 2,
                "subquestion": "查询工商银行的中文名称。",
                "table_name": [
                    "hkstockdb.hk_stockarchives"
                ],
                "reason": "在本次查询中，我选择了表格中的关键字段。首先，CompanyCode设定为3037，这是工商银行的公司代码，用来确保我们查询的目标是正确的。其次，只选择ChiName字段，这是我们需要返回的中文名称，其他字段在此查询中并不重要，因此可以被省略。",
                "sql": "SELECT ChiName FROM hkstockdb.hk_stockarchives WHERE CompanyCode = 3037;"
            },
            {
                "id": 3,
                "subquestion": "查询工商银行的英文名称。",
                "table_name": [
                    "constantdb.hk_secumain"
                ],
                "reason": "在本次查询中，我选择了表格中的关键字段。首先，InnerCode设定为1005749，这是工商银行的唯一识别码，用来确保我们查询的目标是具体的工商银行。其次，只选择EngName字段，这是我们需要返回的英文名称，其他字段在此查询中并不重要，因此可以被省略。",
                "sql": "SELECT EngName FROM constantdb.hk_secumain WHERE InnerCode = 1005749;"
            },
            {
                "id": 4,
                "subquestion": "查询工商银行的主席姓名。",
                "table_name": [
                    "hkstockdb.hk_stockarchives"
                ],
                "reason": "在本次查询中，我选择了表格中的关键字段。首先，CompanyCode设定为3037，这是工商银行的公司代码，用来确保我们查询的目标是具体的工商银行。其次，只选择Chairman字段，这是我们需要返回的主席姓名，其他字段在此查询中并不重要，因此可以被省略。",
                "sql": "SELECT Chairman FROM hkstockdb.hk_stockarchives WHERE CompanyCode = 3037;"
            },
            {
                "id": 5,
                "subquestion": "查询工商银行的公司邮箱。",
                "table_name": [
                    "hkstockdb.hk_stockarchives"
                ],
                "reason": "在本次查询中，我选择了表格中的关键字段。首先，CompanyCode设定为3037，这是工商银行的公司代码，用来确保我们查询的目标是具体的工商银行。其次，只选择Eail字段，这是我们需要返回的公司邮箱，其他字段在此查询中并不重要，因此可以被省略。",
                "sql": "SELECT Eail FROM hkstockdb.hk_stockarchives WHERE CompanyCode = 3037;"
            },
            {
                "id": 6,
                "subquestion": "查询工商银行在2020年12月底披露的变更前后的员工人数。",
                "table_name": [
                    "hkstockdb.hk_employeechange"
                ],
                "reason": "在本次查询中，我选择了表格中的关键字段。首先，InnerCode设定为1005749，这是工商银行的唯一识别码，用来确保我们查询的目标是具体的工商银行。其次，EffectiveDate字段的过滤条件用于限制查询结果在2020年12月1日至2020年12月31日之间，确保获取正确的变动记录。最后，IfEffected设定为1，以确保我们仅获取有效的员工数量变动记录。QuaBeforeChange和QuaAfterChange字段是我们需要返回的变更前后员工数量信息，其他字段在此查询中并不重要，因此可以被省略。",
                "sql": "SELECT QuaBeforeChange, QuaAfterChange FROM hkstockdb.hk_employeechange WHERE InnerCode = 1005749 AND DATE(STR_TO_DATE(EffectiveDate, '%Y-%m-%d %H:%i:%s.%f')) >= '2020-12-1' AND DATE(STR_TO_DATE(EffectiveDate, '%Y-%m-%d %H:%i:%s.%f')) <= '2020-12-31' AND IfEffected = 1;"
            }
        ]
    },
    {
        "question": "今天是2020年6月24日，阅文集团近一个月最高价是（保留2位小数）？近一年最低价？差额是？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询阅文集团在2020年5月24日至2020年6月24日期间的最高股价，并保留2位小数。",
                "table_name": [
                    "hkstockdb.cs_hkstockperformance"
                ],
                "reason": "查询字段中只选择了HighPrice，因为这是用户关心的最重要指标。InnerCode用于筛选特定的阅文集团，而TradingDay用于限制所查询的数据时间范围。理想情况下，TradingDay应该使用BETWEEN条件以准确获取区间内的数据而非单值条件。在此查询中，InnerCode是必选并确立了公司的身份，HighPrice作为查询结果直接反馈。",
                "sql": "SELECT ROUND(MAX(HighPriceRM), 2) AS HighPriceRM FROM hkstockdb.cs_hkstockperformance WHERE InnerCode = '1150048' AND TradingDay like '%2020-06-24%';"
            },
            {
                "id": 2,
                "subquestion": "查询阅文集团在2020年6月24日期间的最近一年最低股价。",
                "table_name": [
                    "hkstockdb.cs_hkstockperformance"
                ],
                "reason": "查询使用了 LowPriceRY 字段作为返回数据，而 InnerCode 则用于筛选阅文集团。尽管 TradingDay 被用来限制日期，但实际上仅用到2020年6月24日，并未满足查询要求中关于近一年的最低股价的条件。理想情况下，TradingDay 应使用一个范围限制，便于获取前一年频次数据的重要性。",
                "sql": "SELECT LowPriceRY FROM hkstockdb.cs_hkstockperformance WHERE InnerCode = '1150048' AND TradingDay LIKE '2020-06-24%'"
            },
            {
                "id": 3,
                "subquestion": "查询阅文集团在2020年6月24日近一个月的最高价与近一年最低价的差额。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "今天是2020年10月27日，当日收盘价第3高的港股是？成交量第3高的是？换手率第3高的是？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2020年10月27日当日收盘价并找到第3高的港股简称。",
                "table_name": [
                    "hkstockdb.cs_hkstockperformance"
                ],
                "reason": "在查询中，通过选择InnerCode字段，我们可以得到目标的港股简称。使用TradingDay作为查询的限制条件是为了确保获取2020年10月27日的相关数据。此外，使用ORDER BY ClosePrice DESC来根据收盘价的降序排列是必要的，这样能够获取到价格最高的股票记录。在LIMIT 2, 1中，2表示跳过前两条记录并获取第三条，从而找到第三高的港股简称。整体设计帮助我们清晰地定位了需要获取的数据和其排序逻辑。",
                "sql": "SELECT InnerCode FROM hkstockdb.cs_hkstockperformance WHERE TradingDay like '%2020-10-27%' ORDER BY ClosePrice DESC LIMIT 2, 1;"
            },
            {
                "id": 2,
                "subquestion": "查询2020年10月27日的成交量并找到第3高的港股简称。",
                "table_name": [
                    "hkstockdb.cs_hkstockperformance"
                ],
                "reason": "在此查询中，选择InnerCode作为目标字段，以获取2020年10月27日的港股简称。使用TradingDay作为条件限制，以确保我们获取的记录仅限于该交易日的数据。通过ORDER BY TurnoverVolume DESC来将记录按成交量降序排列，以便找到成交量的第三高记录。ORDER BY和LIMIT 2, 1的组合条件使得我们能够准确获取到需要的股票简称。这一系列的设计确保了查询的精准和目标集中。",
                "sql": "SELECT InnerCode FROM hkstockdb.cs_hkstockperformance WHERE TradingDay LIKE '2020-10-27%' ORDER BY TurnoverVolume DESC LIMIT 2,1;"
            },
            {
                "id": 3,
                "subquestion": "查询2020年10月27日的换手率并找到第3高的港股简称。",
                "table_name": [
                    "hkstockdb.cs_hkstockperformance"
                ],
                "reason": "在此SQL查询中，InnerCode字段被选择为返回的关键数据，以获取在2020年10月27日的港股简称。TradingDay作为条件限制，确保只获取到该交易日的相关记录。通过ORDER BY TurnoverRate DESC的方式，记录会按照换手率的降序排列，使得能够轻松找到换手率的第三高的记录。LIMIT 2, 1的应用使我们能够精确获取目标数据。这一系列设计展示了明确的查询目的和有效的数据筛选机制。",
                "sql": "SELECT InnerCode FROM hkstockdb.cs_hkstockperformance WHERE TradingDay LIKE '2020-10-27%' ORDER BY TurnoverRate DESC LIMIT 2,1;"
            }
        ]
    },
    {
        "question": "2019-09-02，当日收盘价最高的港股是？(以下都回答简称) 2019-09-02，当日成交量最高的是？ 2019-09-02，当日换手率最高的是？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2019-09-02当日收盘价最高的港股简称。",
                "table_name": [
                    "hkstockdb.cs_hkstockperformance"
                ],
                "reason": "本查询主要关注的是2019-09-02当天的港股收盘价最高的股票。首先，选择了InnerCode作为返回字段来获取证券的内部编码。TradingDay则用来限制查询日期，确保我们只获取指定交易日的数据。ClosePrice作为排序依据，可以帮助我们找到当天的最高收盘价。此外，通过ORDER BY和LIMIT 1，我们确保最终只得到收盘价最高的一只股票的编码。综上所述，这些选择能有效满足查询需求。",
                "sql": "SELECT InnerCode FROM hkstockdb.cs_hkstockperformance WHERE TradingDay like '%2019-09-02%' ORDER BY ClosePrice DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询2019-09-02当日成交量最高的港股简称。",
                "table_name": [
                    "hkstockdb.cs_hkstockperformance"
                ],
                "reason": "该查询的目标是查找2019-09-02当天成交量最高的港股简称。选择InnerCode作为返回字段，对于定义港股非常必要。而TradingDay则用来限制查询的日期，确保获取到2019-09-02的数据。TurnoverVolume作为排序依据，能够帮助我们找到成交量最高的证券。最终，通过ORDER BY和LIMIT 1的设置，确保得到一项结果，直接满足查询需求。",
                "sql": "SELECT InnerCode FROM hkstockdb.cs_hkstockperformance WHERE TradingDay LIKE '2019-09-02%' ORDER BY TurnoverVolume DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询2019-09-02当日换手率最高的港股简称。",
                "table_name": [
                    "hkstockdb.cs_hkstockperformance"
                ],
                "reason": "该查询旨在找出2019-09-02当天换手率最高的港股简称。选择InnerCode作为结果字段，以获取证券的内部编码。而TradingDay则用来约束查询数据的日期，确保只获取到2019-09-02的相关信息。TurnoverRate作为排序的依据，帮助我们识别出换手率最高的证券。通过ORDER BY与LIMIT 1，我们保证了结果的唯一性，直接满足查询需求。",
                "sql": "SELECT InnerCode FROM hkstockdb.cs_hkstockperformance WHERE TradingDay LIKE '2019-09-02%' ORDER BY TurnoverRate DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "2020年之间 哪些公司进行公司名称全称变更，公司代码是什么？ 这些公司A股证券代码分别是什么？ 这些公司的证券内部编码是多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2020年期间进行公司名称全称变更的公司及其公司代码。",
                "table_name": [
                    "astockbasicinfodb.lc_namechange"
                ],
                "reason": "此次查询选择了CompanyCode和ChiName字段以确保返回公司代码和中文名称信息。限制条件中，ChangeDate的日期设定在2020年1月1日至2020年12月31日，确保覆盖了整个查询需求的时间范围。该时间限制与ChangeDate字段的取值直接相关，能够有效筛选出所需的公司名称变更数据。",
                "sql": "SELECT CompanyCode, ChiName FROM astockbasicinfodb.lc_namechange WHERE DATE(STR_TO_DATE(ChangeDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2020-01-01' AND '2020-12-31';"
            },
            {
                "id": 2,
                "subquestion": "查询上述公司对应的A股证券代码。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives",
                    "astockbasicinfodb.lc_namechange"
                ],
                "reason": "此次查询选择了AStockCode字段以确保返回A股证券代码。同时，使用CompanyCode字段作为连接条件，以获取在2020年期间进行公司名称更改的公司。限制条件中，ChangeDate的日期设定在2020年1月1日至2020年12月31日，以确保仅获取该时间段内的变更记录，从而有效筛选出需要的公司证券代码。",
                "sql": "SELECT AStockCode FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode IN (SELECT CompanyCode FROM astockbasicinfodb.lc_namechange WHERE DATE(STR_TO_DATE(ChangeDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2020-01-01' AND '2020-12-31');"
            },
            {
                "id": 3,
                "subquestion": "查询上述公司对应的证券内部编码。",
                "table_name": [
                    "constantdb.secumain",
                    "astockbasicinfodb.lc_namechange"
                ],
                "reason": "此次查询选择了InnerCode字段以确保返回证券内部编码，按需求提取相应的数据。同时，使用CompanyCode作为连接条件，以获取在2020年期间进行公司名称更改的公司。限制条件中，ChangeDate的日期设定为2020年1月1日至2020年12月31日，确保仅获取该时间段内的变更记录，从而有效筛选出需要的证券内部编码。",
                "sql": "SELECT InnerCode FROM constantdb.secumain WHERE CompanyCode IN (SELECT CompanyCode FROM astockbasicinfodb.lc_namechange WHERE DATE(STR_TO_DATE(ChangeDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2020-01-01' AND '2020-12-31');"
            }
        ]
    },
    {
        "question": "2021-12-31报告期内，查询总资产最高的公司是? 经营活动产生的现金流量净额最高的公司是？ 这两个公司净利润差额是？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2021-12-31报告期内总资产最高的公司。",
                "table_name": [
                    "astockfinancedb.lc_balancesheetall"
                ],
                "reason": "在查询中，我们选择了CompanyCode作为要返回的字段，因为它能够指明具体公司的身份，而TotalAssets是我们筛选的关键字段。限制条件中的EndDate确保查询集中于2021年12月31日的报告，而InfoSourceCode = 110101确保只返回年度报告的数据，这样可以保证数据的有效性和权威性。",
                "sql": "SELECT CompanyCode FROM astockfinancedb.lc_balancesheetall WHERE DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31' AND InfoSourceCode = 110101 ORDER BY TotalAssets DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询2021-12-31报告期内经营活动产生的现金流量净额最高的公司。",
                "table_name": [
                    "astockfinancedb.lc_cashflowstatementall"
                ],
                "reason": "在查询中，我们选择CompanyCode作为返回的字段，以便识别具有最高经营活动现金流量净额的公司，同时使用NetOperateCashFlow进行排序，确保查看报告期内现金流量的高低。限制条件EndDate确保只包含2021年12月31日的报告数据，这样可以精准筛选出目标公司的经营表现。",
                "sql": "SELECT CompanyCode FROM astockfinancedb.lc_cashflowstatementall WHERE DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31' ORDER BY NetOperateCashFlow DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询2021-12-31报告期内总资产最高公司的净利润。",
                "table_name": [
                    "astockfinancedb.lc_balancesheetall"
                ],
                "reason": "当前的 SQL 查询只选择了TotalAssets，但未涉及取决于获取的净利润。为了查询2021-12-31报告期内总资产最高公司的净利润，我们需要连接其他表格以获取净利润信息。当前的查询无法提供所需要的信息。",
                "sql": "SELECT TotalAssets FROM astockfinancedb.lc_balancesheetall WHERE DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31' AND InfoSourceCode = 110101 ORDER BY TotalAssets DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询2021-12-31报告期内经营活动产生的现金流量净额最高公司的净利润。",
                "table_name": [
                    "astockfinancedb.lc_balancesheetall"
                ],
                "reason": "当前的 SQL 查询使用了SELECT *，但未能提供经营活动现金流量净额和净利润的数据。虽然设置了CompanyCode、EndDate及InfoSourceCode，但没有合适地连接到包含净利润的数据表。为了实现查询的要求，需联接现金流量表获取相关的净利润数据。",
                "sql": "SELECT * FROM astockfinancedb.lc_balancesheetall WHERE DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31' AND InfoSourceCode = 110101 AND companycode = 76067;"
            },
            {
                "id": 5,
                "subquestion": "查询2021-12-31报告期内总资产最高公司与经营活动产生的现金流量净额最高公司的净利润差额。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "2020年4月涨幅前10的港股股票有哪些?2020年5月涨幅前10的港股股票有哪些?2020年4月涨幅前十的股票中，5月涨幅最小的是？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2020年4月涨幅前10的港股股票及其涨幅。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 2,
                "subquestion": "查询2020年5月涨幅前10的港股股票及其涨幅。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "从2020年4月涨幅前10的港股股票中，查询2020年5月的涨幅。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "确定2020年4月涨幅前10的港股股票中，5月涨幅最小的股票及其相关数据。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "东航物流的注册邮箱是什么？该公司的实控人是谁？该实控人名下一共有多少家公司？这些公司从事物流业务的有多少家？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询东航物流的注册邮箱。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "在这个查询中，我从表lc_stockarchives中选取了ContactEmail（联系人电子邮箱）作为目标字段，因为这是我们想要获取的东航物流的注册邮箱。CompanyCode（公司代码）用作限制条件，以确保只筛选出公司代码为338255的相关记录，从而精确定位到东航物流。没有其他额外的字段或条件是必要的，因为目标明确且独立。此查询能够快速且准确地返回所需信息。",
                "sql": "SELECT ContactEmail FROM AStockBasicInfoDB.LC_StockArchives WHERE CompanyCode = 338255;"
            },
            {
                "id": 2,
                "subquestion": "查询东航物流的实际控制人。",
                "table_name": [
                    "astockshareholderdb.lc_actualcontroller"
                ],
                "reason": "在这个查询中，我从表lc_actualcontroller中选取了ControllerName（实际控制人）作为目标字段，因为这是我们希望获取的东航物流的实际控制人信息。CompanyCode（公司代码）作为过滤条件，以确保只选取出代码为338255的相关记录，从而精确匹配东航物流的实际控制人。没有其他额外的字段或条件是必要的，因为查询目标清晰且直接。",
                "sql": "SELECT ControllerName FROM astockshareholderdb.lc_actualcontroller WHERE CompanyCode = 338255;"
            },
            {
                "id": 3,
                "subquestion": "查询该实控人名下的公司总数。",
                "table_name": [
                    "astockshareholderdb.lc_actualcontroller",
                    "astockshareholderdb.lc_actualcontroller"
                ],
                "reason": "在这个查询中，我从表lc_actualcontroller中选取了COUNT(DISTINCT CompanyCode)作为目标字段，用于计数每位实际控制人名下的公司总数。通过使用ControllerCode作为限制条件，以确保只统计与代码为338255的东航物流相关的实际控制人所有公司。子查询能够精确找到东航物流的实际控制人并返回他们名下的所有公司，确保了计算的准确性和相关性。",
                "sql": "SELECT COUNT(DISTINCT CompanyCode) AS TotalCompanies FROM astockshareholderdb.lc_actualcontroller WHERE ControllerCode IN (SELECT ControllerCode FROM astockshareholderdb.lc_actualcontroller WHERE CompanyCode = 338255);"
            },
            {
                "id": 4,
                "subquestion": "查询该实控人名下从事物流业务的公司数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "航锦科技股份有限公司是否变更过公司名称？该公司涉及回购的最大的一笔金额是多少？该年度前十大股东的持股比例变成了多少？当年公司的技术与生产人员一共有多少人？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询航锦科技股份有限公司的公司名称变更历史。",
                "table_name": [
                    "astockbasicinfodb.lc_namechange"
                ],
                "reason": "选择了字段 CompanyCode 作为查询的限制条件，依据题目知道该公司代码为414，以此字段过滤出航锦科技股份有限公司的历史名称变更记录。SQL片段使用 COUNT(*) 统计名称变更记录的条数。其他字段虽然存在于数据表中，但在本次查询中并不重要，因此未被选取。查询条件 CompanyCode 是唯一必要的限制条件，确保只获取到航锦科技股份有限公司的相关数据。",
                "sql": "SELECT COUNT(*) AS NameChangeCount FROM astockbasicinfodb.lc_namechange WHERE CompanyCode = 414"
            },
            {
                "id": 2,
                "subquestion": "查询航锦科技股份有限公司涉及回购的最大金额。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "在查询中选择 CompanyCode 作为限制条件，明确指定为414，以确认仅检索航锦科技股份有限公司的回购记录。使用 MAX(BuybackMoney) 来获取该公司的最大回购金额，确保仅返回需要的信息。其他字段尽管在数据表中存在，但都不适用于当前的查询。",
                "sql": "SELECT MAX(BuybackMoney) AS MaxBuybackAmount FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 414;"
            },
            {
                "id": 3,
                "subquestion": "查询航锦科技股份有限公司该年度前十大股东的持股比例。",
                "table_name": [
                    "astockshareholderdb.lc_stockholdingst"
                ],
                "reason": "查询中选择了字段 Top10StockholdersProp，以获取航锦科技股份有限公司前十大股东持股比例作为核心数据。限制条件包括 InnerCode = 471 确保精准匹配特定公司的记录，InfoSource = '年度报告' 确保数据来自可靠来源，而日期条件则限制为2021年度的报告，筛选合适的 EndDate 数据，使得查询结果准确反映指定时间段内的信息。",
                "sql": "SELECT Top10StockholdersProp FROM astockshareholderdb.lc_stockholdingst WHERE InnerCode = 471 AND InfoSource = '年度报告' AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d')) BETWEEN '2021-01-01' AND '2021-12-31';"
            },
            {
                "id": 4,
                "subquestion": "查询航锦科技股份有限公司当年技术与生产人员的总人数。",
                "table_name": [
                    "astockoperationsdb.lc_staff"
                ],
                "reason": "查询中选择了字段 EmployeeSum 作为返回数据，以获得航锦科技股份有限公司当年技术与生产人员的总人数，并使用 TypeCode = 3031 确保检索到的是生产人员的统计信息。还使用了 CompanyCode = 414 限制查询的记录为特定公司，确保结果的准确性。",
                "sql": "SELECT EndDate,EmployeeSum FROM astockoperationsdb.lc_staff WHERE CompanyCode = 414 AND TypeCode = 3031;"
            }
        ]
    },
    {
        "question": "申万一级行业是交通运输的公司有多少家？ 这些公司中多少家是20年变更的行业？ 变更后又在21年取消的有哪些公司？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询申万一级行业中属于交通运输的公司数量。",
                "table_name": [
                    "astockindustrydb.lc_exgindustry"
                ],
                "reason": "选择了CompanyCode作为查询的关键字段以统计涉及的公司数量，FirstIndustryName用于确认行业为交通运输，InfoSource则确保查询的数据来自于正确的信息源，Standard字段锁定了所用的申万行业分类版本，IfPerformed字段确保统计的公司处于有效状态。这些字段的结合紧密围绕查询目的，确保了数据的准确性和有效性。",
                "sql": "SELECT COUNT(DISTINCT CompanyCode) AS CompanyCount FROM astockindustrydb.lc_exgindustry WHERE FirstIndustryName = '交通运输' AND infosource like '%申万%' AND Standard = 38 AND IfPerformed = 1;"
            },
            {
                "id": 2,
                "subquestion": "查询在20年变更行业的交通运输公司数量。",
                "table_name": [
                    "astockindustrydb.lc_exgindchange",
                    "astockindustrydb.lc_exgindustry"
                ],
                "reason": "选择了CompanyCode作为查询的核心字段，通过DISTINCT操作去重以计算唯一的公司数量。FirstIndustryName用于确认公司属于交通运输行业，InfoSource确保信息来源为申万，IfPerformed保证了筛选的公司处于有效状态。CancelDate的YEAR限制为2020，以确保查询只关注在该年度变更行业的公司保持一致性。",
                "sql": "SELECT COUNT(DISTINCT a.CompanyCode) FROM astockindustrydb.lc_exgindchange a INNER JOIN astockindustrydb.lc_exgindustry b ON a.CompanyCode = b.CompanyCode WHERE b.FirstIndustryName LIKE '%交通运输%' AND b.infosource LIKE '%申万%' AND b.IfPerformed = '1' AND YEAR(a.CancelDate) = 2020;"
            },
            {
                "id": 3,
                "subquestion": "查询在20年变更后于21年取消的交通运输公司名称。",
                "table_name": [
                    "astockindustrydb.lc_exgindchange",
                    "astockindustrydb.lc_exgindchange",
                    "astockindustrydb.lc_exgindustry"
                ],
                "reason": "选择了CompanyCode作为查询的核心字段，以DISTINCT得到唯一公司的名称。嵌套查询首先筛选出交通运输公司在2020年发布的变更记录，确保来源来自于申万并且状态有效。最后通过CancelDate限定取消的时间在2021年，以此来获取符合条件的公司的情况。这些步骤确保了数据的准确和有效性。",
                "sql": "SELECT DISTINCT CompanyCode from astockindustrydb.lc_exgindchange  where companycode in (SELECT DISTINCT a.CompanyCode FROM astockindustrydb.lc_exgindchange a   WHERE companycode in (SELECT DISTINCT CompanyCode FROM astockindustrydb.lc_exgindustry WHERE FirstIndustryName LIKE '%交通运输%' and infosource like '%申万%' and IfPerformed='1')  AND YEAR(InfoPublDate) = 2020) and year(CancelDate) = 2021"
            }
        ]
    },
    {
        "question": "科达制造2021年8月4日当天的最高价与最低价分别是多少，该股票的概念板块当年多少次涨停？该股票所属的一级概念是什么？该公司所属二级行业当日行业总市值有多少?",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询科达制造在2021年8月4日当天的最高价。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "该查询从日行情表中提取科达制造（InnerCode = 1650）在2021年8月4日的最高价（HighPrice）。字段InnerCode用于确认查询特定公司，字段TradingDay用于过滤交易日期，确保只获取目标日期的数据，最终返回的HighPrice则是查询的核心结果。",
                "sql": "SELECT HighPrice FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = 1650 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-08-04';"
            },
            {
                "id": 2,
                "subquestion": "查询科达制造在2021年8月4日当天的最低价。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "该查询从日行情表中提取科达制造（InnerCode = 1650）在2021年8月4日的最低价（LowPrice）。字段InnerCode用于确认查询特定公司，字段TradingDay用于过滤在该日期的交易数据，最终返回的LowPrice则是查询的核心结果。",
                "sql": "SELECT LowPrice FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = 1650 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-08-04';"
            },
            {
                "id": 3,
                "subquestion": "查询科达制造在2021年发生的所有涨停次数。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "该查询从股票技术形态表中统计科达制造（InnerCode = 1650）在2021年度的所有涨停次数。关键字段InnerCode用于锁定特定公司，TradingDay限制了查询日期范围到整个2021年，而RaisingLimitInNDays用于确保仅计算有涨停标志的记录。最终通过计数功能得出结果。",
                "sql": "SELECT COUNT(*) FROM astockmarketquotesdb.cs_stockpatterns WHERE InnerCode = 1650 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2021-01-01' AND '2021-12-31' AND RaisingLimitInNDays > 0;"
            },
            {
                "id": 4,
                "subquestion": "查询科达制造所属的一级概念。",
                "table_name": [],
                "reason": "SELECT ClassCode,ClassName FROM astockindustrydb.LC_ConceptList Where ConceptCode IN (SELECT ConceptCode FROM astockindustrydb.lc_coconcept WHERE InnerCode = 1650 AND IndiState = 1);",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询科达制造所属的二级行业在2021年8月4日的总市值。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "涪陵榨菜的注册地址在哪？ 该公司上市公告书中的前十大股东是哪些？ 这些股东里有几家是基金管理公司？ 存在资料的公司有几家，这些公司在2019年分别管理了多少种基金？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询涪陵榨菜的注册地址。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "根据查询需要，选择了公司注册地址RegAddr作为目标字段，因为这是直接问询的内容。CompanyCode用于确保数据的唯一性和准确性，以确保只获取涪陵榨菜这个特定公司的数据。注册地址的格式为文本，表明公司所在的具体位置，确保我们可以顺利取得到相关信息，没有其他条件则更为简洁明确。其他字段并不影响此查询的结果，所以不取用。选择的条件是CompanyCode = 81336，因为其唯一标识涉及的公司正是涪陵榨菜，因此具备选取的意义。",
                "sql": "SELECT RegAddr FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 81336;"
            },
            {
                "id": 2,
                "subquestion": "查询涪陵榨菜上市公告书中的前十大股东名单。",
                "table_name": [
                    "astockshareholderdb.lc_mainshlistnew"
                ],
                "reason": "为了查询涪陵榨菜的前十大股东名单，我选择了股东名称SHList、信息来源InfoSource和股东排名SHNo作为必需显示的字段。CompanyCode被选为81336，以确保数据准确且专属于涪陵榨菜。InfoTypeCode为1是用来筛选出前十大股东的信息，而InfoSource的条件为'%上市公告书%'，确保查询结果来源于上市公告书，保证数据的有效性。通过SHNo进行升序排序后，加入LIMIT 10，以获取前十名股东的信息。",
                "sql": "select SHList,InfoSource,SHNo from AStockShareholderDB.LC_MainSHListNew where CompanyCode = 81336 and InfoTypeCode = 1 and InfoSource like '%上市公告书%' ORDER BY SHNo ASC limit 10"
            },
            {
                "id": 3,
                "subquestion": "从涪陵榨菜的前十大股东中查询有几家是基金管理公司。",
                "table_name": [
                    "astockshareholderdb.lc_mainshlistnew"
                ],
                "reason": "为了查询涪陵榨菜的前十大股东中有几家是基金管理公司，我选择了股东名称SHList、信息来源InfoSource和股东排名SHNo作为必需显示的字段。CompanyCode被选为81336，以确保数据准确且专属于涪陵榨菜。InfoTypeCode为1确保选取前十大股东的资料，而InfoSource的条件为'%上市公告书%'确认来源有效。SHKind被设定为'基金管理公司'，以此限制股东性质筛选出符合条件的基金管理公司。通过SHNo进行排序，加上LIMIT 10，以获取前十名的股东信息。",
                "sql": "select SHList,InfoSource,SHNo from AStockShareholderDB.LC_MainSHListNew where CompanyCode = 81336  and InfoTypeCode = 1 and InfoSource like '%上市公告书%' and SHKind = '基金管理公司' ORDER BY SHNo ASC limit 10"
            },
            {
                "id": 4,
                "subquestion": "查询前十大股东中存在资料的基金管理公司数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询这些存在资料的基金管理公司在2019年分别管理了多少种基金。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "唐山港集团股份有限公司是什么时间上市的（回答XXXX-XX-XX）当年一共上市了多少家企业？这些企业有多少是在北京注册的？哪些是注册和办公都在海淀的？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询唐山港集团股份有限公司的上市时间。",
                "table_name": [
                    "constantdb.secumain"
                ],
                "reason": "选择了 ListedDate 作为需要查询的字段，因为其为公司上市时间，是查询目标。使用 CompanyCode 79480 作为条件，能确保只获取唐山港集团的上市信息，排除了其他公司的可能性，从而做出精确结果。此 SQL 片段确保查询了正确的数据并满足了用户请求。",
                "sql": "SELECT ListedDate FROM ConstantDB.SecuMain WHERE CompanyCode = 79480;"
            },
            {
                "id": 2,
                "subquestion": "查询唐山港集团股份有限公司上市的年份一共上市了多少家企业。",
                "table_name": [
                    "constantdb.secumain"
                ],
                "reason": "选择了 COUNT(*) 作为需要查询的字段，用以统计特定年份（2010年）上市的所有企业的数量。使用 YEAR(ListedDate) = 2010 作为过滤条件，能够确保只计算在2010年上市的企业数量，从而提供准确的统计结果。该 SQL 片段有效地满足了用户的查询需求。",
                "sql": "SELECT COUNT(*) AS NumberOfListedCompanies FROM ConstantDB.SecuMain WHERE YEAR(ListedDate) = 2010;"
            },
            {
                "id": 3,
                "subquestion": "查询该年份中，在北京注册的上市企业数量。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives",
                    "constantdb.secumain"
                ],
                "reason": "选择了 CompanyCode 和 RegAddr 作为需要查询的字段，CompanyCode 是识别上市公司的关键，而 RegAddr 则用于确保获得的企业是在北京注册。查询中加入的子查询条件，确保只选取2010年上市的公司，在 RegAddr 中使用 LIKE '%北京%' 进行地址筛选，确保统计的准确性。该 SQL 片段有效地满足了用户的查询需求。",
                "sql": "select CompanyCode,RegAddr from astockbasicinfodb.lc_stockarchives where CompanyCode in (SELECT CompanyCode FROM ConstantDB.SecuMain WHERE YEAR(ListedDate) = 2010) and   RegAddr like '%北京%';"
            },
            {
                "id": 4,
                "subquestion": "查询在该年份中，注册和办公都在海淀的企业。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives",
                    "constantdb.secumain"
                ],
                "reason": "选择了 CompanyCode、RegAddr 和 OfficeAddr 作为需要查询的字段，其中 CompanyCode 是企业唯一标识，RegAddr 用于定位注册地，OfficeAddr 用于确认办公地点。此查询通过二级查询确保了我们仅从2010年上市的企业中获取数据，并通过 RegAddr 和 OfficeAddr 的条件锁定为海淀地区，从而有效地满足了用户的查询需求。",
                "sql": "select CompanyCode,RegAddr,OfficeAddr  from astockbasicinfodb.lc_stockarchives where CompanyCode in (SELECT CompanyCode FROM ConstantDB.SecuMain WHERE YEAR(ListedDate) = 2010) and   RegAddr like '%海淀%' and OfficeAddr like '%海淀%';"
            }
        ]
    },
    {
        "question": "山东药玻2020年发布的19年年报的大股东是谁？19年一共有多少户股东？他的流通股本有多少股？19年的股权变动中涉及股数量最大的一次非专场大宗交易是在哪天正式变动的？（时间回答XXXX-XX-XX）",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询山东药玻2020年发布的19年年报的大股东名称。",
                "table_name": [
                    "astockshareholderdb.lc_mainshlistnew"
                ],
                "reason": "查询选择了SHList字段，目的是获取山东药玻2020年发布的19年年报的大股东名称。CompanyCode限制为1469，确保数据来源于山东药玻；EndDate限制为2019，以获取特定年份的信息；InfoTypeCode设置为1，确保查询的是前十大股东的信息。以上限制条件的设置是针对查询目标必要性的直接反映。",
                "sql": "SELECT SHList FROM astockshareholderdb.lc_mainshlistnew WHERE CompanyCode = 1469 AND EndDate LIKE '2019%' AND InfoTypeCode = 1 ORDER BY HoldSum DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询山东药玻在2019年一共拥有多少户股东。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询山东药玻在2019年的流通股本数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询山东药玻在2019年股权变动中涉及股数量最大的一次非专场大宗交易的变动日期。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "中南出版传媒集团股份有限公司的证券代码是多少？ 该公司2019年母公司一季报中预付款项是多少？ 总营收呢？ 经营活动现金流入了多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询中南出版传媒集团股份有限公司的证券代码。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "在本次查询中，我们专注于获取中南出版传媒集团股份有限公司的证券代码。首先，选取的字段SecuCode是查询的关键，因为该字段包含我们所需的证券代码。约束的CompanyCode字段（80194）是必需的，因为它直接关联到中南出版传媒，确保查询的准确性。此字段的选择帮助我们过滤出相关的记录，避免不必要的数据检索。我们不需要其他字段，简化了查询。",
                "sql": "SELECT SecuCode FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 80194;"
            },
            {
                "id": 2,
                "subquestion": "查询中南出版传媒集团股份有限公司(母公司)2019年母公司一季报中的预付款项。",
                "table_name": [
                    "astockfinancedb.lc_balancesheetall"
                ],
                "reason": "在本次查询中，我们的目标是获取中南出版传媒集团股份有限公司2019年母公司一季报中的预付款项。首先，为了确保只从中南出版传媒提取数据，我们选取了CompanyCode字段（80194）。而查询的日期范围通过YEAR(InfoPublDate)设定为2019年，以确保筛选到的是该年度的报告。另外，InfoSource字段限制为'第一季报'，以针对特定的报告类型，满足对时间和内容的双重需求。最后，IfMerged字段值为2，明确表明我们只获取母公司的信息，而AdvancePayment字段为我们所需的查询结果。",
                "sql": "SELECT AdvancePayment FROM astockfinancedb.lc_balancesheetall WHERE CompanyCode = 80194 AND YEAR(InfoPublDate) = 2019 AND  InfoSource = '第一季报' AND IfMerged = 2"
            },
            {
                "id": 3,
                "subquestion": "查询中南出版传媒集团股份有限公司(母公司)2019年母公司一季报中的总营收。",
                "table_name": [
                    "astockfinancedb.lc_incomestatementall"
                ],
                "reason": "在本次查询中，我们的目标是获取中南出版传媒集团股份有限公司2019年母公司一季报中的总营收。首先，我们选取的字段TotalOperatingRevenue是必需的，因为它表示所需的财务数据。为了保证数据来自特定公司，我们使用CompanyCode字段（80194）进行过滤。接着，为了获取相关的报告，我们采用YEAR(InfoPublDate)来限制数据为2019年，并设置InfoSource为'第一季报'以确保获取指定的报告类型。最后，将IfMerged字段设置为2，明确表示只查询母公司的信息。",
                "sql": "SELECT TotalOperatingRevenue FROM astockfinancedb.lc_incomestatementall WHERE CompanyCode = 80194 AND YEAR(InfoPublDate) = 2019 AND  InfoSource = '第一季报' AND IfMerged = 2"
            },
            {
                "id": 4,
                "subquestion": "查询中南出版传媒集团股份有限公司(母公司)2019年母公司一季报中的经营活动现金流入。",
                "table_name": [
                    "astockfinancedb.lc_cashflowstatementall"
                ],
                "reason": "在本次查询中，我们的目标是获取中南出版传媒集团股份有限公司2019年母公司一季报中的经营活动现金流入。我们选取的字段SubtotalOperateCashInflow是必需的，因为它表示所需的现金流入数据。为了确保数据来自特定公司，我们使用CompanyCode字段（80194）进行过滤。此外，为了获取相关的报告，我们采用YEAR(InfoPublDate)来限制数据为2019年设置InfoSource为'第一季报'以确保获取指定的报告类型。最后，通过将IfMerged字段值设定为2，明确表示我们只查询母公司的信息。",
                "sql": "SELECT SubtotalOperateCashInflow FROM astockfinancedb.lc_cashflowstatementall WHERE CompanyCode = 80194 AND YEAR(InfoPublDate) = 2019 AND  InfoSource = '第一季报' AND IfMerged = 2"
            }
        ]
    },
    {
        "question": "000932的英文名称是什么？该公司20年的年报中前三高管薪资是多少？当年该公司是否成功资产重组？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询000932的英文名称。",
                "table_name": [
                    "constantdb.secumain"
                ],
                "reason": "查询中，表中的 ID 字段作为唯一标识，不直接用于过滤；InnerCode 可能与基金相关信息关联，现阶段不被质疑。CompanyCode 为公司代码，但不直接影响查询结果，因此可忽略；SecuCode 为证券代码是本次查询的条件，其值为 '000932' 是必要的关键字。EngName 是要获取的目标字段，而其他如 ChiName、SecuMarket 均不在此次查询中涉及，因此减少了查询复杂度。最终设定的查询条件是 secuCode，通过限制条件保证返回指定结果。",
                "sql": "SELECT EngName FROM ConstantDB.SecuMain WHERE SecuCode = '000932' ;"
            },
            {
                "id": 2,
                "subquestion": "查询该公司在2020年年报中前三高管的薪资。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "在查询过程中，首先选择了关键的字段 High3Managers，用于得到该公司在2020年年度报告中前三高管的薪资信息。使用CompanyCode字段限制查询到特定公司（公司代码为499），InfoSource字段确保只从年度报告中查询，以提高数据的相关性和可靠性。EndDate字段通过使用YEAR和日期转换功能进行限制，确保数据属于2020年的记录。",
                "sql": "SELECT High3Managers FROM astockoperationsdb.lc_rewardstat WHERE CompanyCode = 499 AND InfoSource = '年度报告' AND YEAR(STR_TO_DATE(enddate, '%Y-%m-%d %H:%i:%s.%f')) = 2020;"
            },
            {
                "id": 3,
                "subquestion": "查询该公司在2020年是否成功进行资产重组。",
                "table_name": [
                    "astockeventsdb.lc_regroup"
                ],
                "reason": "本查询使用 COUNT(*) 来统计该公司在2020年是否成功进行了资产重组。首先，选择 CompanyCode 字段来限制查询到特定公司的记录（公司代码为499）。其次，EventType 字段被限制为 4, 5, 6, 81，以确保只查询相关的资产重组事件类型。IfEnded 字段设置为0，以过滤尚未终止的事件，从而表示资产重组仍然有效。最后，根据 InfoPublDate 年份进行过滤，只查询 2020 年的记录以保证获取的数据在指定的时间范围内。",
                "sql": "SELECT COUNT(*) AS RestructureCount FROM astockeventsdb.lc_regroup WHERE CompanyCode = 499 AND EventType IN (4, 5, 6, 81) AND IfEnded = 0 AND YEAR(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) = 2020;"
            }
        ]
    },
    {
        "question": "RXW中文全称是什么？ 该公司上市时一共配售了多少张股？ 21年该公司的研发投入是多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询RXW的中文全称。",
                "table_name": [
                    "astockbasicinfodb.lc_namechange"
                ],
                "reason": "在此查询中，我选择了字段 ChiName 作为主要查询字段，因为它明确对应于问题要求的 RXW（瑞芯微）的中文全称。另一方面，我通过字段 CompanyCode = 232006 限定查询范围，确保所查询信息的准确度及相关性。其他字段如 InfoPublDate 等并不对当前需求产生直接作用，因此未被选择。",
                "sql": "SELECT ChiName FROM astockbasicinfodb.lc_namechange WHERE CompanyCode = 232006;"
            },
            {
                "id": 2,
                "subquestion": "查询该公司上市时配售的总股数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询该公司在2021年的研发投入。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在此查询中，我选择了字段 TotalRDInput 作为主要查询字段，因为它代表了公司在指定年份的研发投入总额，这是我们所需的关键信息。为了确保结果的正确和精准，我添加了几个过滤条件：InnerCode 需要为 85470，确保我们获取到瑞芯微的数据；InfoSourceCode 要为 110101，确保数据来自年度报告；最后，通过 EndDate 限制查询的时间范围至2021年，这样能够确保获得有效的研发投入数据。",
                "sql": "SELECT TotalRDInput FROM astockfinancedb.lc_intassetsdetail WHERE InnerCode = 85470 AND InfoSourceCode = 110101 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d')) BETWEEN '2021-01-01' AND '2021-12-31';"
            }
        ]
    },
    {
        "question": "Titan Wind Energy (Suzhou) Co.,Ltd.董秘是谁 20年首次信息发布中单笔回购资金总额上限最高的是多少？ 怎么管理？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询Titan Wind Energy (Suzhou) Co.,Ltd.的董秘是谁。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "在该 SQL 查询中，我选取了 SecretaryBD 字段，这是我们需要的核心信息，因为查询目的是获取 Titan Wind Energy (Suzhou) Co.,Ltd. 的董秘信息。同时，通过 CompanyCode = 81722 限制查询范围，以确保只查询到特定公司的董秘。\n具体而言，CompanyCode 作为唯一标识符，确保我们准确定位到天顺风能(苏州)股份有限公司，从而直接查询其董事会秘书的名称。",
                "sql": "SELECT SecretaryBD FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 81722;"
            },
            {
                "id": 2,
                "subquestion": "查询Titan Wind Energy (Suzhou) Co.,Ltd.在2020年首次信息发布中单笔回购资金总额上限最高的金额。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询Titan Wind Energy (Suzhou) Co.,Ltd.对回购资金的管理方式。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "东兴证券2019年一共成功为多少家公司提供过担保？这些担保项目中担保最多的金额是多少？当年该公司有多少起合同纠纷？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询东兴证券在2019年成功为多少家公司提供担保。",
                "table_name": [
                    "astockeventsdb.lc_warrant"
                ],
                "reason": "在分析中选取了公司代码(CompanyCode)作为东兴证券的标识符74956，以确保只统计相关记录。InfoPublDate用于限制查询在2019年范围内，通过转化处理将日期格式化，确保查询的准确性。在输出中，DISTINCT ObjectCode会返回东兴证券在指定年份内的不同担保公司数量，这是查询的核心目的是统计担保数量。",
                "sql": "SELECT COUNT(DISTINCT ObjectCode) AS CompanyCount FROM astockeventsdb.lc_warrant WHERE CompanyCode = 74956 AND YEAR(DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f'))) = 2019;"
            },
            {
                "id": 2,
                "subquestion": "查询2019年东兴证券所有担保项目中担保金额最多的一项。",
                "table_name": [
                    "astockeventsdb.lc_warrant"
                ],
                "reason": "在查询中，选取了公司代码(CompanyCode)来筛选东兴证券的记录，以78956为标识。InfoPublDate字段被用来确保记录仅限于2019年，处理后选择符合该年所有担保项目的担保金额。MAX(FirstGuaranteeSum)用于找到东兴证券所有担保项目中最大的一项担保金额，直接反映了我们所需的目标。",
                "sql": "SELECT MAX(FirstGuaranteeSum) AS MaxGuaranteeAmount FROM astockeventsdb.lc_warrant WHERE CompanyCode = 74956 AND YEAR(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s')) = 2019;"
            },
            {
                "id": 3,
                "subquestion": "查询东兴证券在2019年的合同纠纷数量。",
                "table_name": [
                    "astockeventsdb.lc_suitarbitration"
                ],
                "reason": "在查询中，选择了公司代码(CompanyCode)作为东兴证券的标识符74956。InfoPublDate字段用于确保仅限于2019年发布的记录。此外，通过EventContent和ActionDesc字段中的'合同纠纷'关键字进行模糊匹配，以统计合同纠纷的数量，这是我们查询的核心目标。",
                "sql": "SELECT COUNT(*) AS ContractDisputeCount FROM astockeventsdb.lc_suitarbitration WHERE CompanyCode = 74956 AND (EventContent LIKE '%合同纠纷%' OR ActionDesc LIKE '%合同纠纷%') AND YEAR(DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f'))) = 2019;"
            }
        ]
    },
    {
        "question": "李一硕一共管理了多少支基金，这些基金中规模最大的是哪一个？这支基金的管理人法人是谁？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询李一硕管理的基金数量。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "查询中选择了InnerCode字段用于获取每个基金的唯一标识，并设置了Manager字段的过滤条件为'李一硕'，通过此条件限定了查询的结果范围，使得最终结果是李一硕管理的所有基金的唯一编码集合。通过DISTINCT去重，确保统计出的基金数量是唯一的，不重复的。",
                "sql": "select DISTINCT InnerCode from publicfunddb.mf_fundarchives where Manager = '李一硕'"
            },
            {
                "id": 2,
                "subquestion": "查询李一硕管理的规模最大的基金。",
                "table_name": [
                    "publicfunddb.mf_fundarchives",
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "查询中选择了InnerCode字段获取满足管理人为'李一硕'的基金的唯一标识，并设置了FoundedSize字段作为排序依据，获取规模最大的基金通过向下查询DISTINCT InnerCode, ORDER BY FoundedSize DESC, LIMIT 1保证获得正确且唯一的最大规模基金。",
                "sql": "SELECT InnerCode FROM publicfunddb.mf_fundarchives WHERE InnerCode IN (select DISTINCT InnerCode from publicfunddb.mf_fundarchives where Manager = '李一硕') ORDER BY FoundedSize DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询李一硕管理的规模最大基金的名称。",
                "table_name": [
                    "publicfunddb.mf_fundprodname"
                ],
                "reason": "查询中选择了DisclName字段用于获取李一硕管理的规模最大基金的名称，并设置InnerCode字段为289822以确保只检索该特定基金相关信息。此外，InfoSource字段提供了信息来源的参考，增加了查询结果的可理解性。",
                "sql": "select DisclName,InfoSource from publicfunddb.mf_fundprodname where innercode = 289822;"
            },
            {
                "id": 4,
                "subquestion": "查询规模最大基金的管理人法人是谁。",
                "table_name": [
                    "publicfunddb.mf_investadvisoroutline",
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "查询中选择了LegalRepr字段以获取规模最大基金的管理人法人，使用InvestAdvisorCode作为条件，从mf_investadvisoroutline表中查询，此条件来源于对mf_fundarchives表中对应InnerCode的子查询，确保返回的是与特定基金相关的法人代表。",
                "sql": "SELECT LegalRepr FROM publicfunddb.mf_investadvisoroutline WHERE InvestAdvisorCode IN (SELECT InvestAdvisorCode FROM publicfunddb.mf_fundarchives WHERE InnerCode = '289822')"
            }
        ]
    },
    {
        "question": "2019年12月12日哪家证券公司受到了处罚？他是多少家公司的股东？哪家公司当年的借贷最多，共计多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2019年12月12日受到处罚的证券公司名称。",
                "table_name": [
                    "creditdb.lc_violatiparty"
                ],
                "reason": "查询的目标是获取在2019年12月12日受到处罚的证券公司名称。选择PartyName作为必选字段，因为它直接提供了我们需要的信息。BeginDate字段则用于依据日期过滤处罚记录，确保结果准确。限制条件中，'DATE(STR_TO_DATE(BeginDate, '%Y-%m-%d %H:%i:%s.%f')) = '2019-12-12''确保只查询这一特定日期数据，而'PartyName LIKE '%证券%''则过滤出所有相关的证券公司，确保把公司名称限制在目标范围内。所有字段的选择和条件的设定均是为了准确查询出符合要求的数据。",
                "sql": "SELECT DISTINCT PartyName FROM creditdb.lc_violatiparty WHERE DATE(STR_TO_DATE(BeginDate, '%Y-%m-%d %H:%i:%s.%f')) = '2019-12-12' AND PartyName LIKE '%证券%';;"
            },
            {
                "id": 2,
                "subquestion": "查询该证券公司的股东数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询2019年该证券公司当年借贷最多的公司名称。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询2019年该公司借贷的总金额。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "深桑达最近一次停牌是什么时候？（时间回答XXXX-XX-XX） 当日哪家公司收盘价最高，最高价是多少？ 是否创近一周的新高？（回答是或者否）",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询深桑达最近一次停牌的时间。",
                "table_name": [
                    "astockmarketquotesdb.lc_suspendresumption"
                ],
                "reason": "选择字段SuspendDate作为查询的核心字段，InnerCode用作固定条件以获取指定公司（深桑达）的停牌记录。停牌日期在时间上是从2008年到现在的范围，因此我们的数据能确保反映整个可能的停牌历史。通过InnerCode=75限制，确保只获取深桑达的信息。排序条件保证了结果为最新的停牌日期，并且LIMIT 1确保只返回一个记录以满足查询需求。",
                "sql": "SELECT SuspendDate FROM astockmarketquotesdb.lc_suspendresumption WHERE InnerCode = 75 ORDER BY DATE(STR_TO_DATE(SuspendDate, '%Y-%m-%d %H:%i:%s.%f')) DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询深桑达停牌当天，哪家公司收盘价最高。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "TradingDay字段设定为停牌日期(2021-02-26)，这一条件确保只查询此特定日期的市场数据。ClosePrice字段则是查询的核心，查询结果将基于此字段筛选出最高的收盘价。通过ORDER BY ClosePrice DESC排序，确保能获取到该日收盘价最高的公司，并通过LIMIT 1限制结果为一条记录，直接回应查询需求。",
                "sql": "SELECT InnerCode,ClosePrice from  astockmarketquotesdb.qt_dailyquote WHERE date(TradingDay) = '2021-02-26' ORDER BY ClosePrice DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询当天收盘价最高的公司的最高价是多少。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "通过设定TradingDay为停牌日期(2021-02-26)，确保仅查询这一天的市场数据。HighPrice字段则代表所需的最高价，查询结果是基于此字段筛选出当天收盘价最高公司的最高价。ORDER BY ClosePrice DESC条件保证能首先找到收盘价最高的公司，而LIMIT 1约束结果为一条记录，以精确满足查询需求。",
                "sql": "SELECT InnerCode,highprice from  astockmarketquotesdb.qt_dailyquote WHERE date(TradingDay) = '2021-02-26' ORDER BY ClosePrice DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询该公司收盘价是否创近一周的新高。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "深圳市桑达实业股份有限公司最近一次创上市以来的新高是在什么时候？（时间回答XXXX-XX-XX）当天涨幅超过10%股票有多少家？这些公司中有哪些是连板的？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询深圳市桑达实业股份有限公司上市以来的所有股价历史，找到最近一次创上市以来的新高的日期。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "选择 HighAdjustedPriceDate 作为查询字段，是因为我们想找到深圳市桑达实业股份有限公司上市以来最近一次的新高日期。InnerCode = 75 是必须的限制条件，确保查询只针对该公司。由于 HighAdjustedPriceDate 表示的就是高点时间，没有其他字段是查询的关键。",
                "sql": "SELECT HighAdjustedPriceDate FROM astockmarketquotesdb.qt_stockperformance WHERE InnerCode = 75 ORDER BY HighAdjustedPriceDate DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询在深圳市桑达实业股份有限公司创上市以来的新高当天，涨幅超过10%的所有股票数量。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "选择 COUNT(*) 作为查询字段，是因为我们要统计在深圳市桑达实业股份有限公司创上市以来的新高当天涨幅超过10%的股票数量。限制条件 date(TradingDay) = '2020-08-03' 只选取该日期的数据，而 ChangePCT > 10 仅计算涨幅大于10%的股票。这两个条件精确定位到我们关心的股票数据。",
                "sql": "SELECT COUNT(*) AS StockCount FROM astockmarketquotesdb.qt_stockperformance WHERE date(TradingDay) = '2020-08-03' AND ChangePCT > 10;"
            },
            {
                "id": 3,
                "subquestion": "查询在深圳市桑达实业股份有限公司创上市以来的新高当天，涨幅超过10%的股票中有哪些是连板的。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "山东国瓷功能材料股份有限公司2021年9月23日开盘价是多少？当天，外资占股多少？当年及20年该公司的预案一共增发了多少股？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询山东国瓷功能材料股份有限公司2021年9月23日的开盘价。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "通过分析sql查询语句，选择了OpenPrice作为返回的字段，因为这是我们关注的开盘价格。同时，使用InnerCode=14953来限定查询为山东国瓷功能材料股份有限公司的数据，以确保数据的正确性。TradingDay限制条件使用特定的交易日2021年9月23日，以获取准确开盘价。同时通过对TradingDay的格式进行处理，确保能与数据库中的日期格式匹配，这也是精确查询必不可少的步骤。",
                "sql": "SELECT OpenPrice FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = 14953 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-09-23';"
            },
            {
                "id": 2,
                "subquestion": "查询山东国瓷功能材料股份有限公司在2021年9月23日外资的持股比例。",
                "table_name": [
                    "astockshareholderdb.cs_foreignholdingst"
                ],
                "reason": "在sql查询中，我们需要查询山东国瓷功能材料股份有限公司在2021年9月23日的外资持股比例，因此选择了ForeignHoldProp作为返回的字段。使用InnerCode=14953来限制查询数据为特定的公司，确保数据的准确性。此外，使用TradingDay作为约束条件，专门针对2021年9月23日的记录，以获得所需数据。通过对TradingDay进行格式转换，确保能与表中数据匹配，这是这个查询所需要的。",
                "sql": "SELECT ForeignHoldProp FROM astockshareholderdb.cs_foreignholdingst WHERE InnerCode = 14953 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-09-23';"
            },
            {
                "id": 3,
                "subquestion": "查询山东国瓷功能材料股份有限公司在2021年及2020年的增发股数。",
                "table_name": [
                    "astockfinancedb.lc_ashareseasonednewissue"
                ],
                "reason": "在sql查询中，我们以总和IssueVolCeiling作为返回的字段，目的是计算山东国瓷功能材料股份有限公司在2020年和2021年的增发股数。使用InnerCode=14953来限制查询为特定公司，确保数据的准确性。此外，设置IfEffected=1，以保证只计算有效增发。为了满足查询的年限要求，通过YEAR函数提取AdvanceDate中的年份，只选取2020和2021年的增发记录，确保只有符合条件的记录被计算在内，这是此查询的核心步骤。",
                "sql": "SELECT SUM(IssueVolCeiling) AS TotalIncreaseShares FROM astockfinancedb.lc_ashareseasonednewissue WHERE InnerCode = 14953 AND IfEffected = 1 AND (YEAR(STR_TO_DATE(AdvanceDate, '%Y-%m-%d %H:%i:%s.%f')) = 2020 OR YEAR(STR_TO_DATE(AdvanceDate, '%Y-%m-%d %H:%i:%s.%f')) = 2021);"
            }
        ]
    },
    {
        "question": "北京国枫律师事务所2020年见证多少家公司的年度股东大会？ 这些公司中有哪些当年股东减持了的？ 当年哪家公司的涨幅最大，达到了多少，保留4位小数？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询北京国枫律师事务所2020年见证的公司的年度股东大会数量。",
                "table_name": [
                    "astockshareholderdb.lc_smattendinfo"
                ],
                "reason": "查询中选择CompanyCode作为关键字段，因为它是决定与股东大会关联的上市公司唯一标识。MeetingDate用于限制查询的时间范围，确保筛选出2020年的数据。同时，TestmonyLawOffice用于过滤出由北京国枫律师事务所见证的股东大会记录，确保查询的准确性和相关性。",
                "sql": "SELECT DISTINCT CompanyCode FROM astockshareholderdb.lc_smattendinfo WHERE MeetingDate BETWEEN '2020-01-01' AND '2020-12-31' AND TestmonyLawOffice LIKE '%北京国枫律师事务所%' ;"
            },
            {
                "id": 2,
                "subquestion": "查询2020年参加年度股东大会的公司中，哪些公司的股东进行了减持。",
                "table_name": [
                    "astockshareholderdb.lc_transferplan",
                    "astockshareholderdb.lc_smattendinfo"
                ],
                "reason": "查询选择CompanyCode作为必要的返回字段，以确定哪些公司的股东进行了减持。TransferPlanType用于筛选主动和被动减持计划的信息。InfoPublDate限制为2020年，确保只查询2020年发布的减持信息。此外，使用子查询确保只考虑参加过年度股东大会的公司。所有这些条件确保查询的准确性和相关性。",
                "sql": "SELECT DISTINCT CompanyCode FROM astockshareholderdb.lc_transferplan WHERE TransferPlanType IN (127, 128) AND InfoPublDate LIKE '%2020%' AND CompanyCode in (SELECT DISTINCT CompanyCode FROM astockshareholderdb.lc_smattendinfo WHERE MeetingDate BETWEEN '2020-01-01' AND '2020-12-31' AND TestmonyLawOffice LIKE '%北京国枫律师事务所%')"
            },
            {
                "id": 3,
                "subquestion": "查询2020年参与股东大会的公司中，查找涨幅最大的公司。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询涨幅最大的公司在2020年的涨幅数值，并保留4位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "2019-01-04哪家公司主力净流入最多？这家公司5日内平均成交额是多少，保留2位小数？当日该指标超过该公司的一共有多少家？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2019-01-04主力净流入最多的公司名称。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 2,
                "subquestion": "查询该公司在2019-01-04的5日内平均成交额，并保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询当日主力净流入超过该公司的其他公司数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "波司登在港股的股票代码是什么？ 他的注册资本是多少？ 他的员工人数哪年变动最大，前后差距是多少人？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询波司登在港股的股票代码。",
                "table_name": [
                    "constantdb.hk_secumain"
                ],
                "reason": "在查询过程中，我们选择了SecuCode字段以获取波司登的股票代码。CompanyCode字段用于限定查询，确保结果精确到波司登（公司代码为1006818）。虽然表中有其他字段提供额外信息，但对查询目的不必选取。从取值上看，SecuCode是我们想要返回的股票代码，经过输入条件过滤，我们能够得出结果。",
                "sql": "SELECT SecuCode FROM constantdb.hk_secumain WHERE CompanyCode = 1006818;"
            },
            {
                "id": 2,
                "subquestion": "查询波司登的注册资本。",
                "table_name": [
                    "hkstockdb.hk_stockarchives"
                ],
                "reason": "在查询过程中，我们选择了RegCapital字段以获取波司登（公司代码：1006818）的注册资本数额。RegCapitalCurrency字段用于指明注册资本的货币单位，确保返回的数据清晰易于理解。通过CompanyCode = 1006818这一条件，我们能够精准定位到波司登的注册资本信息，其余制定的字段不需要。",
                "sql": "SELECT RegCapital, RegCapitalCurrency FROM hkstockdb.hk_stockarchives WHERE CompanyCode = 1006818;"
            },
            {
                "id": 3,
                "subquestion": "查询波司登每年的员工人数变化情况。",
                "table_name": [
                    "hkstockdb.hk_employeechange"
                ],
                "reason": "在查询过程中，我们选择了InnerCode字段用于指定波司登（公司代码：1006818）的员工变化记录。InfoPublDate字段转化为年份以便分组并聚合员工数量变动。QuaBeforeChange和QuaAfterChange字段分别获取变更前和变更后员工数量的总和，这是了解员工数量变化的关键数据。条件InnerCode = 1011289确保记录的指定性，InfoSource = '5'则确保只获取年度报告的有效数据，IfEffected = '1'则确保只包含有效记录，全面准确。",
                "sql": "SELECT YEAR(InfoPublDate) AS Year, SUM(QuaBeforeChange) AS EmpNumBeforeChange, SUM(QuaAfterChange) AS EmpNumAfterChange FROM hkstockdb.hk_employeechange WHERE InnerCode = 1011289 AND InfoSource = '5' AND IfEffected = '1' GROUP BY YEAR(InfoPublDate) ORDER BY Year;"
            },
            {
                "id": 4,
                "subquestion": "查询波司登员工人数变动最大的一年及其前后差距。",
                "table_name": [
                    "hkstockdb.hk_employeechange"
                ],
                "reason": "在查询过程中，我们选择了InnerCode字段用于针对波司登（公司代码：1006818）的员工变动记录。EffectiveDate字段用以显示员工变动发生的时间，而QuaBeforeChange和QuaAfterChange分别获取非有效和有效的员工数量，ChangeDifference则用以计算员工数量变化的绝对值并进行排序，以便找到最大变动年份。通过设置InnerCode = 1011289和IfEffected = 1的条件，我们确保查询专注于波司登的有效员工变动信息。",
                "sql": "SELECT InnerCode, EffectiveDate, QuaBeforeChange, QuaAfterChange, ABS(QuaBeforeChange - QuaAfterChange) AS ChangeDifference FROM HKStockDB.HK_EmployeeChange WHERE InnerCode = 1011289  AND IfEffected = 1 ORDER BY ChangeDifference DESC LIMIT 1"
            }
        ]
    },
    {
        "question": "天弘沪深300ETF联接A基金的管理经理是谁？ 所在基金公司管理了多少支基金？ 哪只基金20年最后一次分红的税前分红最高，有多少，保留2位小数？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询天弘沪深300ETF联接A基金的管理经理。",
                "table_name": [
                    "publicfunddb.mf_fundarchives",
                    "publicfunddb.mf_investadvisoroutline"
                ],
                "reason": "本查询目的为获取'天弘沪深300ETF联接A基金'的管理经理。首先在mf_fundarchives表中通过已知的InnerCode '267211'获取该基金的管理人代码'2020'，接着使用此代码在mf_investadvisoroutline表中查询GeneralManager字段，目的是获取该基金的管理经理名称。该过程确保了信息的准确性和相关性，同时避免了不必要的数据载入和处理。",
                "sql": "SELECT InvestAdvisorCode FROM publicfunddb.mf_fundarchives WHERE InnerCode = '267211';SELECT GeneralManager FROM publicfunddb.mf_investadvisoroutline WHERE InvestAdvisorCode = '2020';"
            },
            {
                "id": 2,
                "subquestion": "查询天弘基金公司管理的基金数量。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "本查询的目的是统计天弘基金公司管理的基金数量。通过在mf_fundarchives表中查询InvestAdvisorCode等于'2020'的所有基金，使用COUNT(DISTINCT innercode)来确保统计的是独特的基金数量，避免重复计数。这个限制条件能够保证返回的数据是准确的，反映出天弘基金所管理的真实数据。",
                "sql": "SELECT COUNT(DISTINCT  innercode) FROM publicfunddb.mf_fundarchives WHERE InvestAdvisorCode = '2020';"
            },
            {
                "id": 3,
                "subquestion": "查询过去20年各基金的最后一次分红金额，找到税前分红最高的基金并保留2位小数。。",
                "table_name": [
                    "publicfunddb.mf_dividend",
                    "publicfunddb.mf_fundarchives",
                    "dividendimplementdate)",
                    "publicfunddb.mf_dividend",
                    "sub.dividendimplementdate)"
                ],
                "reason": "本查询的目的是获取20年来各基金的最后一次分红金额，并找到税前分红最高的基金。通过联合mf_dividend表和mf_fundarchives表，确保查询仅限于天弘基金管理的基金，采用ROUND(MAX(DividendRatioBeforeTax), 2)来保留税前分红金额的两位小数，限于2020年的数据。使用IfDistributed = 1确保只统计实际分红的记录，通过最大分红实施日期最新来确定每个基金的最后一次分红。",
                "sql": "SELECT InnerCode, ROUND(MAX(DividendRatioBeforeTax), 2) AS MaxDividendRatioBeforeTax FROM publicfunddb.mf_dividend WHERE InnerCode IN (SELECT InnerCode FROM publicfunddb.mf_fundarchives WHERE InvestAdvisorCode = '2020') AND IfDistributed = 1 AND EXTRACT(YEAR FROM DividendImplementDate) = 2020 AND DividendImplementDate = (SELECT MAX(DividendImplementDate) FROM publicfunddb.mf_dividend AS sub WHERE sub.InnerCode = publicfunddb.mf_dividend.InnerCode AND EXTRACT(YEAR FROM sub.DividendImplementDate) = 2020 AND sub.IfDistributed = 1) GROUP BY InnerCode ORDER BY MaxDividendRatioBeforeTax DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "JD.com, Inc.这家公司在美股英文名称是什么？他的证券简称是什么？20年该公司单日最高涨幅有多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询JD.com, Inc.在美股的英文名称。",
                "table_name": [
                    "constantdb.us_secumain"
                ],
                "reason": "我选择了EngName作为查询字段，因为这是我们想获取的JD.com, Inc.的英文名称。虽然我在WHERE子句中也使用了SecuAbbr和ChiName来提供更广泛的匹配能力，使得我们能够覆盖不同的可能拼写或表述，但最终结果的返回只有EngName。同时，通过LIKE条件，我们能够过滤出所有可能的非精确匹配，确保查询的通用性和全面性。",
                "sql": "SELECT EngName FROM constantdb.us_secumain WHERE (SecuAbbr LIKE '%JD.com, Inc.%' OR ChiName LIKE '%JD.com, Inc.%' OR EngName LIKE '%JD.com, Inc.%')"
            },
            {
                "id": 2,
                "subquestion": "查询JD.com, Inc.在美股的证券简称。",
                "table_name": [
                    "constantdb.us_secumain"
                ],
                "reason": "我选择了SecuAbbr作为查询字段，因为这是我想要的JD.com, Inc.的证券简称。查询中使用InnerCode IN (7003295, 7116696)作为限制条件，是因为这两个InnerCode已知与JD.com, Inc.相对应，确保了查询结果的准确性。通过这种方式，我可以精准地获取到所需的证券简称信息。",
                "sql": "SELECT SecuAbbr FROM constantdb.us_secumain WHERE InnerCode IN (7003295, 7116696);"
            },
            {
                "id": 3,
                "subquestion": "查询2020年JD.com, Inc.单日最高涨幅。",
                "table_name": [
                    "usstockdb.us_dailyquote",
                    "usstockdb.us_dailyquote"
                ],
                "reason": "我选择了ChangePCT作为查询字段，以获取JD.com, Inc.在2020年的单日最高涨幅。通过使用MAX函数，确保我能得到最高的涨幅数据。查询中提供的限制条件TradingDay BETWEEN '2020-01-01' AND '2020-12-31'分析时间范围，并且InnerCode = '7003295' 和 InnerCode = '7116696'有效筛选出JD.com, Inc.对应的记录，从而实现准确的数据检索。",
                "sql": "SELECT MAX(ChangePCT) AS MaxChangePCT FROM usstockdb.us_dailyquote WHERE TradingDay BETWEEN '2020-01-01' AND '2020-12-31' AND InnerCode = '7003295';SELECT MAX(ChangePCT) AS HighestChangePCT FROM usstockdb.us_dailyquote WHERE InnerCode = 7116696 AND TradingDay BETWEEN '2020-01-01' AND '2020-12-31';"
            }
        ]
    },
    {
        "question": "携程网这家公司电话是多少？ 他是什么时候成立的？（时间回答XXXX-XX-XX） 2020年9月18日这家公司的收盘价是多少",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询携程网这家公司的电话。",
                "table_name": [
                    "usstockdb.us_companyinfo"
                ],
                "reason": "在此查询中，仅需要PEOTel字段以获取携程网的电话。CompanyCode字段用于确保查询到特定的公司记录。由于我们拥有正确的公司代码86226505，因此这是该查询的唯一过滤条件。选择PEOTel是因为它直接提供了查询所需的信息，而且没有其他的字段对本查询有直接影响。",
                "sql": "select PEOTel from USStockDB.US_CompanyInfo where CompanyCode in (86226505);"
            },
            {
                "id": 2,
                "subquestion": "查询携程网的成立时间。（时间回答XXXX-XX-XX）",
                "table_name": [
                    "usstockdb.us_companyinfo"
                ],
                "reason": "本查询中仅需要EstablishmentDate字段以获取携程网的成立时间。CompanyCode字段确保我们只检索特定公司的记录。因为我们拥有的公司代码86226505是准确的，这将帮助我们快速定位到正确的记录并得到成立时间。",
                "sql": "select EstablishmentDate from USStockDB.US_CompanyInfo where CompanyCode in (86226505);"
            },
            {
                "id": 3,
                "subquestion": "查询2020年9月18日携程网的收盘价。",
                "table_name": [
                    "usstockdb.us_dailyquote"
                ],
                "reason": "本查询仅需要Close字段以获取2020年9月18日携程网的收盘价。InnerCode字段确保我们只检索特定证券（携程网）的记录。使用的innercode 7004908 和 TradingDay '2020-09-18' 作为过滤条件能确保准确定位到所需的信息。",
                "sql": "select Close  from USStockDB.US_DailyQuote where innercode in (7004908) and TradingDay like '%2020-09-18%';"
            }
        ]
    },
    {
        "question": "2020年成立的CN公司有多少家？哪家公司（证券简称）上市的时间最晚，是什么时候？（时间回答XXXX-XX-XX） 2019年的当天有多少家公司是上涨的？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2020年成立的CN公司的数量。",
                "table_name": [
                    "usstockdb.us_companyinfo"
                ],
                "reason": "在分析中，我确定了查询需要的字段，包括CompanyCode（用于统计公司数量）、PEOStatus（用于过滤注册地为中国的公司）和EstablishmentDate（确保筛选出2020年成立的公司）。选取PEOStatus的值'CN'是为了映射到中国的注册企业，选择EstablishmentDate的年份为2020是因为这是我查询的主要目标。对于ID、EngName、PEOAddress等字段，虽然它们提供辅助信息，但在当前查询中并不直接需要。通过上述条件，我可以有效提取需要的数据。",
                "sql": "SELECT COUNT(DISTINCT CompanyCode) FROM usstockdb.us_companyinfo WHERE PEOStatus = 'CN'  and year(EstablishmentDate) = 2020;"
            },
            {
                "id": 2,
                "subquestion": "查询2020年成立的CN公司中，按照上市时间判断上市最晚的公司（证券简称）。",
                "table_name": [
                    "constantdb.us_secumain",
                    "usstockdb.us_companyinfo"
                ],
                "reason": "在此查询中，我选择了SecuAbbr（获取上市公司简称），ListedDate（用于确定上市时间以便排序），以及CompanyCode（确保能够从secumain表中筛选相关公司）。选取PEOStatus = 'CN'确保仅查询中国公司，EstablishmentDate = 2020确保只选择2020年成立的公司。ListedDate用于排序，并获取该时间最近的公司简称，这正是查询需求的主要目标。通过这样选取，可以有效过滤和取得所需数据。",
                "sql": "SELECT SecuAbbr FROM constantdb.us_secumain WHERE CompanyCode IN (SELECT DISTINCT CompanyCode FROM usstockdb.us_companyinfo WHERE PEOStatus = 'CN' AND year(EstablishmentDate) = 2020) ORDER BY ListedDate DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询2020年成立的CN公司中，上市最晚的公司的上市时间（格式为XXXX-XX-XX）。",
                "table_name": [
                    "constantdb.us_secumain",
                    "usstockdb.us_companyinfo"
                ],
                "reason": "在此查询中，我选择了ListedDate（用以获取上市时间）作为返回字段，CompanyCode在子查询中用于关联us_companyinfo表。这些字段确保了我能够筛选出在2020年成立的中国公司，并且根据上市日期获取上市最新的公司。我选取PEOStatus = 'CN'，以确保仅选择在中国注册公司，EstablishmentDate为2020年以筛选成立日期。因此，最终通过排序和限制条件获取到最新的上市时间，这正是查询需求的主要目的。",
                "sql": "SELECT ListedDate FROM constantdb.us_secumain WHERE CompanyCode IN (SELECT DISTINCT CompanyCode FROM usstockdb.us_companyinfo WHERE PEOStatus = 'CN' AND year(EstablishmentDate) = 2020) ORDER BY ListedDate DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询2019年当天的上涨公司数量。",
                "table_name": [
                    "usstockdb.us_dailyquote"
                ],
                "reason": "在此查询中，我选择了COUNT(*)用于返回上涨公司的数量，TradingDay用于筛选特定的交易日期，而ChangePCT则用于判断公司是否上涨，必须大于0。选择TradingDay为'2019-04-18'确保能获取到特定的市场数据，ChangePCT > 0确保只获取涨幅为正的记录。其他如Open、High等字段在该查询中并不需要，因此它们被省去。通过这样的条件设定，可以有效的统计出上涨公司的数量，满足需求。",
                "sql": "SELECT COUNT(*) FROM usstockdb.us_dailyquote WHERE TradingDay like '%2019-04-18%' AND ChangePCT > 0;"
            }
        ]
    },
    {
        "question": "比特矿业这家公司邮编多少？上市了多少年？这些年A股一共上市了多少家公司？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询比特矿业公司的邮编。",
                "table_name": [
                    "usstockdb.us_companyinfo"
                ],
                "reason": "选择字段 PEoZip，因为这是查询比特矿业公司所需的邮政编码。CompanyCode 过滤条件为 193795，这是已知的比特矿业公司的唯一标识，保证查询的准确性。其他字段（如地址、城市等）对查询目标没有直接影响，因此未被选中。",
                "sql": "SELECT PEOZip FROM usstockdb.us_companyinfo WHERE CompanyCode = 193795;"
            },
            {
                "id": 2,
                "subquestion": "查询比特矿业公司上市了多少年。",
                "table_name": [
                    "constantdb.us_secumain"
                ],
                "reason": "选择字段 ListedDate，因为这是计算比特矿业公司上市年份的关键字段。SecuCode 过滤条件为 'BTCM'，这是已知的比特矿业公司的证券代码，确保查询的准确性。其他字段不需要查询，因为它们与上市年限无关。",
                "sql": "SELECT TIMESTAMPDIFF(YEAR, ListedDate, CURDATE()) AS YearsListed FROM constantdb.us_secumain WHERE SecuCode = 'BTCM';"
            },
            {
                "id": 3,
                "subquestion": "查询这些年A股一共上市了多少家公司。",
                "table_name": [
                    "constantdb.secumain"
                ],
                "reason": "选择字段 CompanyCode 用于计算不同上市公司的数量，因为它能够唯一标识每一个公司。限制条件 DATE(ListedDate) > '2013-01-01' 确保我们统计的公司是在2013年之后上市的，而 SecuCategory = 1 则是为了过滤出仅A股的公司，确保查询结果的准确性。",
                "sql": "SELECT COUNT(DISTINCT CompanyCode) AS NumberOfCompanies FROM ConstantDB.SecuMain WHERE DATE(ListedDate) > '2013-01-01' and SecuCategory = 1;"
            }
        ]
    },
    {
        "question": "TOUR他是否已经退市了？（是或者否）这家公司19年最高收盘价是多少当天有多少家公司退市了。",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询TOUR是否已经退市。",
                "table_name": [
                    "constantdb.us_secumain"
                ],
                "reason": "查询选择了字段 ListedState，这个字段是必选的，因为它直接决定了 TOUR 证券的当前上市状态。SecuCode 作为查询的限制条件，确保我们只查找指定的证券代码 'TOUR'，从而返回其上市状态。根据该字段的取值1、2、4、5、9中的值，我们可以判断 'TOUR'是否已经退市。使用 LIMIT 1 是为了效率，尽管 SecuCode 是唯一的。",
                "sql": "SELECT ListedState FROM constantdb.us_secumain WHERE SecuCode = 'TOUR' LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询TOUR在2019年的最高收盘价。",
                "table_name": [
                    "usstockdb.us_dailyquote"
                ],
                "reason": "查询选择了 MAX(High) 作为要计算的字段，这是必选的，因为我们需要找到2019年期间的最高收盘价。InnerCode取值为 7000593，是用于准确定位证券的关键字段。TradingDay 的取值范围限定在 2019年1月1日至2019年12月31日之间，用于筛选数据期限。",
                "sql": "SELECT MAX(High) AS HighestClosePrice FROM usstockdb.us_dailyquote WHERE InnerCode = 7000593 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31';"
            },
            {
                "id": 3,
                "subquestion": "查询在TOUR最高收盘价当天有多少家公司退市。",
                "table_name": [
                    "constantdb.us_secumain"
                ],
                "reason": "查询选择了 innercode 和 DelistingDate，innercode 是必选字段，用于识别退市公司的唯一编码。DelistingDate 是关键条件，筛选出在2019年3月5日退市的公司，从而准确反映出相关情况。",
                "sql": "SELECT innercode,DelistingDate from ConstantDB.US_SecuMain where date(DelistingDate) = '2019-03-05';"
            }
        ]
    },
    {
        "question": "2021年08月哪支基金税后分红最高，这支基金是什么时候生效的（时间回答XXXX-XX-XX），基金所属公司的官网是什么？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2021年08月各基金的税后分红情况，找出税后分红最高的基金。",
                "table_name": [
                    "publicfunddb.mf_dividend",
                    "publicfunddb.mf_dividend"
                ],
                "reason": "在分析数据时，InnerCode 作为唯一的基金标识符是必需的，以确保可以识别具体的基金。InfoPublDate 是筛选时间范围的关键字段，只选择在2021年08月的信息。IfDistributed 需要设为1，以确保查询的基金是已有分红的。ActualRatioAfterTax 是查询的主要关注点，因为我们需要找出税后分红的实际比率，从而找出税后分红最高的基金。通过设置日期范围和分红标志，能够精准地获得相关的业务数据。",
                "sql": "SELECT InnerCode, ActualRatioAfterTax FROM publicfunddb.mf_dividend WHERE DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) >= '2021-08-01' AND DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) <= '2021-08-31' AND IfDistributed = 1;SELECT InnerCode, ActualRatioAfterTax FROM (SELECT InnerCode, ActualRatioAfterTax FROM publicfunddb.mf_dividend WHERE DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) >= '2021-08-01' AND DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) <= '2021-08-31' AND IfDistributed = 1) AS tmp ORDER BY ActualRatioAfterTax DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询税后分红最高的基金的生效时间（格式为XXXX-XX-XX）。",
                "table_name": [
                    "publicfunddb.mf_fundprodname"
                ],
                "reason": "在查询中，InnerCode 是维持唯一性的关键字段，使我们能够精确找到特定基金的记录。EffectiveDate 是查询结果的目标字段，包含了我们需要获取的生效时间信息。通过设置 IfEffected 为1，可以确保返回的结果是有效的，确保查询结果的可靠性。",
                "sql": "SELECT EffectiveDate FROM publicfunddb.mf_fundprodname WHERE InnerCode = 319857 AND IfEffected = 1;"
            },
            {
                "id": 3,
                "subquestion": "查询税后分红最高的基金所属公司的官网是什么。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "易方达基金管理有限公司在19年成立了多少支基金？哪支基金的规模最大？这支基金20年最后一次分红派现比例多少钱？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询易方达基金管理有限公司在2019年成立的基金数量。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "本查询的目的是统计易方达基金管理有限公司在2019年成立的基金数量。选取InvestAdvisorCode（41634）来确保只查询该管理公司的基金，而通过EstablishmentDate限制日期范围到2019年内，确保统计的准确性。使用COUNT(*)来获取满足条件的基金数量，正是此查询的核心需求。",
                "sql": "SELECT COUNT(*) AS FundCount FROM publicfunddb.mf_fundarchives WHERE InvestAdvisorCode = 41634 AND DATE(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d')) BETWEEN '2019-01-01' AND '2019-12-31';"
            },
            {
                "id": 2,
                "subquestion": "查询易方达基金管理有限公司在2019年成立的基金中规模最大的是?",
                "table_name": [
                    "publicfunddb.mf_fundarchives",
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "本查询旨在找出易方达基金管理有限公司在2019年成立的规模最大的基金。查询首先通过子查询选取2019年成立的基金的InnerCode，然后通过该InnerCode限制范围，选取FoundedSize字段用于排序。此查询仅需要InnerCode和FoundedSize，与InvestAdvisorCode确保只查找易方达的基金，相关时间用LIKE匹配保证年份准确。",
                "sql": "SELECT InnerCode,FoundedSize FROM publicfunddb.mf_fundarchives WHERE InnerCode IN (SELECT InnerCode FROM publicfunddb.MF_FundArchives WHERE InvestAdvisorCode in (41634) AND EstablishmentDate LIKE '%2019%') ORDER BY FoundedSize DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询易方达基金管理有限公司在2019年成立的基金中规模最大的名称",
                "table_name": [
                    "publicfunddb.mf_fundprodname"
                ],
                "reason": "本查询的目的是获取易方达基金管理有限公司在2019年成立的规模最大基金的名称。通过特定的InnerCode（223699），查询相应的基金披露名称（DisclName），此字段清晰表明了基金的具体名称。",
                "sql": "select DisclName,InfoSource from publicfunddb.mf_fundprodname where innercode = 223699"
            },
            {
                "id": 4,
                "subquestion": "查询易方达基金管理有限公司在2019年成立的基金中规模最大基金在2020年最后一次分红的派现比例。",
                "table_name": [
                    "publicfunddb.mf_dividend"
                ],
                "reason": "本查询的目的是获取易方达基金管理有限公司在2019年成立的规模最大基金在2020年最后一次分红的派现比例。通过InnerCode（223699）定位到特定基金，Filter至已经实施的分红记录，并确保查询的是2020年内的最新分红。查询需要返回的字段为DividendRatioBeforeTax和EndDate，后者帮助确认分红的具体时间。",
                "sql": "SELECT DividendRatioBeforeTax,EndDate, FROM PublicFundDB.MF_Dividend WHERE InnerCode = 223699 AND IfDistributed = 1 AND  year(EndDate) = 2020 ORDER BY EndDate DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "南方基金管理股份有限公司在19年成立了多少支基金？哪支基金的规模最大？这支基金20年最后一次分红派现比例多少钱,保留2位小数？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询南方基金管理股份有限公司在2019年成立的基金数量。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "在查询中，我需要关注南方基金管理股份有限公司的基金，因此选定InvestAdvisorCode = 41510作为过滤条件。同时，为了获得2019年设立的基金，我使用了YEAR(EstablishmentDate)来限制日期范围，这样确保了查询的精准性。查询的输出字段选择了COUNT(*)，因为我只需获取符合条件的基金数量，无需其他字段的信息，极大简化了数据的处理和输出。",
                "sql": "SELECT COUNT(*) AS FundCount FROM publicfunddb.mf_fundarchives WHERE InvestAdvisorCode = 41510 AND YEAR(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d')) = 2019;"
            },
            {
                "id": 2,
                "subquestion": "查询南方基金管理股份有限公司在2019年成立的基金中，规模最大的是哪一支基金？",
                "table_name": [
                    "publicfunddb.mf_fundarchives",
                    "publicfunddb.mf_fundprodname"
                ],
                "reason": "查询关注南方基金管理股份有限公司2019年成立的基金，首先利用InvestAdvisorCode = 41510作为限制条件，确保查询的基金管理人正确。同时，通过设立日期范围的限制，即使用成立时间介于2019年1月1日至2019年12月31日的条件，保证查询的时效性。设置了ORDER BY FoundedSize DESC和LIMIT 1的组合，确保得到最大规模的基金。查询的输出字段选择为*，以获取基金的所有相关信息，包括规模，以满足获取最大规模基金的需求。",
                "sql": "SELECT *, FoundedSize FROM publicfunddb.mf_fundarchives WHERE InvestAdvisorCode = 41510 AND DATE(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d')) BETWEEN '2019-01-01' AND '2019-12-31' ORDER BY FoundedSize DESC LIMIT 1;select DisclName from publicfunddb.mf_fundprodname where innercode = 225182;"
            },
            {
                "id": 3,
                "subquestion": "查询规模最大的一支基金在2020年的最后一次分红派现比例，并保留2位小数。",
                "table_name": [
                    "publicfunddb.mf_dividend"
                ],
                "reason": "查询关注规模最大的一支基金在2020年的最后一次分红，首先使用InnerCode = '225182'限制条件，确保查询特定的基金，其次通过EndDate <= '2020-12-31'确保获取截至2020年的分红信息。我选择DividendRatioBeforeTax作为输出字段，因为这是我所需的分红派现比例。",
                "sql": "SELECT DividendRatioBeforeTax FROM publicfunddb.mf_dividend WHERE InnerCode = '225182' AND enddate<= '2020-12-31' ORDER BY enddate DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "中证指数有限公司发布了多少种指数？ 这些指数包括了多少家公司？ 在2020年调入过的有多少家？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询中证指数有限公司发布的指数种类数量。",
                "table_name": [
                    "indexdb.lc_indexbasicinfo"
                ],
                "reason": "选择字段IndexCode和PubOrgName以获取与中证指数有限公司有关的指数种类数量。PubOrgName是唯一的过滤条件，通过LIKE确保匹配所有相关记录，而IndexCode用于返回各个指数的唯一标识。没有限制日期等其他条件，因为题目没有要求，查询目标清晰且直接指向中证指数有限公司发布的指数。",
                "sql": "SELECT IndexCode, PubOrgName FROM indexdb.lc_indexbasicinfo WHERE PubOrgName Like '%中证指数有限公司%';"
            },
            {
                "id": 2,
                "subquestion": "查询中证指数有限公司发布的所有指数包含的公司总数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询在2020年调入的公司数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "铜陵有色金属集团股份有限公司的法人代表是谁？ 铜陵有色金属集团股份有限公司在什么时候成立的？回复时给我YYYY/MM/DD的格式 铜陵有色金属集团股份有限公司的总经理是谁？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询铜陵有色金属集团股份有限公司的法人代表。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "选择LegalRepr字段作为查询目标是因为它表示公司的法人代表，而CompanyCode字段则作为限制条件，确保能精确找到铜陵有色金属集团股份有限公司的信息。使用CompanyCode = 268，能有效地定位到该公司的记录，不浪费资源查询所有公司的法人代表。最终选择LegalRepr只需返回该公司的法人信息，因为这是当前查询的唯一需求。",
                "sql": "SELECT LegalRepr FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 268;"
            },
            {
                "id": 2,
                "subquestion": "查询铜陵有色金属集团股份有限公司的成立日期，并以YYYY/MM/DD格式回复。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "选择EstablishmentDate字段作为查询目标是因为它表示公司的成立日期，而CompanyCode字段则作为限制条件，确保能精确找到铜陵有色金属集团股份有限公司的信息。使用CompanyCode = 268，能有效地定位到该公司的记录，并且使用DATE_FORMAT()函数将日期格式化为YYYY/MM/DD格式，从而满足返回格式的要求。最终选择EstablishmentDate只需返回该公司的成立日期，因为这是当前查询的唯一需求。",
                "sql": "ELECT DATE_FORMAT(EstablishmentDate, '%Y/%m/%d') AS EstablishmentDate FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 268;"
            },
            {
                "id": 3,
                "subquestion": "查询铜陵有色金属集团股份有限公司的总经理。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "选择GeneralManager字段作为查询目标是因为它表示公司的总经理，而CompanyCode字段则作为限制条件，确保能精确找到铜陵有色金属集团股份有限公司的信息。使用CompanyCode = 268，能有效地定位到该公司的记录，从而获取其总经理的信息。最终选择GeneralManager只需返回该公司的总经理信息，因为这是当前查询的唯一需求。",
                "sql": "SELECT GeneralManager FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 268"
            }
        ]
    },
    {
        "question": "深科技的信披网址是哪个网站? 该公司在过去的进行了几次非公开增发 最近一次非公开增发的数量是多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询深科技的信披网址。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "在本查询中，仅选择DisclosureWebsites字段，因为它是直接显示深科技的信息披露网址的唯一字段。CompanyCode字段被设定为44，这是深科技的唯一标识符，通过这个条件确保查询精确性，返回的结果将准确反映深科技的信披网址。",
                "sql": "SELECT DisclosureWebsites FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 44;"
            },
            {
                "id": 2,
                "subquestion": "查询深科技过去进行过多少次非公开增发。",
                "table_name": [
                    "astockfinancedb.lc_ashareseasonednewissue"
                ],
                "reason": "查询使用了InnerCode字段来确保统计的记录仅限于深科技，其值设定为57。IssueType字段用于筛选特定的增发类型，设定为21表示非公开增发。通过IfEffected字段的值为1，仅考虑有效的增发记录。这些字段的选择确保了获取到的统计数据准确反映深科技过去进行的非公开增发次数。",
                "sql": "SELECT COUNT(*) AS NonPublicIssueCount FROM astockfinancedb.lc_ashareseasonednewissue WHERE InnerCode = 57 AND IssueType = 21 AND IfEffected = 1;"
            },
            {
                "id": 3,
                "subquestion": "查询深科技最近一次非公开增发的数量。",
                "table_name": [
                    "astockfinancedb.lc_ashareseasonednewissue"
                ],
                "reason": "查询使用了InnerCode字段来确保检索的记录仅限于深科技，其值为57。通过IssueType字段的限制，设定为21以确保仅查询非公开增发记录。IfEffected字段的值设定为1，过滤出有效的增发记录。InitialInfoPublDate字段用于排序，以获得最后进行的增发记录。检索IssueVol字段以获取最新一次非公开增发的数量，满足题目要求。",
                "sql": "SELECT IssueVol FROM astockfinancedb.lc_ashareseasonednewissue WHERE InnerCode = 57 AND IssueType = 21 AND IfEffected = 1 ORDER BY InitialInfoPublDate DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "福建坤彩材料科技股份有限公司的注册地在哪个省份？该公司2020年年度报告中，未调整的合并资产负债表中提到的资产总计是多少？他的2020年年度报告中，未调整的母公司资产负债表显示的负债合计是多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询福建坤彩材料科技股份有限公司的注册地省份。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "选择了字段State作为所需信息，因为这是查询的目标，即福建坤彩材料科技股份有限公司的注册地省份。CompanyCode字段被选作唯一性标识符，以精确查询该公司，确保获取的数据是针对指定公司的。查询限制条件是WHERE CompanyCode = 206506，确保数据的准确性和相关性。",
                "sql": "SELECT State FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 206506;"
            },
            {
                "id": 2,
                "subquestion": "查询福建坤彩材料科技股份有限公司在2020年年度报告中未调整的合并资产负债表的资产总计。",
                "table_name": [
                    "astockfinancedb.lc_balancesheetall"
                ],
                "reason": "选择TotalAssets作为查询的目标字段，因为它表示在2020年年度报告中福建坤彩材料科技股份有限公司的资产总计。使用CompanyCode字段确保只获取该公司的数据，IfAdjusted和IfMerged确保返回的报告是未调整的合并报告，而使用AccountingStandards选取新会计准则的合格数据。EndDate字段过滤出一年报告期的数据，确保查询精确到2020年12月31日。",
                "sql": "SELECT TotalAssets FROM astockfinancedb.lc_balancesheetall WHERE CompanyCode = 206506 AND IfAdjusted = 2 AND IfMerged = 1 AND AccountingStandards = 1 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2020-12-31';"
            },
            {
                "id": 3,
                "subquestion": "查询福建坤彩材料科技股份有限公司在2020年年度报告中未调整的母公司资产负债表的负债合计。",
                "table_name": [
                    "astockfinancedb.lc_balancesheetall"
                ],
                "reason": "选择TotalLiability作为查询的目标字段，因为它表示在2020年度报告中福建坤彩材料科技股份有限公司的负债合计。选择CompanyCode确保只获取该公司的数据，InfoSource过滤条件确保获取年度报告，而IfAdjusted和IfMerged则分别筛选出未调整和母公司报表的数据。EndDate字段过滤出2020年年度报告期的数据，确保查询的准确性。",
                "sql": "SELECT TotalLiability FROM astockfinancedb.lc_balancesheetall WHERE CompanyCode = 206506 AND InfoSource = '年度报告' AND IfAdjusted = 2 AND IfMerged = 2 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2020-12-31';"
            }
        ]
    },
    {
        "question": "海信视像科技股份有限公司在什么时候成立的，XXXX-XX-XX？ 该公司在2021年的半年度报告中未调整的合并报表营业总成本是多少？该公司在2021年的半年度报告中未调整的合并报表净利润是多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询海信视像科技股份有限公司的成立时间,XXXX-XX-XX。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "我选择了字段EstablishmentDate作为查询的主要字段，因为该字段是本查询所需的关键数据，显示公司成立的日期。同时，我选择了CompanyCode=1070作为限制条件，确保查询结果仅返回海信视像科技股份有限公司的信息。其他字段虽然存在，但对当前查询没有直接关系，未被选用。",
                "sql": "SELECT EstablishmentDate FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 1070;"
            },
            {
                "id": 2,
                "subquestion": "查询海信视像科技股份有限公司在2021年半年度报告中的未调整合并报表的营业总成本。",
                "table_name": [
                    "astockfinancedb.lc_incomestatementall"
                ],
                "reason": "我选择了字段TotalOperatingCost作为查询的关键字段，因为该字段代表了所需的营业总成本。通过CompanyCode=1070我可以指定海信视像科技股份有限公司。InfoSource的过滤确保我获取的是半年度报告的数据，IfAdjusted=2和IfMerged=1则分别确保只考虑未调整的合并报表。这些条件的组合能够精确锁定到符合我们查询需求的唯一一条记录。",
                "sql": "SELECT TotalOperatingCost FROM astockfinancedb.lc_incomestatementall WHERE CompanyCode = 1070 AND IfAdjusted = 2 AND IfMerged = 1 AND InfoSource = '半年度报告' AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-06-30';"
            },
            {
                "id": 3,
                "subquestion": "查询海信视像科技股份有限公司在2021年半年度报告中的未调整合并报表的净利润。",
                "table_name": [
                    "astockfinancedb.lc_incomestatementall"
                ],
                "reason": "我选择了字段NetProfit作为查询的关键字段，因为该字段表示所需的净利润数据。此外，我用CompanyCode=1070明确指明了海信视像科技股份有限公司。InfoSource的限制确保获取的数据来源是半年度报告，IfAdjusted=2和IfMerged=1则确保查询只能获取未调整的合并报表。这些条件的组合确保准确地找到符合条件的净利润数据。",
                "sql": "SELECT NetProfit FROM astockfinancedb.lc_incomestatementall WHERE CompanyCode = 1070 AND InfoSource = '半年度报告' AND IfAdjusted = 2 AND IfMerged = 1 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-06-30';"
            }
        ]
    },
    {
        "question": "申能股份在过去一共接待了几次调研？最近一次调研是什么时候？最近一次调研的地点是哪里？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询申能股份过去接待的调研总次数。",
                "table_name": [
                    "astockeventsdb.lc_investorra"
                ],
                "reason": "在此查询中，选择字段为ReceptionCount来统计申能股份的调研总次数。InnerCode字段被限制为1857，其表示申能股份的证券内部编码，因此该字段是必选的。其他字段如接待日期、活动类别等虽然提供了丰富的信息，但并不影响总次数的统计，在此查询中可省略。选择InnerCode = 1857作为限制条件是必需的，以确保统计结果仅限于申能股份的调研活动。",
                "sql": "SELECT COUNT(*) AS ReceptionCount FROM astockeventsdb.lc_investorra WHERE InnerCode = 1857;"
            },
            {
                "id": 2,
                "subquestion": "查询申能股份最近一次调研的时间。",
                "table_name": [
                    "astockeventsdb.lc_investorra"
                ],
                "reason": "在此查询中，选择字段为ReceptionDate来获取申能股份最近一次调研的时间。InnerCode字段被限制为1857，这确保了查询聚焦于申能股份。选用ORDER BY ReceptionDate DESC和LIMIT 1能够确保我们得到的是最新的一次调研日期，其他字段如接待日期时间等虽然提供了相关背景信息，但在此查询结果中并未必要。",
                "sql": "SELECT ReceptionDate FROM astockeventsdb.lc_investorra WHERE InnerCode = 1857 ORDER BY ReceptionDate DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询申能股份最近一次调研的地点。",
                "table_name": [
                    "astockeventsdb.lc_investorra"
                ],
                "reason": "在此查询中，选择字段为Place来获取申能股份最近一次调研的地点。InnerCode字段被限制为1857，以确保查询仅聚焦在申能股份的记录。选用ORDER BY DATE(STR_TO_DATE(ReceptionDate, '%Y-%m-%d %H:%i:%s')) DESC和LIMIT 1确保能够得到最新的调研地点，其他字段如接待日期时间等虽然提供了相关背景信息，但在此查询结果中并未必要。",
                "sql": "SELECT Place FROM astockeventsdb.lc_investorra WHERE InnerCode = 1857 ORDER BY DATE(STR_TO_DATE(ReceptionDate, '%Y-%m-%d %H:%i:%s')) DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "水晶光电实施完成的员工持股计划有几个？最近一次完成的员工持股计划，股票规模上限和资金总额上限是多少，该计划是否是分期实施的？如果实施回答A，没有实施回答B。",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询水晶光电实施完成的员工持股计划数量。",
                "table_name": [
                    "astockshareholderdb.lc_esop"
                ],
                "reason": "此查询主要目的是统计水晶光电实施完成的员工持股计划数量。根据表中的字段，InnerCode 必须为 7094（代表水晶光电），同时 Process 字段需为 '1022'（代表实施完成）。这两个条件限制了查询结果的范围，仅返回满足条件的计划数量，没有其他字段需要返回，因此选择 COUNT(*) 来实现统计功能。",
                "sql": "SELECT COUNT(*) AS CompletedPlanCount FROM astockshareholderdb.lc_esop WHERE InnerCode = 7094 AND Process = '1022';"
            },
            {
                "id": 2,
                "subquestion": "查询最近一次完成的水晶光电员工持股计划的股票规模上限。",
                "table_name": [
                    "astockshareholderdb.lc_esop"
                ],
                "reason": "此查询旨在获取水晶光电最近一次完成的员工持股计划的股票规模上限。通过设置 InnerCode 为 7094 来过滤至水晶光电的数据，同时通过 Process 字段仅选择状态为 '1022' 的已完成计划。使用 ORDER BY ImpleEndDate DESC 来确保选择最新的完成记录，并通过 LIMIT 1 来取这一条记录，最终返回 ShareCelling 字段作为结果。",
                "sql": "SELECT ShareCelling FROM astockshareholderdb.lc_esop WHERE InnerCode = 7094 AND Process = 1022 ORDER BY ImpleEndDate DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询最近一次完成的水晶光电员工持股计划的资金总额上限。",
                "table_name": [
                    "astockshareholderdb.lc_esop"
                ],
                "reason": "此次查询旨在获取水晶光电最近一次完成的员工持股计划的资金总额上限。设置 InnerCode 为 7094 来过滤该公司的数据，Process 字段设置为 '1022'，以确保查询结果仅包含已完成的持股计划。使用 ORDER BY ImpleEndDate DESC 来定位到最近的完成记录，并通过 LIMIT 1 确保只取最新的记录，最后返回 FundCelling 字段作为查询结果。",
                "sql": "SELECT FundCelling FROM astockshareholderdb.lc_esop WHERE InnerCode = 7094 AND Process = '1022' ORDER BY ImpleEndDate DESC LIMIT 1"
            },
            {
                "id": 4,
                "subquestion": "查询最近一次完成的水晶光电员工持股计划是否是分期实施的。",
                "table_name": [
                    "astockshareholderdb.lc_esop"
                ],
                "reason": "此查询旨在确认最近一次完成的水晶光电员工持股计划是否为分期实施。使用 InnerCode = 7094 来过滤特定公司记录，同时确保 ImpleEndDate 不为空，以确认只选取已完成的计划。通过 ORDER BY ImpleEndDate DESC 限制为最新的记录，并使用 LIMIT 1 只获取一条结果，最终返回 IfPeriod 字段以显示是否分期实施的状态。",
                "sql": "SELECT IfPeriod FROM astockshareholderdb.lc_esop WHERE InnerCode = 7094 AND ImpleEndDate IS NOT NULL ORDER BY ImpleEndDate DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "普洛药业在2020-11-25的最高价和最低价是多少？当天换手率是多少，保留2位小数？年化夏普比率和波动率（日步长）是多少，保留2位小数？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询普洛药业在2020-11-25的最高价。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "在该查询中，字段选择了HighPrice作为必需字段，用于返回普洛药业（InnerCode = 413）在2020年11月25日的最高价信息。限制条件InnerCode确保查询只针对特定证券，而TradingDay的限制则确保数据只来自指定的交易日，它们对于返回精确的信息至关重要。该SQL查询形式正确，并可准确提取所需数据。",
                "sql": "SELECT HighPrice FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = 413 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2020-11-25';"
            },
            {
                "id": 2,
                "subquestion": "查询普洛药业在2020-11-25的最低价。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "在该查询中，字段选择了LowPrice作为必需字段，用来返回普洛药业（InnerCode = 413）在2020年11月25日的最低价信息。限制条件InnerCode确保查询只针对特定证券，而TradingDay的限制则确保数据只来自指定的交易日，这两个条件对返回精确信息至关重要。该SQL查询形式正确，能精确提取所需数据。",
                "sql": "SELECT LowPrice FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = 413 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2020-11-25';"
            },
            {
                "id": 3,
                "subquestion": "查询普洛药业在2020-11-25的换手率，并保留2位小数。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "在该查询中，字段选择了TurnoverRate作为必需字段，用于返回普洛药业（InnerCode = 413）在2020年11月25日的换手率，并将结果按2位小数保留。限制条件InnerCode确保查询集中于特定证券，而TradingDay的限制确保数据只来自指定的交易日。这两个条件确保了返回数据的精准性。该SQL查询形式正确，能够准确提取所需数据。",
                "sql": "SELECT ROUND(TurnoverRate, 2) AS TurnoverRate FROM astockmarketquotesdb.qt_stockperformance WHERE InnerCode = 413 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2020-11-25';"
            },
            {
                "id": 4,
                "subquestion": "查询普洛药业的年化夏普比率，并保留2位小数。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "在该查询中，字段选择了YearSharpeRatio作为必需字段，用于返回普洛药业（InnerCode = '413'）的年化夏普比率，并将结果保留两位小数。限制条件InnerCode用于确保查询集中在特定证券，而TradingDay的条件保证数据只来自指定的交易日。该SQL查询形式正确，能够准确提取所需数据。",
                "sql": "SELECT ROUND(YearSharpeRatio, 2) AS YearSharpeRatio FROM astockmarketquotesdb.qt_stockperformance WHERE InnerCode = '413' AND TradingDay like '%2020-11-25%';"
            },
            {
                "id": 5,
                "subquestion": "查询普洛药业的波动率（日步长），并保留2位小数。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "在该查询中，字段选择了YearVolatilityByDay作为必需字段，用于返回普洛药业（InnerCode = '413'）的波动率（日步长），并将结果保留两位小数。限制条件InnerCode确保查询仅针对特定证券，而TradingDay的条件保证数据只来自指定的交易日。这两个条件确保了返回数据的精准性。该SQL查询形式正确，能够准确提取所需数据。",
                "sql": "SELECT ROUND(YearVolatilityByDay, 2) AS YearVolatilityByDay FROM astockmarketquotesdb.qt_stockperformance WHERE InnerCode = '413' AND TradingDay like '%2020-11-25%';"
            }
        ]
    },
    {
        "question": "截止2021-06-17上海建工的近一周成交金额（万元）是多少？近一个月的成交金额（万元）是多少？与月成交均价相比，近一周的成交均价是高还是低？这两者具体是多少？保留两位小数。",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询截止到2021-06-17上海建工的近一周成交金额（万元）。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "在查询中，选择了关键字段InnerCode、TradingDay和TurnoverValueRW。InnerCode用来确定特定的证券，TradingDay保证了数据的时效性（截止于2021-06-17），而TurnoverValueRW是计算近一周成交金额（万元）的核心字段。InnerCode的取值1289是对的证券标识符，TradingDay的取值确保限定在特定日期。最终SQL片段根据这些字段和条件生成，进行有效的查询。",
                "sql": "SELECT TurnoverValueRW / 10000 AS RecentWeekTurnoverValue FROM astockmarketquotesdb.qt_stockperformance WHERE InnerCode = 1289 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-06-17';"
            },
            {
                "id": 2,
                "subquestion": "查询截止到2021-06-17上海建工的近一个月成交金额（万元）。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "在查询中，选择了关键字段InnerCode、TradingDay和TurnoverValueRM。InnerCode用来定位特定的证券，TradingDay确保了数据的时效性（截止于2021-06-17），而TurnoverValueRM是计算近一个月成交金额（万元）的重要字段。InnerCode的取值1289为特定证券标识符，TradingDay的取值确保只获取特定日期的数据。最终SQL片段通过这些条件生成，有效地获取近一个月成交金额数据。",
                "sql": "SELECT TurnoverValueRM / 10000 AS RecentWeekTurnoverValue FROM astockmarketquotesdb.qt_stockperformance WHERE InnerCode = 1289 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-06-17';"
            },
            {
                "id": 3,
                "subquestion": "查询截止到2021-06-17上海建工的近一个月的成交均价。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "在查询中，选择了关键字段InnerCode、TradingDay和AvgPriceRM。InnerCode用来定位特定的证券，TradingDay确保只获取特定时段的数据，而AvgPriceRM是计算近一个月成交均价的重要字段。InnerCode的取值1289为特定证券的标识符，TradingDay的取值范围确保只获取到特别的一个月数据。最终的SQL片段通过条件整合生成，能够有效地获取平均成交价格的所需数据。",
                "sql": "SELECT ROUND(AVG(AvgPriceRM), 2) AS AvgPriceInTenThousand FROM astockmarketquotesdb.qt_stockperformance WHERE InnerCode = 1289 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) <= '2021-06-17' AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) > DATE_SUB('2021-06-17', INTERVAL 1 MONTH);"
            },
            {
                "id": 4,
                "subquestion": "查询截止到2021-06-17上海建工的近一周的成交均价与近一个月的成交均价相比是高还是低，并分别提供这两者的具体数值，保留两位小数。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "在查询中，选择了关键字段InnerCode、TradingDay、AvgPriceRM和AvgPriceRW。InnerCode用来确保获取到特定证券的记录，TradingDay用于限定所需的日期数据，而AvgPriceRM和AvgPriceRW是计算近一周与近一个月成交均价的必要字段。InnerCode的取值1289为特定证券的标识符，TradingDay的取值确保只获取近基地的相关数据。最终的SQL片段通过条件整合生成，从而获取两个均价的比较数据。",
                "sql": "SELECT ROUND(AvgPriceRM, 2) AS AvgPriceRM, ROUND(AvgPriceRW, 2) AS AvgPriceRW FROM astockmarketquotesdb.qt_stockperformance WHERE InnerCode = '1289' AND TradingDay LIKE '2021-06-17%';"
            }
        ]
    },
    {
        "question": "建元信托股份有限公司十大股东的类型有哪些？ 2020年年度报告中，该公司的最大股东是谁，他持有多少股份？ 2020年年度报告中,该公司的国有股东持股总和是多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询建元信托股份有限公司十大股东的类型。",
                "table_name": [
                    "astockshareholderdb.lc_mainshlistnew"
                ],
                "reason": "本查询旨在获取建元信托股份有限公司的十大股东类型。因此，选取的字段为SHType，是直接反映股东类型的重要数据字段。查询中根据CompanyCode限定为1749以确定特定企业，InfoTypeCode限定为1，仅检索前十大股东，SHNo条件是为了确保结果只包含前十名股东。这三项条件共同构成了有效的过滤逻辑，以获取所需的股东类型数据。",
                "sql": "select DISTINCT (SHType) from AStockShareholderDB.LC_MainSHListNew where CompanyCode = 1749  and InfoTypeCode = 1 and SHNo <= 10"
            },
            {
                "id": 2,
                "subquestion": "查询2020年年度报告中建元信托股份有限公司的最大股东的名称。",
                "table_name": [
                    "astockshareholderdb.lc_mainshlistnew"
                ],
                "reason": "本查询旨在获取建元信托股份有限公司在2020年年度报告中的最大股东名称。因此，选取的字段为SHList、HoldSum和PCTOfTotalShares。其中，SHList是必需的，因为我们需要获取最大股东的名称。店定条件中，CompanyCode = 1749限制为特定公司；year(EndDate) = 2020确保只查询2020年的数据；InfoTypeCode = 1保证只查找前十大股东；InfoSource = '年度报告'限制为来源于年度报告的数据；ORDER BY SHNo ASC LIMIT 1选取排名第一的股东，即最大股东。通过这些条件，可以有效地检索所需的信息。",
                "sql": "SELECT SHList, HoldSum, PCTOfTotalShares FROM AStockShareholderDB.LC_MainSHListNew WHERE CompanyCode = 1749 AND year(EndDate) = 2020 AND InfoTypeCode = 1 and InfoSource='年度报告' ORDER BY SHNo ASC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询2020年年度报告中建元信托股份有限公司最大股东持有的股份数量。",
                "table_name": [
                    "astockshareholderdb.lc_mainshlistnew"
                ],
                "reason": "本查询旨在获取建元信托股份有限公司在2020年年度报告中的最大股东持有的股份数量。因此，选取的字段为SHList和HoldSum，两者均为核心字段，其中SHList提供最大股东的名称，而HoldSum则是查询目的所需的持股数量。查询条件中，CompanyCode = 1749限制为特定公司；year(EndDate) = 2020确保只查询2020年的数据；InfoTypeCode = 1保证只查找前十大股东；InfoSource = '年度报告'限制为来源于年度报告的数据；ORDER BY SHNo ASC LIMIT 1则确保选取最大股东的信息。通过这些条件，可以有效地检索所需的信息。",
                "sql": "SELECT SHList, HoldSum, PCTOfTotalShares FROM AStockShareholderDB.LC_MainSHListNew WHERE CompanyCode = 1749 AND year(EndDate) = 2020 AND InfoTypeCode = 1 and InfoSource='年度报告' ORDER BY SHNo ASC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询2020年年度报告中建元信托股份有限公司国有股东持股的总和。",
                "table_name": [
                    "astockshareholderdb.lc_mainshlistnew"
                ],
                "reason": "本查询旨在计算建元信托股份有限公司在2020年年度报告中的国有股东持股的总和。因此，选择了sum(HoldSum)作为查询字段，这是计算持股总数的核心字段。查询中，CompanyCode = 1749限制为特定公司；year(EndDate) = 2020确保只查询2020年的数据；SHType = '国有股东'确保获取国有股东的信息；InfoSource = '年度报告'保证数据来源的有效性。通过这些条件，可以有效且准确地计算出国有股东持股的总和。",
                "sql": "SELECT  sum(HoldSum) FROM AStockShareholderDB.LC_MainSHListNew WHERE CompanyCode = 1749 AND year(EndDate) = 2020 and SHType = '国有股东' and InfoSource='年度报告'"
            }
        ]
    },
    {
        "question": "2020年最后一个交易日是哪一天？鱼跃医疗在2020年末的总市值是多少元？鱼跃医疗在2020年末回看近12个月成交金额是多少元？鱼跃医疗在2020年末的12个月总成交金额占总市值的比值是多少？保留2位小数。",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2020年最后一个交易日的日期。",
                "table_name": [
                    "constantdb.qt_tradingdaynew"
                ],
                "reason": "查询需要获取交易日期（TradingDate），因此必须选取该字段。同时，为了确保获取到的是2020年最后一个交易日，添加了 IfYearEnd = 1 的限制条件，且根据 TradingDate 的具体格式检查日期，确保符合 '2020-12-31' 的条件。这两个条件都是达到查询目的的重要组成部分。",
                "sql": "SELECT TradingDate FROM constantdb.qt_tradingdaynew WHERE IfYearEnd = 1 AND DATE(STR_TO_DATE(TradingDate, '%Y-%m-%d %H:%i:%s.%f')) = '2020-12-31';"
            },
            {
                "id": 2,
                "subquestion": "查询鱼跃医疗在2020年末的总市值。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "查询需要获取鱼跃医疗的总市值（TotalMV），因此必须选取该字段。同时，为了确保获取到的是正确的市值，添加了 InnerCode = 6709 的限制条件来区分特定证券，且根据 TradingDay 的具体日期限制于 '2020-12-31'。这两个条件都是达到查询目的的重要组成部分。",
                "sql": "select TotalMV from astockmarketquotesdb.qt_stockperformance where innercode = 6709 and date(tradingday) =  '2020-12-31';"
            },
            {
                "id": 3,
                "subquestion": "查询鱼跃医疗在2020年末回看近12个月的成交金额。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "查询需要获取鱼跃医疗在2020年末的近12个月成交金额（TurnoverValueRY），因此必须选取该字段。同时，为了确保获取到的是特定的证券，添加了 InnerCode = 6709 的限制条件，以对应鱼跃医疗，且根据 TradingDay 的具体日期限制于 '2020-12-31'。这两个条件都是达到查询目的的重要组成部分。",
                "sql": "select TurnoverValueRY from astockmarketquotesdb.qt_stockperformance  where innercode = 6709 and date(tradingday) =  '2020-12-31';"
            },
            {
                "id": 4,
                "subquestion": "计算鱼跃医疗在2020年末的12个月总成交金额占总市值的比值，并保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "2021年1月11日，正常交易且跳空低开的股票一共有几只？ 其中振幅最大的是哪个股票？ 这只股票主力净流入量是多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2021年1月11日正常交易且跳空低开的股票的数量。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "选取TradingDay字段用于限制查询到特定的交易日2021-01-11，OpenPrice和PrevClosePrice字段用来判断跳空低开的条件。COUNT(*)用于统计满足这些条件的股票数量。所有的条件都关键确保查询的准确性。",
                "sql": "SELECT COUNT(*) AS JumpLowerOpenCount FROM astockmarketquotesdb.qt_dailyquote WHERE DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-01-11' AND OpenPrice < PrevClosePrice;"
            },
            {
                "id": 2,
                "subquestion": "查询2021年1月11日正常交易且跳空低开的股票中振幅最大的是哪只股票。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "根据查询需求，通过选取TradingDay字段限定2021年1月11日的交易记录，OpenPrice与PrevClosePrice用于判断跳空低开的条件，RangePCT用于排序找出振幅最大的股票，InnerCode为必选字段用于返回最终结果。",
                "sql": "SELECT InnerCode FROM astockmarketquotesdb.qt_stockperformance WHERE TradingDay like '%2021-01-11%' AND OpenPrice < PrevClosePriceorder by  RangePCT desc limit 1;"
            },
            {
                "id": 3,
                "subquestion": "查询振幅最大股票的主力净流入量。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockcapflowindex"
                ],
                "reason": "通过选取TradingDay字段限定到2021年1月11日的交易记录，InnerCode用于确定具体查询的股票。MainNetBuyVolume和MainNetBuyValue是关键字段，前者用于获取主力净流入量，后者虽然不是必选但提供流入价值的财务参考。",
                "sql": "SELECT MainNetBuyVolume,MainNetBuyValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE TradingDay like '%2021-01-11%' and innercode = '9783';"
            }
        ]
    },
    {
        "question": "2019下半年，成交量创近一季度新高的证券数量最多的交易日是哪一天？那一天成交量创近一季度新高的证券数量有多少？那一天上涨和下跌的证券数量分别是？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2019下半年成交量创近一季度新高的证券数量最多的交易日。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "选择字段TradingDay作为关键字段，是因为我们需要按交易日分组查询，而IfHighestTVRMThree则作为关键限制条件，确保只查询出创造近一季度新高成交量的证券，从而完成对2019下半年相关数据的过滤和汇总。同时，限制条件date(TradingDay) BETWEEN '2019-07-01' AND '2019-12-31'确保了交易日在所需时间范围内。最终查询通过COUNT(*)计算每个交易日满足条件的证券数量，并按数量降序展示，LIMIT 1获取数量最多的交易日。",
                "sql": "SELECT TradingDay, COUNT(*) AS NumberOfSecurities FROM AStockMarketQuotesDB.CS_StockPatterns WHERE date(TradingDay) BETWEEN '2019-07-01' AND '2019-12-31' AND IfHighestTVRMThree = 1 GROUP BY TradingDay ORDER BY NumberOfSecurities DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询在上述交易日成交量创近一季度新高的证券数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询在上述交易日上涨的证券数量。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "选择字段TradingDay并过滤到特定日期2019-12-17是为了确保统计在该交易日上涨的证券。使用COUNT(CASE WHEN ChangePCT > 0 THEN 1 END) AS RisingCount来统计涨幅大于0的证券数量，这是查询的核心目的。通过LIMIT排除所有不相关的记录，从而实现精准的数量统计。",
                "sql": "SELECT COUNT(CASE WHEN ChangePCT > 0 THEN 1 END) AS RisingCount FROM astockmarketquotesdb.qt_stockperformance WHERE TradingDay LIKE '2019-12-17%';"
            },
            {
                "id": 4,
                "subquestion": "查询在上述交易日下跌的证券数量。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "选择TradingDay作为关键字段并过滤到特定日期2019-12-17，以确保查询仅聚焦于该交易日的数据。使用COUNT(CASE WHEN ChangePCT < 0 THEN 1 END) AS FallingCount来统计跌幅小于0的证券数量，这是查询的核心目的。通过LIMIT排除所有不相关的记录，从而实现精准的数量统计。",
                "sql": "SELECT COUNT(CASE WHEN ChangePCT < 0 THEN 1 END) AS FallingCount  FROM astockmarketquotesdb.qt_stockperformance WHERE TradingDay LIKE '2019-12-17%';"
            }
        ]
    },
    {
        "question": "2021下半年，成交量创近一季度新高的证券数量最多的交易日是哪一天，XXXX年XX月XX日？那一天成交量创近一季度新高的证券数量有多少？那一天上涨和下跌的证券数量分别是？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "找出2021下半年成交量创近一季度新高的证券数量最多的交易日。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "该SQL查询的目的是找出2021年下半年成交量创近一季度新高的证券数量最多的交易日。通过选择TradingDay作为分组字段，能够按交易日取得数据。通过COUNT(*)来统计满足条件的证券数量。选择的TradingDay字段时间范围为2021-07-01到2021-12-31，过滤出特定的交易日；IfHighestTVRMThree字段取值为1，确保只计算确实创近一季度新高的证券数量。这些选择直接支持查询目标，实现了对证券成交量的有效统计，并且LIMIT 1限制查询结果只返回一个交易日。",
                "sql": "SELECT TradingDay, COUNT(*) AS NumberOfSecurities FROM AStockMarketQuotesDB.CS_StockPatterns WHERE date(TradingDay) BETWEEN '2021-07-01' AND '2021-12-31' AND IfHighestTVRMThree = 1 GROUP BY TradingDay ORDER BY NumberOfSecurities DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询成交量创近一季度新高的证券数量最多的交易日的成交量新高证券数量。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "该SQL查询用于找出2021年9月1日成交量创近一季度新高的证券数量。查询中选择了特定的交易日TradingDay，并通过COUNT(*)来统计满足条件的证券数量。此查询条件清晰且集中在2021-09-01这一单一交易日上，同时利用IfHighestTVRMThree字段来确保统计的是成交量确实创出新高的证券。这样的组合能够直接得出所需的结果。",
                "sql": "SELECT COUNT(*) AS NumberOfSecurities FROM AStockMarketQuotesDB.CS_StockPatterns WHERE date(TradingDay) = '2021-09-01' AND IfHighestTVRMThree = 1"
            },
            {
                "id": 3,
                "subquestion": "查询成交量创近一季度新高的证券数量最多的交易日上涨的证券数量。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "该SQL查询旨在找出2021年9月1日成交量创近一季度新高的证券数量最多的交易日中上涨的证券数量。选择TradingDay字段以过滤出特定交易日的数据，并借助COUNT(CASE WHEN ...来统计正涨幅的情况。This ensures that only the relevant trading day is included (2021-09-01) and only the stocks that experienced an increase. 这样可以有效定位需要的统计数据，满足查询需求。",
                "sql": "SELECT COUNT(CASE WHEN ChangePCT > 0 THEN 1 END) AS RisingCount FROM astockmarketquotesdb.qt_stockperformance WHERE TradingDay LIKE '2021-09-01%';"
            },
            {
                "id": 4,
                "subquestion": "查询成交量创近一季度新高的证券数量最多的交易日下跌的证券数量。",
                "table_name": [
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "该SQL查询旨在找出2021年9月1日成交量创近一季度新高的证券数量最多的交易日中下跌的证券数量。通过选择TradingDay字段来聚焦在特定日期的数据，并使用COUNT(CASE WHEN ChangePCT < 0 THEN 1 END)来统计下跌证券的数量，确保不仅统计到符合要求的交易日，还过滤出真实下跌的证券。这样的设计直接满足查询目标。",
                "sql": "SELECT COUNT(CASE WHEN ChangePCT < 0 THEN 1 END) AS FallingCount FROM astockmarketquotesdb.qt_stockperformance WHERE TradingDay LIKE '2021-09-01%';"
            }
        ]
    },
    {
        "question": "2020上半年共上市多少只基金？其中设立规模最大的基金是？其中数量最多的基金类别是什么，有多少只？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2020上半年共上市的基金数量。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "此查询旨在获取2020年上半年上市基金的数量。在分析中，ListedDate是关键字段，它直接影响筛选条件。此外，COUNT(*)是返回数量的唯一字段，因为我们只需数量而不需详细数据。筛选条件必需是WHERE子句中的时间限制（2020年1月1日至2020年6月30日），确保结果准确，涵盖所需的时间范围。",
                "sql": "SELECT COUNT(*) AS FundCount FROM publicfunddb.mf_fundarchives WHERE DATE(STR_TO_DATE(ListedDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2020-01-01' AND '2020-06-30';"
            },
            {
                "id": 2,
                "subquestion": "查询2020上半年设立规模最大的基金名称（按证监会官网命名）。",
                "table_name": [
                    "publicfunddb.mf_fundarchives",
                    "publicfunddb.mf_fundarchives",
                    "publicfunddb.mf_fundprodname"
                ],
                "reason": "该查询旨在获取2020年上半年设立规模最大的基金名称。重要字段为InnerCode（用于确保关联）和FoundedSize（用于排序选择最大值）。查询限制条件通过WHERE子句定义了只查询2020上半年的数据，并通过ORDER BY对FoundedSize降序排序，LIMIT 1以确保选取规模最大的一项。第二个查询可以通过使用InnerCode来获取DisclName字段及InfoSource的限制，确保该基金名称来自证监会官网。",
                "sql": "SELECT InnerCode FROM publicfunddb.mf_fundarchives WHERE InnerCode IN (SELECT COUNT(*) AS FundCount FROM publicfunddb.mf_fundarchives WHERE DATE(STR_TO_DATE(ListedDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2020-01-01' AND '2020-06-30') ORDER BY FoundedSize DESC LIMIT 1;SELECT DisclName,InfoSource FROM publicfunddb.mf_fundprodname WHERE InnerCode = 276422 and InfoSource = '证监会官网'; "
            },
            {
                "id": 3,
                "subquestion": "查询2020上半年数量最多的基金类别是什么。",
                "table_name": [
                    "publicfunddb.mf_fundarchives",
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "该查询旨在获取2020年上半年基金类别数量最多的基金类型。在分析中，InnerCode用于关联召唤所需基金，而FundType是分组和最终结果字段，表明不同类别的基金数目。此外，ListedDate限定了数据范围。限制条件通过WHERE子句进行时间限制，GROUP BY进行分类，并通过ORDER BY确保只返回数量最多者。",
                "sql": "SELECT FundType FROM publicfunddb.mf_fundarchives WHERE InnerCode IN (SELECT COUNT(*) AS FundCount FROM publicfunddb.mf_fundarchives WHERE DATE(STR_TO_DATE(ListedDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2020-01-01' AND '2020-06-30') GROUP BY FundType ORDER BY COUNT(*) DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询2020上半年数量最多的基金类别的基金数量有多少只。",
                "table_name": [
                    "publicfunddb.mf_fundarchives",
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "该查询旨在获取2020年上半年数量最多的基金类别的基金数量。关键字段InnerCode与FundType用于筛选和分类。同时，限制条件确保选取的基金是在20020年上半年上市的。GROUP BY与ORDER BY COUNT(*)结合，确保找到最多的类别，再通过LIMIT限制结果为1以得到数量。最终COUNT(*)用于统计数量。",
                "sql": "SELECT COUNT(*) as NumberOfFunds FROM publicfunddb.mf_fundarchives WHERE InnerCode IN (SELECT COUNT(*) AS FundCount FROM publicfunddb.mf_fundarchives WHERE DATE(STR_TO_DATE(ListedDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2020-01-01' AND '2020-06-30') GROUP BY FundType ORDER BY COUNT(*) DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "博时基金公司成立于（XXXX年XX月XX日）？比博时基金成立更早的基金公司(简称)有哪些？和博时基金属于同一地区的基金公司(简称)有哪些？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询博时基金公司的成立日期。",
                "table_name": [
                    "publicfunddb.mf_investadvisoroutline"
                ],
                "reason": "在公募基金管理人概况表中，我们选择了EstablishmentDate作为查询字段，因为它是我们希望获取的博时基金公司成立日期。为了从表中提取该日期，必须使用InvestAdvisorCode作为限制条件，值为41509，这是我们已知的博时基金公司的编码，确保精准定位记录。该SQL确保查询只返回所需的信息而排除无关数据，极大地提高了查询效率与结果的相关性。",
                "sql": "SELECT EstablishmentDate FROM publicfunddb.mf_investadvisoroutline WHERE InvestAdvisorCode = 41509;"
            },
            {
                "id": 2,
                "subquestion": "查询成立日期早于博时基金公司的基金公司简称。",
                "table_name": [
                    "publicfunddb.mf_investadvisoroutline"
                ],
                "reason": "我们在公募基金管理人概况表中选择了InvestAdvisorAbbrName作为查询字段，因为它是我们希望获取的成立日期早于博时基金公司的基金公司简称。同时，EstablishmentDate是这个查询的限制条件，其值设置为早于1998年7月13日，这是博时基金公司的成立日期。这样可以确保我们筛选出所有相关的基金公司，并且去掉了其他不必要的字段。",
                "sql": "SELECT DISTINCT InvestAdvisorAbbrName FROM PublicFundDB.MF_InvestAdvisorOutline WHERE EstablishmentDate < '1998-07-13 12:00:00.000';"
            },
            {
                "id": 3,
                "subquestion": "查询与博时基金公司属于同一地区的基金公司简称。",
                "table_name": [
                    "publicfunddb.mf_investadvisoroutline"
                ],
                "reason": "在公募基金管理人概况表中，我们选择了InvestAdvisorAbbrName作为查询字段，因为它是我们希望获取的与博时基金公司同一地区的基金公司简称。同时，Region字段用作查询的限制条件，其值设置为440300，以确保只返回位于该特定地区的基金公司。这样可以有效获取与博时公司同地区的所有相关公司简称。",
                "sql": "SELECT DISTINCT InvestAdvisorAbbrName FROM PublicFundDB.MF_InvestAdvisorOutline WHERE Region in(440300);"
            }
        ]
    },
    {
        "question": "最新更新的2019年度报告中，机构持有无限售流通A股数量合计最多的公司简称是？在这份报告中，该公司机构持有无限售流通A股比例合计是多少，2位小数？该公司前十大股东持股比例合计是多少，2位小数？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2019年度报告中机构持有无限售流通A股数量合计最多的公司简称。",
                "table_name": [
                    "astockshareholderdb.lc_stockholdingst"
                ],
                "reason": "在查询中，选择的 InnerCode 字段是必选，目的是返回具有最多无限售流通A股的公司证券编码。InstitutionsHoldings 是关键字段，通过其值进行排序以确定持股最多的公司。查询限制条件为 InfoSource = '年度报告' 保障数据来源的准确性，及 YEAR(EndDate) = 2019 确保数据时效性，这些约束条件确保了要查询数据的质量和相关性。",
                "sql": "SELECT InnerCode FROM astockshareholderdb.lc_stockholdingst WHERE InfoSource = '年度报告' AND YEAR(EndDate) = 2019 ORDER BY InstitutionsHoldings DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询该公司在2019年度报告中机构持有无限售流通A股的比例合计，并保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询该公司在2019年度报告中前十大股东持股比例合计，并保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "最新更新的2021年度报告中，机构持有无限售流通A股数量合计最多的公司简称是？ 在这份报告中，该公司机构持有无限售流通A股比例合计是多少，保留2位小数？ 该公司前十大股东持股比例合计是多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2021年度报告中机构持有无限售流通A股数量合计最多的公司简称。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 2,
                "subquestion": "查询该公司在2021年度报告中机构持有无限售流通A股的比例，并保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询该公司前十大股东持股比例合计。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "安琪酵母在2020年全年的最高收盘价是多少，出现在哪一天（XXXX年XX月XX日）？当天成交量是否创近一月以来新高？连续放量天数为多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询安琪酵母在2020年全年的最高收盘价及其对应的日期。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "选择InnerCode字段用于过滤出安琪酵母（'1421'），用TradingDay字段限定仅查询2020年的数据。ClosePrice是需要获取的最高收盘价信息，TradingDay是对应的日期。选择'LIKE'匹配使得可以覆盖整个2020年的交易日。",
                "sql": "SELECT TradingDay, ClosePrice FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = '1421' AND TradingDay LIKE '%2020%' ORDER BY ClosePrice DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询安琪酵母在最高收盘价当天的成交量是否创近一月以来新高。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "选择InnerCode字段用于过滤出安琪酵母（'1421'），用TradingDay字段限定仅查询2020年8月21日的数据。IfHighestTVolumeRM是需要获取的是否创近一月以来新高成交量的信息，通过指定日期和证券编码来确认查询目标。",
                "sql": "    SELECT IfHighestTVolumeRM FROM astockmarketquotesdb.cs_stockpatterns WHERE InnerCode = '1421' AND TradingDay like '%2020-08-21%';"
            },
            {
                "id": 3,
                "subquestion": "查询安琪酵母的连续放量天数。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "选择InnerCode字段用于过滤出安琪酵母（1421），用TradingDay字段限定仅查询2020年8月21日的数据。VolumeRisingUpDays是需要获取的连续放量天数的信息，通过指定日期和证券编码来确认查询目标。",
                "sql": "SELECT VolumeRisingUpDays FROM astockmarketquotesdb.cs_stockpatterns WHERE InnerCode = 1421 AND TradingDay LIKE '2020-08-21%';"
            }
        ]
    },
    {
        "question": "安琪酵母在2021年全年的最高收盘价是多少，出现在哪一天，XXXX年XX月XX日？当天成交量是否创近一月以来新高？连续放量天数为多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询安琪酵母在2021年全年的最高收盘价及其出现日期。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "在该表中，InnerCode用于识别具体想查询的证券（安琪酵母）；TradingDay用于限定具体的交易日期范围；ClosePrice是查询的核心字段，所需找出的最高收盘价。同时，字符串操作将TradingDay转换为日期格式，以便正确筛选2021年内的数据。通过限制条件，确保了结果的准确性和有效性。最终返回最高收盘价及其交易日期。",
                "sql": "SELECT ClosePrice, TradingDay FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = 1421 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2021-01-01' AND '2021-12-31' ORDER BY ClosePrice DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询在最高收盘价出现当天的成交量是否创近一月以来新高。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "在查询中，InnerCode用于识别特定的证券（安琪酵母），TradingDay限定为2021年5月25日，这样可以确保查询的数据具有准确的时间和上下文，而IfHighestHPriceRM是核心字段，用于判断该日期的成交量是否创近一月的新高。结构和条件组合确保能够获取正确的结果。",
                "sql": "SELECT IfHighestHPriceRM FROM astockmarketquotesdb.cs_stockpatterns WHERE InnerCode = '1421' AND TradingDay like '%2021-05-25%';"
            },
            {
                "id": 3,
                "subquestion": "查询安琪酵母在2021年全年的连续放量天数。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "在查询中，InnerCode用于识别特定的证券（安琪酵母），VolumeRisingUpDays为核心字段，表示连续放量天数，TradingDay目前的条件过于局限，只针对2021-05-25，无法满足查询2021年全年的需求，应该调整为查询所有相关的日期。",
                "sql": "SELECT VolumeRisingUpDays FROM astockmarketquotesdb.cs_stockpatterns WHERE InnerCode = 1421 AND TradingDay LIKE '2021-05-25%';"
            }
        ]
    },
    {
        "question": "厦门钨业在2019年全年的最低收盘价是多少，出现在哪一天，日期格式为XXXX年XX月XX日？厦门钨业在当天的VRSI量相对强弱是多少，保留4位小数？厦门钨业已连跌几天？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询厦门钨业在2019年的最低收盘价及其出现日期。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "本查询主要是为确定厦门钨业在2019年的最低收盘价及其对应交易日。所选字段包括InnerCode以筛选出厦门钨业，TradingDay以获取具体的交易日期，以及ClosePrice以确定最低收盘价。此外，通过year(TradingDay) = '2019'和InnerCode = '1720'来限制查询范围，确保只返回必要的数据，避免无关信息的干扰。利用MIN函数找到最低收盘价，并对TradingDay进行分组，是为了整理出每个交易日的收盘价数据。",
                "sql": "SELECT TradingDay, MIN(ClosePrice) AS MinClosePrice FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = '1720' AND year(TradingDay) = '2019' GROUP BY TradingDay ORDER BY MinClosePrice ASC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询出现最低收盘价当天厦门钨业的VRSI量相对强弱，并保留4位小数。",
                "table_name": [
                    "astockmarketquotesdb.cs_turnovervoltecindex"
                ],
                "reason": "该查询旨在获取厦门钨业在2019年1月31日的VRSI量相对强弱值，并将结果保留到小数点后四位。InnerCode = 1720限定了查询特定的证券，DATE(TradingDay) = '2019-01-31'确保获取的记录是正确的交易日期。ROUND函数用于格式化输出，以便于用户查看VRSI的确切数值信息。",
                "sql": "SELECT ROUND(VRSI, 4) AS VRSI FROM astockmarketquotesdb.cs_turnovervoltecindex WHERE InnerCode = 1720 AND DATE(TradingDay) = '2019-01-31';"
            },
            {
                "id": 3,
                "subquestion": "查询厦门钨业在2019年连跌的天数。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "该查询旨在获取厦门钨业在2019年内的连续下跌天数，主要关注FallingDownDays字段。InnerCode = '1720'确保仅查询厦门钨业的数据，然而CURRENT SQL中TradingDay使用LIKE条件仅匹配到特定的交易日期，这可能限制了数据的提取。如果目标是获取2019年所有的连跌数据，建议对TradingDay使用更广泛的条件来获取整个年份的展示。",
                "sql": "SELECT FallingDownDays FROM astockmarketquotesdb.cs_stockpatterns WHERE InnerCode = '1720' AND TradingDay LIKE '2019-01-31%';"
            }
        ]
    },
    {
        "question": "厦门钨业在2021年全年的最低收盘价是多少，出现在哪一天，XXXX年XX月XX日？厦门钨业在当天的VRSI量相对强弱是多少，保留4位小数？厦门钨业已连跌几天？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询厦门钨业在2021年全年的最低收盘价及其出现日期。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "我选择了InnerCode、TradingDay和ClosePrice字段。InnerCode（'1720'）用于指定厦门钨业，TradingDay用于设定在2021年的有效日期范围，而ClosePrice用于计算最低收盘价。TradingDay的取值范围是2021年所有有效交易日期，ClosePrice为对应的股价。通过这些精确的字段和限制条件组合，最大程度保证了结果的准确性和完整性。",
                "sql": "SELECT TradingDay, MIN(ClosePrice) AS MinClosePrice FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = '1720' AND year(TradingDay) = '2021' GROUP BY TradingDay ORDER BY MinClosePrice ASC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询厦门钨业在最低收盘价出现当天的VRSI量相对强弱，并保留4位小数。",
                "table_name": [
                    "astockmarketquotesdb.cs_turnovervoltecindex"
                ],
                "reason": "选取InnerCode、TradingDay和VRSI字段。InnerCode（1720）用于锁定厦门钨业，TradingDay指定为'2021-01-15'，是之前最低收盘价的日期。这保证了查询的有效性。VRSI是要查询的核心指标，通过ROUND函数控制输出格式保留4位小数，确保结果的精确性。",
                "sql": "SELECT ROUND(VRSI, 4) AS VRSI FROM astockmarketquotesdb.cs_turnovervoltecindex WHERE InnerCode = 1720 AND DATE(TradingDay) = '2021-01-15';"
            },
            {
                "id": 3,
                "subquestion": "查询厦门钨业当前已连跌的天数。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "我选择了InnerCode、TradingDay和FallingDownDays。InnerCode（1720）用于锁定厦门钨业，TradingDay则用于确保从指定的日期数据中查询，虽然在输出结果中不需要显示。FallingDownDays是我需要获取的核心指标，以显示厦门钨业当前的连跌天数。",
                "sql": "SELECT FallingDownDays FROM astockmarketquotesdb.CS_StockPatterns WHERE InnerCode = 1720 AND TradingDay like '%2021-01-15%';"
            }
        ]
    },
    {
        "question": "芯片概念概念板块属于什么2级概念？截至2023年末，该2级概念下一共有几个未终止的概念板块？芯片概念概念板块的英文名称是什么？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询芯片概念概念板块所属的2级概念。",
                "table_name": [
                    "astockindustrydb.lc_conceptlist"
                ],
                "reason": "此次查询主要针对概念板块中与 '芯片概念' 相关的2级概念。因此选择了 ConceptName 作为核心条件，确保能精准找到所需概念。此外，SubclassCode 和 SubclassName 作为输出字段，能够提供目标2级概念的编码和名称，这对理解芯片概念归属非常重要。在查询中未添加其他限制条件如日期和状态，因为查询针对性很强且已足够明确。",
                "sql": "SELECT ConceptName, SubclassCode, SubclassName FROM astockindustrydb.lc_conceptlist WHERE ConceptName like '芯片概念';"
            },
            {
                "id": 2,
                "subquestion": "查询截至2023年末，芯片概念所属的2级概念下未终止的概念板块数量。",
                "table_name": [
                    "astockindustrydb.lc_conceptlist"
                ],
                "reason": "此次查询的目的是统计截至2023年末，芯片概念（SubclassCode = '1101'）下未终止的概念板块数量。选择了 SubclassCode 作为过滤条件确保只获取相关的2级概念，而通过 EndDate 判断未终止的概念，这样能够直接统计出有效概念数量。使用 COUNT(*) 返回匹配条件的记录数，适应查询目标而未涉及其他字段或条件。",
                "sql": "SELECT COUNT(*) AS ActiveConceptCount FROM astockindustrydb.lc_conceptlist WHERE SubclassCode = '1101' AND (EndDate IS NULL OR EndDate > '2023-12-31');"
            },
            {
                "id": 3,
                "subquestion": "查询芯片概念概念板块的英文名称。",
                "table_name": [
                    "astockindustrydb.lc_conceptlist"
                ],
                "reason": "此次查询旨在获取包含'芯片概念'的概念板块的英文名称，因此只选择了 ConceptEngName 作为输出字段。使用 ConceptName 的模糊匹配 ('%芯片概念%') 作为过滤条件，以确保能够找到所有相关的结果，而不需要考虑其他字段或条件。这种方式直接聚焦在查询需求上，保证了结果的相关性。",
                "sql": "SELECT ConceptEngName FROM astockindustrydb.lc_conceptlist WHERE ConceptName like '%芯片概念%';"
            }
        ]
    },
    {
        "question": "按2021年末新版申万行业分类，现在杰瑞股份属于什么申万二级行业？ 2021年末，该申万二级行业中有几个股票？ 2021年末，该股票的总市值占二级行业总市值百分之多少（四舍五入保留2位小数）？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2021年末杰瑞股份所属的申万二级行业。",
                "table_name": [
                    "astockindustrydb.lc_exgindustry"
                ],
                "reason": "查询目的是获取杰瑞股份所属的申万二级行业，故需选取CompanyCode为78143并获取相关的SecondIndustryName。由于问题要求的是2021年末的信息，因此InfoPublDate是重要的过滤条件，虽然在查询中没有直接限制以年份过滤，但通过InfoPublDate的降序排列可间接获取2021年末的最新信息。此处未指定标准（Standard），因为我们尚不清楚特定标准是否在查询中有涉及，但Industry字段有助于了解公司行业。",
                "sql": "select SecondIndustryName from astockindustrydb.lc_exgindustry where CompanyCode = 78143 order by InfoPublDate DESC limit 1;"
            },
            {
                "id": 2,
                "subquestion": "查询2021年末该申万二级行业中包含的股票数量。",
                "table_name": [
                    "astockindustrydb.lc_exgindustry"
                ],
                "reason": "查询目的是统计申万二级行业中名为'专用设备'的股票数量，因此选择了CompanyCode进行distinct计数，以避免重复统计。InfoPublDate需要特定为2021年12月31日以获取该时间节点的信息，而InfoSource需包含'申万'以过滤出相关的行业分类信息。",
                "sql": "SELECT count(distinct companycode) FROM astockindustrydb.lc_exgindustry exgindustry WHERE SecondIndustryName = '专用设备' AND date(InfoPublDate) = '2021-12-31'  AND InfoSource like '%申万%';"
            },
            {
                "id": 3,
                "subquestion": "查询杰瑞股份在2021年末的总市值。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询该申万二级行业在2021年末的总市值。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "计算杰瑞股份的总市值占该申万二级行业总市值的百分比，并保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "2021年末，按新版申万行业分类，现在均胜电子属于什么申万一级行业？ 2021年末，该一级行业中有几个股票？ 2021年末，该股票的A股流通市值占一级行业流通市值百分之多少（四舍五入保留2位小数）？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询均胜电子在2021年末按新版申万行业分类所属的一级行业。",
                "table_name": [
                    "astockindustrydb.lc_exgindustry"
                ],
                "reason": "选择字段FirstIndustryName是为了获取均胜电子在指定时间内所属的一级行业名称，CompanyCode用于指明特定公司，IfPerformed确保查询结果为已执行的记录，Standard限定为新版申万行业分类。对于时间限制，InfoPublDate的范围指向2021年内以获取相关信息。具体取值CompanyCode为1632，IfPerformed = 1，Standard = 38，目的在于准确限制查询范围与结果。",
                "sql": "select FirstIndustryName from astockindustrydb.lc_exgindustry where CompanyCode = 1632 and IfPerformed = 1 order by InfoPublDate DESC limit 1"
            },
            {
                "id": 2,
                "subquestion": "查询2021年末该一级行业中包含的股票数量。",
                "table_name": [
                    "constantdb.secumain",
                    "astockindustrydb.lc_exgindustry"
                ],
                "reason": "选择InnerCode作为查询关键字段，以便从证券主表筛选出对应于行业“汽车”的证券，同时通过内部选择获取CompanyCode，保证信息的匹配。在查询中，添加FirstIndustryName = '汽车'来确保检索到的证券与这一行业相关，InfoPublDate的条件确保信息发布在2021年末之前，同时使用CancelDate确认该证券在2021年末仍然有效。",
                "sql": "select distinct innercode from constantdb.secumain where companycode in (SELECT DISTINCT companycode FROM astockindustrydb.lc_exgindustry WHERE FirstIndustryName = '汽车' AND DATE(InfoPublDate) <= '2021-12-31' AND (DATE(CancelDate) > '2021-12-31' OR CancelDate IS NULL))"
            },
            {
                "id": 3,
                "subquestion": "查询均胜电子在2021年末的A股流通市值。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询2021年末该一级行业的总流通市值。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "计算均胜电子的A股流通市值占该一级行业流通市值的百分比，并四舍五入保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "2020-07-02风电零部件行业的总市值是多少(元)？其中A股流通市值是多少（元）？下一个交易日的A股流通市值是多少（元）？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2020-07-02风电零部件行业的总市值。",
                "table_name": [
                    "astockindustrydb.lc_indfinindicators",
                    "astockindustrydb.lc_industryvaluation"
                ],
                "reason": "该 查询 最终的 SQL 片段包含两个部分: 第一个查询从 lc_indfinindicators 表中筛选出行业代码和行业名称，确保使用 Standard = 41 作为行业分类标准，同时筛选出包含 '风电零部件' 的行业名。该查询的结果是过滤出风电相关行业的代码，得出 IndustryCode '630602'。第二个查询则是根据获取的 IndustryCode 和特定的 TradingDay '2020-07-02' 从 lc_industryvaluation 表中检索出对应的总市值 TotalMV。这两个查询相辅相成，前一个查询为后一个做条件过滤。",
                "sql": "SELECT IndustryCode, IndustryName FROM AStockIndustryDB.LC_IndFinIndicators WHERE Standard = 41 AND IndustryName LIKE '%风电零部件%';SELECT TotalMV FROM astockindustrydb.lc_industryvaluation WHERE IndustryCode = '630602' AND TradingDay LIKE '2020-07-02%';"
            },
            {
                "id": 2,
                "subquestion": "查询2020-07-02风电零部件行业的A股流通市值。",
                "table_name": [
                    "astockindustrydb.lc_industryvaluation"
                ],
                "reason": "此次查询只涉及 lc_industryvaluation 表，从中提取 A股流通市值（NegotiableMV）。查询条件明确，IndustryCode 设置为 '630602'，确保仅获取风电零部件行业的数据。此外，通过 TradingDay 设置为 '2020-07-02%'，确保仅返回该日期的流动市值数据，保证了数据的准确性与相关性。",
                "sql": "SELECT NegotiableMV FROM astockindustrydb.lc_industryvaluation WHERE IndustryCode = '630602' AND TradingDay LIKE '2020-07-02%';"
            },
            {
                "id": 3,
                "subquestion": "查询2020-07-03风电零部件行业的A股流通市值。",
                "table_name": [
                    "astockindustrydb.lc_industryvaluation",
                    "astockindustrydb.lc_industryvaluation"
                ],
                "reason": "此次查询从 lc_industryvaluation 表中提取了 A股流通市值 (NegotiableMV)。使用了 IndustryCode '630602' 确保只获取风电零部件行业的数据。TradingDay 的限制条件使用了子查询来获取第一个交易，即在 '2020-07-02' 之后的最小交易日，让保证数据的有效性和最新性。所有条件的组合确保我们获得的是最新的流通市值数据。",
                "sql": "SELECT NegotiableMV FROM astockindustrydb.lc_industryvaluation WHERE IndustryCode = '630602' AND TradingDay = (SELECT MIN(TradingDay) FROM astockindustrydb.lc_industryvaluation WHERE TradingDay > '2020-07-02' AND IndustryCode = '630602');"
            }
        ]
    },
    {
        "question": "软通动力在2019年报酬总额和领取报酬的管理层人数是多少？ 其中前三名董事的报酬是多少？ 该公司2020年报酬总额是多少？与2019年相比增加还是减少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询软通动力在2019年的报酬总额。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "本查询旨在获取软通动力在2019年的管理层报酬总额。所选字段TotalYearPay是关键字段，可直接提供查询所需信息。CompanyCode限制确保只针对特定公司进行搜索，而EndDate限制则确保所返回数据的年份在2019，保证了所查询数据的准确性与相关性。",
                "sql": "SELECT TotalYearPay FROM astockoperationsdb.lc_rewardstat WHERE CompanyCode IN ('613963', '102335737') AND EndDate LIKE '%2019%';"
            },
            {
                "id": 2,
                "subquestion": "查询软通动力在2019年领取报酬的管理层人数。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "本查询旨在获取软通动力在2019年领取报酬的管理层人数。所选字段NumPayManagers是关键字段，直接提供所需信息。CompanyCode限制确保只针对特定公司进行搜索，而EndDate限制则确保所返回的数据是在2019年，这保证了数据的准确性与相关性。",
                "sql": "SELECT NumPayManagers FROM astockoperationsdb.lc_rewardstat WHERE CompanyCode IN ('613963', '102335737') AND EndDate LIKE '%2019%';"
            },
            {
                "id": 3,
                "subquestion": "查询软通动力在2019年报酬最高的前三名董事的报酬。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "本查询旨在获取软通动力在2019年报酬最高的前三名董事的报酬。所选字段High3Directors是关键字段，直接提供所需的信息。尽管选择了CompanyCode字段，但并不是必须的。重要的是，缺少针对EndDate的限制条件，未确保获取的数据是2019年的，会影响所需数据的准确性与相关性。",
                "sql": "SELECT CompanyCode ,High3Directors FROM astockoperationsdb.lc_rewardstat WHERE CompanyCode IN ('613963', '102335737') ;"
            },
            {
                "id": 4,
                "subquestion": "查询软通动力在2020年的报酬总额。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "本查询旨在获取软通动力在2020年的报酬总额。选择TotalYearPay作为核心字段是必要的，因为它提供了查询要求的数据。尽管包含了CompanyCode字段，但实际查询并不需要。最重要的是，EndDate条件未能正确限制到仅2020年，从而可能导致检索到不必要的2019年数据，这不符合查询的意图。",
                "sql": "SELECT TotalYearPay, CompanyCode ,EndDate  FROM astockoperationsdb.lc_rewardstat WHERE CompanyCode IN ('613963', '102335737') AND (EndDate LIKE '%2019%' or EndDate LIKE '%2020%' );"
            },
            {
                "id": 5,
                "subquestion": "比较软通动力2019年和2020年报酬总额，判断是增加还是减少。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "天弘增利短债C的基金管理人是谁？ 该基金的运作方式是什么？ 该基金的投资风格是什么？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询天弘增利短债C的基金管理人。",
                "table_name": [
                    "publicfunddb.mf_fundarchives",
                    "publicfunddb.mf_investadvisoroutline"
                ],
                "reason": "通过查询InnerCode为'283028'的公募基金以获取其对应的InvestAdvisorCode。这一步骤确保准确提取与该基金相关的基金管理人编码。随后，使用InvestAdvisorCode为'2020'进行了第二次查询，获取该管理人的名称。选择这些字段的原因是它们直接关联到查询目标——基金管理人。查询限制条件确保了返回的字段仅限于相关管理人信息。",
                "sql": "SELECT InvestAdvisorCode FROM publicfunddb.mf_fundarchives WHERE InnerCode = '283028';SELECT InvestAdvisorName FROM publicfunddb.mf_investadvisoroutline WHERE InvestAdvisorCode = '2020';"
            },
            {
                "id": 2,
                "subquestion": "查询天弘增利短债C的运作方式。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "通过查询InnerCode为'283028'的公募基金以获取其对应的Type。这一步骤确保准确提取与该基金相关的运作方式。选择这个字段是因为它直接关联到查询目标——基金的运作方式。限制条件确保了返回的字段仅限于相关基金的运作信息。",
                "sql": "SELECT Type FROM publicfunddb.mf_fundarchives WHERE InnerCode = '283028';"
            },
            {
                "id": 3,
                "subquestion": "查询天弘增利短债C的投资风格。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "通过查询InnerCode为'283028'的公募基金以获取其对应的InvestStyle。这一步骤确保准确提取与该基金相关的投资风格信息。选择InvestStyle字段是因为它直接关联到查询目标。限制条件确保了返回的字段仅限于相关基金的投资风格信息。",
                "sql": "SELECT InvestStyle FROM publicfunddb.mf_fundarchives WHERE InnerCode = '283028';"
            }
        ]
    },
    {
        "question": "截止至中国软件2021年Q4季度，研发投入总额是多少？（调整后的合并报表） 截止至中国软件2021年Q4季度，研发投入占营业收入比例是多少？ 请根据中国软件截止至2021年Q4季度的研发人员数量和占比推算公司总人数（计算方式：总人数 = 研发人员数量 ÷ (研发人员占比 ÷ 100)，结果取整）。",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询中国软件截止至2021年Q4季度的研发投入总额（调整后的合并报表）。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在这个查询中选择了总研发投入（TotalRDInput）作为因变量，CompanyCode字段用于过滤中国软件公司，EndDate字段用来确保只获取截止2021年Q4的数据。限制条件IfMerged = 1和IfAdjusted = 1保证了获取的是调整后的合并报表。这些字段的选择合理性基于题目要求，确保查询的信息准确且直接。",
                "sql": "SELECT TotalRDInput FROM astockfinancedb.lc_intassetsdetail WHERE CompanyCode = '1475'  AND EndDate LIKE '%2021-12-31%';"
            },
            {
                "id": 2,
                "subquestion": "查询中国软件截止至2021年Q4季度的研发投入占营业收入的比例。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在这个查询中选择了研发投入占营业收入的比例（RDInputRatio）作为因变量，CompanyCode字段用于过滤中国软件公司，EndDate字段用来确保只获取截止至2021年Q4的数据。限制条件IfMerged = 1和IfAdjusted = 1保证了获取的是调整后的合并数据，确保结果符合查询要求。这些字段的选择合理性基于题目要求，以确保查询的信息准确且直接。",
                "sql": "SELECT RDInputRatio FROM astockfinancedb.lc_intassetsdetail WHERE CompanyCode = '1475'  AND EndDate LIKE '%2021-12-31%';"
            },
            {
                "id": 3,
                "subquestion": "查询中国软件截止至2021年Q4季度的研发人员数量。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在这个查询中选择了研发人员数量（RDStaffNum）作为因变量，CompanyCode字段用于过滤中国软件公司，EndDate字段用来确保只获取截止至2021年Q4的数据。限制条件IfMerged = 1和IfAdjusted = 1保证了获取的是调整后的合并数据，确保结果符合查询要求。这些字段的选择合理性基于题目要求，以确保查询的信息准确且直接。",
                "sql": "SELECT RDStaffNumRatio FROM astockfinancedb.lc_intassetsdetail WHERE CompanyCode = '1475'  AND EndDate LIKE '%2021-12-31%';"
            },
            {
                "id": 4,
                "subquestion": "查询中国软件截止至2021年Q4季度的研发人员占比。",
                "table_name": [
                    "astockfinancedb.lc_intassetsdetail"
                ],
                "reason": "在这个查询中选择了研发人员数量占比（RDStaffNumRatio）作为因变量，CompanyCode字段用于过滤中国软件公司，EndDate字段用来确保只获取截止至2021年Q4的数据。限制条件IfMerged = 1和IfAdjusted = 1保证了获取的是调整后的合并数据，确保结果符合查询要求。这些字段的选择合理性基于题目要求，以确保查询的信息准确且直接。",
                "sql": "SELECT RDStaffNumRatio FROM astockfinancedb.lc_intassetsdetail WHERE CompanyCode = '1475'  AND EndDate LIKE '%2021-12-31%';"
            },
            {
                "id": 5,
                "subquestion": "根据查询到的研发人员数量和研发人员占比推算中国软件的总人数（按计算方式取整）。（计算方式：总人数 = 研发人员数量 ÷ (研发人员占比 ÷ 100)，结果取整）。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "陆家嘴在2019年的最大借贷金额是多少？ 陆家嘴在2019年的单次首次借贷金额最高的借款方是谁？其单次首次借贷金额是多少？ 陆家嘴在2019年最新的借贷事件是什么？给我的答案包括事件内容、借贷方、出借方和借贷金额等信息。",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询陆家嘴在2019年的最大借贷金额。",
                "table_name": [
                    "astockeventsdb.lc_credit"
                ],
                "reason": "从 lc_credit 表中选取最新借贷金额(LatestLoanSum)和首次借贷金额(FirstLoanSum)作为查询字段，以获取陆家嘴在2019年的最大借贷情况。使用CompanyCode进行公司过滤确保获取陆家嘴的数据，使用InitialInfoPublDate的LIKE子句对时间范围进行限制以确保查询的准确性。",
                "sql": "SELECT MAX(LatestLoanSum) ,MAX(FirstLoanSum) FROM astockeventsdb.lc_credit WHERE CompanyCode = '1596' AND InitialInfoPublDate LIKE '2019%';"
            },
            {
                "id": 2,
                "subquestion": "查询陆家嘴在2019年单次首次借贷金额最高的借款方。",
                "table_name": [
                    "astockeventsdb.lc_credit"
                ],
                "reason": "从 lc_credit 表中选取首次借贷金额(FirstLoanSum)来查询2019年陆家嘴的单次首次借贷金额最高的记录，使用CompanyCode进行公司过滤确保只获取陆家嘴的数据，InitialInfoPublDate的LIKE子句对时间范围进行限制以确保查询的准确性。",
                "sql": "SELECT FirstLoanSum FROM astockeventsdb.lc_credit WHERE CompanyCode = '1596' AND InitialInfoPublDate LIKE '2019%' ORDER BY FirstLoanSum DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询陆家嘴在2019年单次首次借贷金额最高的借款方的单次首次借贷金额。",
                "table_name": [
                    "astockeventsdb.lc_credit"
                ],
                "reason": "在 lc_credit 表中选择首次借贷金额(FirstLoanSum)，用于查询陆家嘴在2019年单次首次借贷金额最高的记录。通过使用CompanyCode进行公司过滤，确保只获取陆家嘴的数据，使用InitialInfoPublDate的LIKE子句对日期范围进行限制保证查询的准确性。",
                "sql": "SELECT FirstLoanSum FROM astockeventsdb.lc_credit WHERE CompanyCode = '1596' AND InitialInfoPublDate LIKE '2019%' ORDER BY FirstLoanSum DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询陆家嘴在2019年最新的借贷事件，包括事件内容、借贷方、出借方和借贷金额等信息。",
                "table_name": [
                    "astockeventsdb.lc_credit"
                ],
                "reason": "在 lc_credit 表中选择事件内容(EventContent)、借入方(Borrower)、出借方(Lender)以及最新借贷金额(LatestLoanSum)来获取陆家嘴在2019年最新的借贷事件信息。通过CompanyCode进行公司过滤，确保只获取陆家嘴的数据，对初次信息发布日期使用LIKE子句进行日期范围限制，以保障查询数据的时效性。",
                "sql": "SELECT EventContent, Borrower, Lender, LatestLoanSum FROM astockeventsdb.lc_credit WHERE CompanyCode = '1596' AND InitialInfoPublDate LIKE '2019%' ORDER BY InfoPublDate DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "亿帆医药在2020年的最大担保金额是多少？ 亿帆医药在2020年的最大担保金额涉及的担保方是谁？担保金额是多少？ 亿帆医药在2020年最新的担保事件是什么？答案包括事件内容、担保方、被担保方和担保金额信息。",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询亿帆医药在2020年的最大担保金额。",
                "table_name": [
                    "astockeventsdb.lc_warrant"
                ],
                "reason": "在查询中，选择了字段 LatestGuaranteeSum（最新担保金额）来获取亿帆医药在2020年内的最大担保金额，并且使用 CompanyCode（公司代码）来确保选择到特定公司（亿帆医药）相关的记录。InfoPublDate（信息发布日期）用于限制数据范围，确保仅查询2020年内的记录。所有选取的字段和条件都与目标直接相关，保证了查询的有效性和准确性。",
                "sql": "SELECT MAX(LatestGuaranteeSum) AS MaxGuaranteeSum FROM astockeventsdb.lc_warrant WHERE CompanyCode = '2344' AND InfoPublDate LIKE '%2020%';"
            },
            {
                "id": 2,
                "subquestion": "查询亿帆医药在2020年最大担保金额涉及的担保方。",
                "table_name": [
                    "astockeventsdb.lc_warrant"
                ],
                "reason": "在查询中，选择仅返回 GuarantorCompany（提供担保企业）字段。这是因为我们需要找到亿帆医药在2020年最大担保金额涉及的担保方。同时，通过使用 CompanyCode（公司代码）来明确查询特定公司（亿帆医药）的记录，并通过 InfoPublDate（信息发布日期）限制为2020年的数据。为了获取最大担保金额的担保方，查询结果按 LatestGuaranteeSum（最新担保金额）降序排列，并限制结果为1条。",
                "sql": "SELECT GuarantorCompany FROM astockeventsdb.lc_warrant WHERE CompanyCode = '2344' AND InfoPublDate LIKE '%2020%' ORDER BY LatestGuaranteeSum DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询亿帆医药在2020年最大担保金额的具体担保金额。",
                "table_name": [
                    "astockeventsdb.lc_warrant"
                ],
                "reason": "在查询中，选择返回 LatestGuaranteeSum（最新担保金额）字段来提取亿帆医药在2020年内的最大担保金额。通过使用 CompanyCode（公司代码）来确保查询仅针对亿帆医药的记录，使用 InfoPublDate（信息发布日期）限制条件为2020年，以确保查询符合题目需求。通过对 LatestGuaranteeSum 字段进行降序排列，并限制返回的结果为1条，以获取最大担保金额。",
                "sql": "SELECT LatestGuaranteeSum FROM astockeventsdb.lc_warrant WHERE CompanyCode = '2344' AND InfoPublDate LIKE '%2020%' ORDER BY LatestGuaranteeSum DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询亿帆医药在2020年最新的担保事件。",
                "table_name": [
                    "astockeventsdb.lc_warrant"
                ],
                "reason": "在查询中，选择返回 EventContent（事件内容）、GuarantorCompany（提供担保企业）、SecuredParty（接受担保企业）和 LatestGuaranteeSum（最新担保金额）这几个字段，以获得亿帆医药在2020年最新的担保事件的信息。通过使用 CompanyCode（公司代码）和 InfoPublDate（信息发布日期）的限制，确保查询只针对亿帆医药并过滤出2020年的记录。结果按 InfoPublDate 降序排列，并限制返回记录为1条，以获取最新的担保事件。",
                "sql": "SELECT EventContent, GuarantorCompany, SecuredParty, LatestGuaranteeSum FROM astockeventsdb.lc_warrant WHERE CompanyCode = '2344' AND InfoPublDate LIKE '%2020%' ORDER BY InfoPublDate DESC LIMIT 1;"
            },
            {
                "id": 5,
                "subquestion": "查询亿帆医药在2020年最新担保事件的事件内容、担保方、被担保方和担保金额信息。",
                "table_name": [
                    "astockeventsdb.lc_warrant"
                ],
                "reason": "在查询中，选择返回 EventContent（事件内容）、GuarantorCompany（提供担保企业）、SecuredParty（接受担保企业）和 LatestGuaranteeSum（最新担保金额）这几个字段，以获取亿帆医药在2020年最新担保事件的信息。通过使用 CompanyCode（公司代码）和 InfoPublDate（信息发布日期）的限制，确保查询只针对亿帆医药并过滤出2020年的记录。结果按 InfoPublDate 降序排列，并限制返回记录为1条，以获取最新的担保事件。",
                "sql": "SELECT EventContent, GuarantorCompany, SecuredParty, LatestGuaranteeSum FROM astockeventsdb.lc_warrant WHERE CompanyCode = '2344' AND InfoPublDate LIKE '%2020%' ORDER BY InfoPublDate DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "许继电气在2021年发布了多少条重大事项公告？ 许继电气在2021年签订的涉及金额最大的合同标的是哪个？金额是多少？ 许继电气在2021年签订金额最大的合同是否发生在重大事项公告之后？签订的合同日期和重大事项公告日期分别是什么（XXXX-XX-XX）？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询许继电气在2021年发布的重大事项公告数量。",
                "table_name": [
                    "astockeventsdb.lc_warrant",
                    "astockeventsdb.lc_credit",
                    "astockeventsdb.lc_suitarbitration",
                    "astockeventsdb.lc_entrustinv",
                    "astockeventsdb.lc_regroup",
                    "astockeventsdb.lc_majorcontract",
                    "astockeventsdb.lc_investorra",
                    "astockeventsdb.lc_investordetail"
                ],
                "reason": "本查询统计了2021年许继电气发布的重大事项公告数量。所用字段包括CompanyCode（公司代码为118），InfoPublDate（首次信息发布日期模糊匹配2021年）以及对其他表各自的参与者ID与时间进行过滤。所有字段和条件直接与查询目标相关联，确保所需信息的全面性和准确性。查询将通过count(*)来得到每个表格中符合条件的记录数量，从而统计总公告数量。",
                "sql": "SELECT count(*) FROM astockeventsdb.lc_warrant WHERE CompanyCode = '118' AND InfoPublDate LIKE '%2021%' ;SELECT count(*) FROM astockeventsdb.LC_Credit WHERE InnerCode = '147' AND InfoPublDate LIKE '%2021%' ;SELECT count(*) FROM astockeventsdb.LC_SuitArbitration WHERE ParticipantID = '118' AND InsertTime LIKE '%2021%' ;SELECT count(*) FROM astockeventsdb.LC_EntrustInv WHERE ParticipantID = '118' AND InsertTime LIKE '%2021%' ;SELECT count(*) FROM astockeventsdb.LC_Regroup WHERE ParticipantID = '118' AND InsertTime LIKE '%2021%' ;SELECT count(*) FROM astockeventsdb.LC_MajorContract WHERE ParticipantID = '118' AND InsertTime LIKE '%2021%' ;SELECT count(*) FROM astockeventsdb.LC_InvestorRa WHERE ParticipantID = '118' AND InsertTime LIKE '%2021%' ;SELECT count(*) FROM astockeventsdb.LC_InvestorDetail WHERE ParticipantID = '118' AND InsertTime LIKE '%2021%' ;"
            },
            {
                "id": 2,
                "subquestion": "查询许继电气在2021年签订的涉及金额最大的合同的标的。",
                "table_name": [
                    "astockeventsdb.lc_majorcontract"
                ],
                "reason": "本查询旨在获取2021年许继电气签订的涉及金额最大的合同标的。选择字段包括ContractObject（合同标的）和AmountInvolved（涉及金额），通过CompanyCode和InfoPublDate过滤条件来确保数据的准确性。结果通过ORDER BY AmountInvolved DESC排序，使得可以显示最高金额的合同标的，LIMIT 1确保只取第一条记录。",
                "sql": "SELECT ContractObject, AmountInvolved FROM astockeventsdb.lc_majorcontract WHERE CompanyCode = '118' AND InfoPublDate LIKE '%2021%' ORDER BY AmountInvolved DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询许继电气在2021年签订的金额最大的合同的金额。",
                "table_name": [
                    "astockeventsdb.lc_majorcontract"
                ],
                "reason": "本查询旨在获取2021年许继电气签订的金额最大的合同的金额。选择字段AmountInvolved（涉及金额）为主要目标，通过CompanyCode和InfoPublDate过滤条件来确保数据的准确性，且通过ORDER BY AmountInvolved DESC来获取最大合同金额，LIMIT 1确保只取第一条记录。",
                "sql": "SELECT ContractObject, AmountInvolved FROM astockeventsdb.lc_majorcontract WHERE CompanyCode = '118' AND InfoPublDate LIKE '%2021%' ORDER BY AmountInvolved DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询许继电气在2021年签订的金额最大的合同的签订日期。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询许继电气在2021年签订的金额最大的合同是否发生在重大事项公告之后。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "查询许继电气在2021年发布的重大事项公告的日期。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "美亚光电在2021年的减持计划中，最大可减持股份数量（减持股份数量上限(股)）与最小可减持股份数量（减持股份数量下限(股)）的差距是多少？ 美亚光电在2021年的减持计划中涉及了多少名股东？ 美亚光电在2021年的减持计划中，哪位股东的最大减持比例最高？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询美亚光电在2021年的减持计划中的最大可减持股份数量和最小可减持股份数量。",
                "table_name": [
                    "astockshareholderdb.lc_transferplan"
                ],
                "reason": "选择了字段 CompanyCode、InfoPublDate、ReduceShareCeiling 和 ReduceShareFloor 作为关键字段。公司代码是固定的用于筛选特定公司的数据；信息发布日期限制在2021年；最大可减持股份数量和最小可减持股份数量是核心查询结果，这两个字段提供了关于减持计划的直接统计信息。限制条件保证查询的准确性和相关性。",
                "sql": "SELECT MAX(ReduceShareCeiling) , MIN(ReduceShareFloor) FROM astockshareholderdb.lc_transferplan WHERE CompanyCode = '170424' AND InfoPublDate LIKE '%2021%' ;"
            },
            {
                "id": 2,
                "subquestion": "查询美亚光电在2021年的减持计划中最大可减持股份数量与最小可减持股份数量的差距。",
                "table_name": [
                    "astockshareholderdb.lc_transferplan"
                ],
                "reason": "选择了字段 CompanyCode、InfoPublDate、ReduceShareCeiling 和 ReduceShareFloor 作为关键字段。公司代码确保查询只针对美亚光电；信息发布日期限制在2021年；最大可减持股份数量和最小可减持股份数量准确地提供了有关减持计划的核心数据，这两个字段是计算两者间差距的必要条件。限制条件有效地保证了查询结果的专一性与准确性。",
                "sql": "SELECT MAX(ReduceShareCeiling) , MIN(ReduceShareFloor) FROM astockshareholderdb.lc_transferplan WHERE CompanyCode = '170424' AND InfoPublDate LIKE '%2021%' ;"
            },
            {
                "id": 3,
                "subquestion": "查询美亚光电在2021年的减持计划中涉及的股东数量。",
                "table_name": [
                    "astockshareholderdb.lc_transferplan"
                ],
                "reason": "选择了字段 CompanyCode、InfoPublDate、SHName 和 TransferPlanType 作为关键字段。公司代码保证查询数据仅关联到美亚光电；信息发布日期限制在2021年；SHName 通过 DISTINCT 计算确保能返回唯一股东的数量；TransferPlanType 则确保只关注于主动和被动减持计划，所有条件保证了查询结果的相关性与准确性。",
                "sql": "SELECT COUNT(DISTINCT SHName) AS NumberOfShareholders FROM astockshareholderdb.lc_transferplan WHERE CompanyCode = '170424' AND InfoPublDate LIKE '%2021%' AND TransferPlanType IN (127, 128);"
            },
            {
                "id": 4,
                "subquestion": "查询美亚光电在2021年的减持计划中，哪位股东的最大减持比例最高。",
                "table_name": [
                    "astockshareholderdb.lc_transferplan"
                ],
                "reason": "选择了字段 CompanyCode、InfoPublDate、SHName 和 ReduceRatioCeiling 作为关键字段。公司代码保证查询针对特定公司（美亚光电）；信息发布日期限制在2021年；SHName 是关键字段，用以识别股东，而 MAX(ReduceRatioCeiling) 是获取每位股东最大减持比例的必要部分。所有条件确保查询的准确性与相关性。",
                "sql": "SELECT SHName, MAX(ReduceRatioCeiling) AS MaxReduceRatio FROM astockshareholderdb.lc_transferplan WHERE CompanyCode = '170424' AND InfoPublDate LIKE '%2021%' AND TransferPlanType IN (127, 128) GROUP BY SHName ORDER BY MaxReduceRatio DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "利亚德的证券代码和ISIN代码是什么？该公司最新的证监会行业代码是多少？该行业下有多少家上市公司？利亚德最近三次投资者调研的具体时间(xxxx-xx-xx的格式)、地点和参与机构数量分别是多少？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询利亚德的证券代码和ISIN代码。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "在本查询中，我选择了 SecuCode 作为唯一查询字段，因为这是我所需结果中的证券代码。为了确保查询精准，我使用了 CompanyCode = 169848 作为限制条件，保证只返回与利亚德相关的记录。其他字段尽管包含丰富信息，但在此次查询场景中无关紧要，因此未被选取或指定任何WHERE子句条目，有助于简化查询性能。",
                "sql": "SELECT SecuCode FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 169848;"
            },
            {
                "id": 2,
                "subquestion": "查询利亚德的ISIN代码。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "在本查询中，我只选择了 SecuCode 作为查询字段，因为这是我所需结果中的证券代码。而且通过使用 CompanyCode = 169848 作为过滤条件，我能确保查询结果专注在利亚德公司。其他的字段虽然含有丰富的信息，但在这个具体的查询上下文中是不必要的，因此未被选取。这使得查询更为简洁高效，并着重于获取所需的结果。",
                "sql": "SELECT SecuCode FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = 169848;"
            },
            {
                "id": 3,
                "subquestion": "查询利亚德最新的证监会行业代码。",
                "table_name": [
                    "constantdb.secumain"
                ],
                "reason": "在本查询中，我选择了 ISIN 作为唯一查询字段，因为它是国际证券识别的关键数据。我通过使用 innercode = '15937' 作为过滤条件，确保准确地查询到与利亚德相关的证券记录。其他字段尽管能提供丰富的背景信息，但在此次查询中并无必要，因此未被选取，确保查询高效且直接。",
                "sql": "SELECT ISIN FROM constantdb.secumain WHERE innercode = '15937'"
            },
            {
                "id": 4,
                "subquestion": "查询利亚德所在行业下的上市公司总数量。",
                "table_name": [
                    "astockbasicinfodb.lc_stockarchives",
                    "astockbasicinfodb.lc_stockarchives"
                ],
                "reason": "在本查询中，我首先提取了公司的 InduCSRC 行业代码，以确认利亚德所处的行业。在第二条 SQL 语句中，使用此行业代码作为条件，以 COUNT(*) 查询出同行业内上市公司数量。这种逻辑使得查询具有连贯性，首先获取所需的行业信息，然后再统计相关数量。各个条件均围绕针对特定的利亚德展开，确保查询准确且有效。",
                "sql": "SELECT InduCSRC FROM astockbasicinfodb.lc_stockarchives WHERE CompanyCode = '169848';SELECT COUNT(*) AS NumberOfCompanies FROM astockbasicinfodb.lc_stockarchives WHERE  InduCSRC = '13039'"
            },
            {
                "id": 5,
                "subquestion": "查询利亚德最近三次投资者调研的具体时间。",
                "table_name": [
                    "astockeventsdb.lc_investorra"
                ],
                "reason": "在本查询中，我选择了 ReceptionDate 作为唯一查询字段，因为这是我所需的投资者调研发生的具体时间。通过采用 InnerCode = 15937 作为限制条件，我确保只查询利亚德的相关记录，并且使用了 ORDER BY ReceptionDate DESC LIMIT 3 来获取最近的三次调研活动的日期。这种逻辑使得查询既高效又直接，能够迅速返回所需的信息。",
                "sql": "SELECT ReceptionDate FROM astockeventsdb.lc_investorra WHERE InnerCode = 15937 ORDER BY ReceptionDate DESC LIMIT 3;"
            },
            {
                "id": 6,
                "subquestion": "查询利亚德最近三次投资者调研的具体地点。",
                "table_name": [
                    "astockeventsdb.lc_investorra"
                ],
                "reason": "在本查询中，我选择了 Place 作为唯一查询字段，因为这是获取投资者调研所在地点的信息。通过使用 InnerCode = 15937 作为过滤条件，确保只查询与利亚德相关的调研记录。同时，使用 ORDER BY ReceptionDate DESC LIMIT 3 来获取最近的三次调研的地点。这种查询设计确保了结果的准确性和针对性，特定到利亚德的投资者调研活动。",
                "sql": "SELECT Place FROM astockeventsdb.lc_investorra WHERE InnerCode = 15937 ORDER BY ReceptionDate DESC LIMIT 3;"
            },
            {
                "id": 7,
                "subquestion": "查询利亚德最近三次投资者调研的参与机构数量。",
                "table_name": [
                    "astockeventsdb.lc_investorra"
                ],
                "reason": "在本查询中，我选择 COUNT(DISTINCT Participant) AS ParticipantCount 作为主要查询字段，以获取参与投资者调研的机构的独特数量。通过设置 InnerCode = 15937 作为限制条件，我确保查询结果专注于针对利亚德的相关记录。使用 ORDER BY ReceptionDate DESC LIMIT 3 来尝试约束数据范围，但对于计算独特参与者数量而言并不是必需的。我只需确保过滤条件，然后统计参与机构的数量。",
                "sql": "SELECT COUNT(DISTINCT Participant) AS ParticipantCount FROM astockeventsdb.lc_investorra WHERE InnerCode = 15937 ORDER BY ReceptionDate DESC LIMIT 3;"
            }
        ]
    },
    {
        "question": "隧道股份在2021年底有多少个国家队持股股东？这些股东的持有A股总数是多少？在这些股东中，持股比例最高的是哪个股东？持股比例是多少？（保留2位小数）",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询隧道股份在2021年底的国家队持股股东数量。",
                "table_name": [
                    "astockshareholderdb.lc_nationalstockholdst"
                ],
                "reason": "选择字段包括 COUNT(DISTINCT SHID), 通过该方法可准确统计在2021年底持有隧道股份的唯一股东数量。限制条件使用 InnerCode 限制到具体的证券，确保准确性，同时使用 EndDate 转换日期以获取特定时间点的数据。",
                "sql": "SELECT COUNT(DISTINCT SHID) AS ShareholderCount FROM astockshareholderdb.lc_nationalstockholdst WHERE InnerCode = 2057 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31';"
            },
            {
                "id": 2,
                "subquestion": "查询隧道股份在2021年底国家队持股股东持有的A股总数。",
                "table_name": [
                    "astockshareholderdb.lc_nationalstockholdst"
                ],
                "reason": "选择字段包括 SUM(HoldAShareSum)，这是查询中必不可少的字段，用于求得国家队在2021年底持有的A股的总数。限制条件使用 InnerCode 确保仅限于隧道股份的记录，同时使用 EndDate 转换日期以获取特定时间点的数据。",
                "sql": "SELECT SUM(HoldAShareSum) AS TotalHoldAShareSum FROM astockshareholderdb.lc_nationalstockholdst WHERE InnerCode = 2057 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31';"
            },
            {
                "id": 3,
                "subquestion": "查询隧道股份在2021年底国家队持股股东中，持股比例最高的股东名称。",
                "table_name": [
                    "astockshareholderdb.lc_nationalstockholdst"
                ],
                "reason": "查询中选择 SUM(HoldAShareSum)（了解持股上下文）、ROUND(MAX(PCTOfFloatShares)*100,2) AS MaxHoldingRatio（找到最高持股比例）、SHName（返回持股比例最高的股东名称）。限制条件使用 CompanyCode 来限制到特定公司，使用 EndDate 确保时间段，且确保 PCTOfFloatShares 有效。",
                "sql": "SELECT  SUM(HoldAShareSum) AS TotalHolding, ROUND(MAX(PCTOfFloatShares)*100,2) AS MaxHoldingRatio, SHName FROM aStockShareholderDB.lc_nationalstockholdst WHERE CompanyCode = '1753' AND EndDate LIKE '%2021-12%' AND PCTOfFloatShares IS NOT NULL GROUP BY SHID, SHName, PCTOfFloatShares ORDER BY MaxHoldingRatio DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询持股比例最高的股东在隧道股份中持股的比例，并保留2位小数。",
                "table_name": [
                    "astockshareholderdb.lc_nationalstockholdst"
                ],
                "reason": "查询中选择 SUM(HoldAShareSum)（理解持股上下文）、ROUND(MAX(PCTOfFloatShares)*100,2) AS MaxHoldingRatio（获取持股比例），SHName（返回持股比例最高的股东名称）。限制条件使用 CompanyCode 限制到特定公司 & EndDate 确保时间段，以及 PCTOfFloatShares 确保有效性。",
                "sql": "SELECT  SUM(HoldAShareSum) AS TotalHolding, ROUND(MAX(PCTOfFloatShares)*100,2) AS MaxHoldingRatio, SHName FROM aStockShareholderDB.lc_nationalstockholdst WHERE CompanyCode = '1753' AND EndDate LIKE '%2021-12%' AND PCTOfFloatShares IS NOT NULL GROUP BY SHID, SHName, PCTOfFloatShares ORDER BY MaxHoldingRatio DESC LIMIT 1;"
            }
        ]
    },
    {
        "question": "中国宝安2021年底的员工总数是多少？其中技术人员占比是多少？（保留2位小数）在该公司的技术人员中，具有硕士及以上学历（硕士+博士）的人员占比是多少？（保留2位小数）该公司的人才结构是否合理？请分析技术人员、生产人员、销售人员的比例构成。",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询中国宝安2021年底的员工总数。",
                "table_name": [
                    "astockoperationsdb.lc_staff"
                ],
                "reason": "选择字段确保能获取中国宝安公司（CompanyCode = 25）在2021年（EndDate = '2021-12-31'）年度报告中的员工总数（ClassfiedMethod = 9000）信息，使用EmployeeSum进行汇总. InfoSource字段确保数据来源的准确性，最为关键的就是对EmployeeSum的求和。",
                "sql": "SELECT SUM(EmployeeSum) AS TotalEmployees FROM astockoperationsdb.lc_staff WHERE CompanyCode = 25 AND InfoSource = '年度报告' AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31' AND ClassfiedMethod = 9000;"
            },
            {
                "id": 2,
                "subquestion": "查询中国宝安2021年底技术人员的总数。",
                "table_name": [
                    "astockoperationsdb.lc_staff"
                ],
                "reason": "选择字段确保能获取中国宝安公司（CompanyCode = 25）在2021年（EndDate like '%2021-12-31%'）末期技术人员（TypeCode = 3035）的员工总数的相关信息。此处需要EmployeeSum进行汇总，而TypeName给予额外的类别标识。",
                "sql": "SELECT EmployeeSum,TypeName,EndDate ,RatioInSum FROM astockoperationsdb.lc_staff WHERE CompanyCode = '25' AND EndDate like '%2021-12-31%'  and TypeCode=3035"
            },
            {
                "id": 3,
                "subquestion": "查询中国宝安2021年底技术人员在员工总数中的占比，并保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询中国宝安技术人员中具有硕士及以上学历（硕士+博士）的人员总数。",
                "table_name": [
                    "astockoperationsdb.lc_staff"
                ],
                "reason": "选择字段确保能获取中国宝安公司（CompanyCode = '25'）在2021年（EndDate like '%2021-12-31%'）末期具有硕士（TypeCode = 5010）和博士（TypeCode = 5015）学历的技术人员的总人数信息。此处需要EmployeeSum进行汇总，而TypeName帮助识别对应的学历类型。",
                "sql": "SELECT EmployeeSum,TypeName,EndDate ,RatioInSum FROM astockoperationsdb.lc_staff WHERE CompanyCode = '25' AND EndDate like '%2021-12-31%' and ClassfiedMethod=5000  and (TypeCode=5010 or TypeCode=5015)"
            },
            {
                "id": 5,
                "subquestion": "查询中国宝安技术人员中具有硕士及以上学历人员在技术人员中的占比，并保留2位小数。",
                "table_name": [
                    "astockoperationsdb.lc_staff"
                ],
                "reason": "查询选取了中国宝安公司（CompanyCode = 25）在2021年12月31日（EndDate = '2021-12-31'）的专业构成（ClassfiedMethod = 3000）职员。对技术人员（TypeCode = 3035）的数量进行了汇总，并与其他类别（3031和3034）的职员总数对比，以计算其在总技术人员中的占比，确保结果保留两位小数，满足实际查询需求。",
                "sql": "SELECT      SUM(CASE WHEN TypeCode = 3035 THEN EmployeeSum ELSE 0 END) AS TechnicalStaff,     SUM(CASE WHEN TypeCode = 3031 THEN EmployeeSum ELSE 0 END) AS ProductionStaff,     SUM(CASE WHEN TypeCode = 3034 THEN EmployeeSum ELSE 0 END) AS SalesStaff,     SUM(EmployeeSum) AS TotalStaff FROM      astockoperationsdb.lc_staff WHERE      CompanyCode = 25     AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31'     AND ClassfiedMethod = 3000"
            },
            {
                "id": 6,
                "subquestion": "查询中国宝安的技术人员、生产人员、销售人员的总数及其比例构成。",
                "table_name": [
                    "astockoperationsdb.lc_staff"
                ],
                "reason": "查询选择了中国宝安公司（CompanyCode = 25）在2021年12月31日（EndDate = '2021-12-31'）的专业构成（ClassfiedMethod = 3000）职员。使用CASE语句分别计算技术人员（TypeCode = 3035）、生产人员（TypeCode = 3031）、销售人员（TypeCode = 3034）的数量，同时求和得到全体职员总数，以便后续能够计算比例。",
                "sql": "SELECT      SUM(CASE WHEN TypeCode = 3035 THEN EmployeeSum ELSE 0 END) AS TechnicalStaff,     SUM(CASE WHEN TypeCode = 3031 THEN EmployeeSum ELSE 0 END) AS ProductionStaff,     SUM(CASE WHEN TypeCode = 3034 THEN EmployeeSum ELSE 0 END) AS SalesStaff,     SUM(EmployeeSum) AS TotalStaff FROM      astockoperationsdb.lc_staff WHERE      CompanyCode = 25     AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31'     AND ClassfiedMethod = 3000"
            },
            {
                "id": 7,
                "subquestion": "分析中国宝安的技术人员、生产人员、销售人员的比例是否合理。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "海信家电在2021-12-24这天，小单、中单和大单的净流入情况如何？净流入额分别是多少？(单位：元) 基于上述资金流向数据，大单对比小单的净买入率(额)差值是多少个百分点？这种资金流向组合反映了什么现象？请结合该股票所属的概念板块，2021-12-24当天其所属概念板块的大单小单净买入率差值是多少个百分点？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询海信家电在2021-12-24的小单净流入额。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockcapflowindex"
                ],
                "reason": "我选择了InnerCode作为过滤条件，以确保查询仅针对海信家电的证券信息，TradingDay用作限制，确保数据是在2021-12-24这个准确日期，SmallNetBuyValue作为返回结果，表示特定日期的小单净流入额。通过这些选择，查询能够高效且准确地返回目标数据。",
                "sql": "SELECT SmallNetBuyValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';"
            },
            {
                "id": 2,
                "subquestion": "查询海信家电在2021-12-24的中单净流入额。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockcapflowindex"
                ],
                "reason": "选择了InnerCode作为过滤条件，以确保查询仅涉及海信家电的证券数据，TradingDay用作限制，以确保数据是在2021-12-24这个特定日期，MediumNetBuyValue作为需要返回的字段，表示那一天中单的净流入额。通过这些选择，查询能够快速、准确地得到所需数据。",
                "sql": "SELECT MediumNetBuyValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';"
            },
            {
                "id": 3,
                "subquestion": "查询海信家电在2021-12-24的大单净流入额。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockcapflowindex"
                ],
                "reason": "选取InnerCode过滤条件，以确保查询仅涉及海信家电的证券信息，TradingDay条件确保数据是2021-12-24这个特定日期，LargeNetBuyValue作为需要返回的字段，表示该日期的大单净流入额。经过这样的选择，查询可以有效、准确地得到目标数据。",
                "sql": "SELECT LargeNetBuyValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';"
            },
            {
                "id": 4,
                "subquestion": "计算大单和小单的净买入率差值，并保留两位小数。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockcapflowindex",
                    "astockmarketquotesdb.cs_stockcapflowindex"
                ],
                "reason": "选择InnerCode作为过滤条件，以确保查询针对海信家电的证券数据，TradingDay则确保数据是在2021-12-24这个特定日期。LargeNBValueRatio和SmallNBValueRatio作为计算差值的字段，查询时获取它们的值，并进行差值计算，最终结果使用ROUND函数保留两位小数，准确返回结果。通过这些选择，查询可以高效和准确地得到目标结果。",
                "sql": "SELECT ROUND((SELECT LargeNBValueRatio FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24') - (SELECT SmallNBValueRatio FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24'), 2) AS NetBuyRateDifference;"
            },
            {
                "id": 5,
                "subquestion": "分析海信家电在2021-12-24的资金流向组合所反映的现象。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockcapflowindex",
                    "astockmarketquotesdb.cs_stockcapflowindex",
                    "astockmarketquotesdb.cs_stockcapflowindex",
                    "astockmarketquotesdb.cs_stockcapflowindex",
                    "astockmarketquotesdb.cs_stockcapflowindex",
                    "astockmarketquotesdb.cs_stockcapflowindex"
                ],
                "reason": "我通过选择InnerCode过滤条件，确保只查询海信家电的数据，并使用TradingDay限制，确保数据是2021年12月24日的记录。我选取了小单、中单、大单、超大单、全单及主力的流入和流出额字段，以便全面反映资金流向的组合情况。这将有利于后续的分析和解读资金流入、流出之间的关系。",
                "sql": "SELECT SmallBuyValue, SmallSellValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';SELECT MediumBuyValue, MediumSellValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';SELECT LargeBuyValue, LargeSellValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';SELECT HugeBuyValue, HugeSellValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';SELECT TotalBuyValue, TotalSellValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';SELECT MainBuyValue, MainSellValue FROM astockmarketquotesdb.cs_stockcapflowindex WHERE InnerCode = 549 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';"
            },
            {
                "id": 6,
                "subquestion": "查询海信家电所属概念板块在2021-12-24的大单小单净买入率差值。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "永泰能源在2020年发生了几次业务范围变更？请列出每次变更的具体日期（xxxx-xx-xx的格式）在2020年永泰能源的业务变更日期前后30天内，公司发生了多少次信用评级相关事件？请列出具体的事件日期。比较永泰能源在2019年和2020年的业务变更次数和信用事件次数，计算2020年相对于2019年的变化率。哪个指标的变化更大？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询永泰能源在2020年发生的业务范围变更次数及每次变更的具体日期。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 2,
                "subquestion": "查询永泰能源在2020年业务变更日期前后30天内发生的信用评级相关事件次数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "列出2020年业务变更日期前后30天内的所有信用评级相关事件的具体日期。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询永泰能源在2019年的业务变更次数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询永泰能源在2019年的信用评级相关事件次数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "计算永泰能源在2020年相对于2019年的业务变更次数的变化率。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 7,
                "subquestion": "计算永泰能源在2020年相对于2019年的信用事件次数的变化率。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 8,
                "subquestion": "比较永泰能源的业务变更次数变化率和信用事件次数变化率，确定哪个指标的变化更大。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "鹏华基金在2019年成立了多少只基金？这些基金的总募集规模是多少？(单位：元) 在上述成立的基金中，有多少只是股票型基金？这些股票型基金的平均募集规模是多少？(单位：元) 请分析该公司2019年新成立的股票型基金中，采用被动投资策略(指数型)的基金占比是多少？这一比例相比同期其他基金公司是高还是低？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询鹏华基金在2019年成立的基金数量。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "在本查询中，我选择了字段 COUNT(*) AS FundCount 以计数在2019年成立的鹏华基金。设置的条件 InvestAdvisorCode = 41515 确保了仅筛选鹏华基金管理有限公司的基金，而 YEAR(DATE(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d'))) = 2019 确保了设立时间在2019年。这样能准确返回在该年成立的基金数量。",
                "sql": "SELECT COUNT(*) AS FundCount FROM publicfunddb.mf_fundarchives WHERE InvestAdvisorCode = 41515 AND YEAR(DATE(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d'))) = 2019;"
            },
            {
                "id": 2,
                "subquestion": "查询鹏华基金在2019年成立基金的总募集规模（单位：元）。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "在本查询中，我选择了字段 SUM(FoundedSize) AS TotalFundsRaised 以求和计算在2019年成立的鹏华基金的总募集规模。设置的条件 InvestAdvisorCode = 41515 确保了仅筛选鹏华基金管理有限公司的基金，而 YEAR(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d')) = 2019 确保了设立时间在2019年。这样能准确返回在该年成立的基金的总募集规模。",
                "sql": "SELECT SUM(FoundedSize) AS TotalFundsRaised FROM publicfunddb.mf_fundarchives WHERE InvestAdvisorCode = 41515 AND YEAR(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d')) = 2019;"
            },
            {
                "id": 3,
                "subquestion": "查询鹏华基金在2019年成立的股票型基金数量。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "在本查询中，我选择了字段 COUNT(*) AS FundCount 以计数在2019年成立的鹏华基金的股票型基金数量。设置的条件 InvestAdvisorCode = 41515 确保了仅筛选鹏华基金管理有限公司的基金，而 DATE(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d')) BETWEEN '2019-01-01' AND '2019-12-31' 确保了设立时间在2019年，同时 FundTypeCode = 1101 选取股票型基金。这样能准确返回在该年成立的股票型基金数量。",
                "sql": "SELECT COUNT(*) AS FundCount FROM publicfunddb.mf_fundarchives WHERE InvestAdvisorCode = 41515 AND DATE(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d')) BETWEEN '2019-01-01' AND '2019-12-31' AND FundTypeCode = 1101;"
            },
            {
                "id": 4,
                "subquestion": "查询鹏华基金在2019年成立的股票型基金的平均募集规模（单位：元）。",
                "table_name": [
                    "publicfunddb.mf_fundarchives"
                ],
                "reason": "在本查询中，我选择了字段 AVG(FoundedSize) AS AverageRaisedSize 以计算在2019年成立的鹏华基金的股票型基金的平均募集规模。设置的条件 InvestAdvisorCode = 41515 确保了仅筛选鹏华基金管理有限公司的基金， FundTypeCode = '1101' 限制为股票型基金，而 DATE(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d')) BETWEEN '2019-01-01' AND '2019-12-31' 确保了设立时间在2019年。这样能准确返回在该年成立的股票型基金的平均募集规模。",
                "sql": "SELECT AVG(FoundedSize) AS AverageRaisedSize FROM publicfunddb.mf_fundarchives WHERE InvestAdvisorCode = 41515 AND FundTypeCode = '1101' AND DATE(STR_TO_DATE(EstablishmentDate, '%Y-%m-%d')) BETWEEN '2019-01-01' AND '2019-12-31';"
            },
            {
                "id": 5,
                "subquestion": "查询鹏华基金在2019年新成立的股票型基金中，采用被动投资策略(指数型)的基金数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "计算鹏华基金2019年新成立的股票型基金中，采用被动投资策略(指数型)的基金的占比。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 7,
                "subquestion": "查询同期其他基金公司中，采用被动投资策略(指数型)的股票型基金的占比，并进行比较。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "安琪酵母在2021年12月31日的股东总户数是多少？其中A股股东户均持股数是多少股？基于上述股东数据，该公司A股户均持股数相比上一季度的变化率是多少(四舍五入到小数点后两位)？这种变化反映了什么现象？该公司2021年的管理层总薪酬是多少，所有公司平均水平是多少？该公司管理层薪酬与行业平均水平的差异率是多少？(四舍五入保留两位小数)",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询安琪酵母在2021年12月31日的股东总户数。",
                "table_name": [
                    "astockshareholderdb.lc_shnumber"
                ],
                "reason": "在该查询中，重点选择了字段CompanyCode用于限定特定公司（安琪酵母），EndDate用于确认记录日期，SHNum为查询核心结果字段。由于任务要求指定日期为2021年12月31日，因此设置了精确的日期限制条件。由于确知CompanyCode（1288）和EndDate（'2021-12-31'），因此这些值是查询的固定条件，这确保查询结果的准确性与有效性。",
                "sql": "SELECT SHNum FROM astockshareholderdb.lc_shnumber WHERE CompanyCode = 1288 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31';"
            },
            {
                "id": 2,
                "subquestion": "查询安琪酵母在2021年12月31日的A股股东户均持股数。",
                "table_name": [
                    "astockshareholderdb.lc_shnumber"
                ],
                "reason": "本查询选取的字段包含CompanyCode用于指定查询的公司（安琪酵母），EndDate用于确保精确到目标日期，AAverageHoldSum是查询中返回的核心字段。由于查询是针对2021年12月31日，因此在SQL中设定了固定的CompanyCode（1288）以及确保了查询日期的准确性，以得到准确结果。",
                "sql": "SELECT AAverageHoldSum FROM astockshareholderdb.lc_shnumber WHERE CompanyCode = 1288 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31';"
            },
            {
                "id": 3,
                "subquestion": "根据安琪酵母A股户均持股数的数据，计算相较于上一季度的变化率，并四舍五入到小数点后两位。",
                "table_name": [
                    "astockshareholderdb.lc_shnumber"
                ],
                "reason": "查询选择了字段CompanyCode用于确保查询的公司为安琪酵母，并通过EndDate的模糊匹配获取到2021年12月31日的相关数据。所需的AAvgHoldSumGRQuarter字段是本查询的核心，提供了季度增长率计算所需的数据。通过这些条件，可以顺利检索到特定日期的相关数据，以便计算A股户均持股数相较上一季度的变化率。",
                "sql": "select AAvgHoldSumGRQuarter FROM astockshareholderdb.lc_shnumber WHERE CompanyCode = '1288' and EndDate like '%2021-12-31%'"
            },
            {
                "id": 4,
                "subquestion": "分析安琪酵母A股户均持股数变化率所反映的现象。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询安琪酵母2021年的管理层总薪酬。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "查询中选用了字段CompanyCode来限定公司为安琪酵母，并通过EndDate约束日期在2021年内。SUM(TotalYearPay)是必选项，用于计算管理层的总薪酬。同时，InfoSource被用作条件，确保返回的数据来源于年度报告，增强了数据的准确性。底层逻辑确保了查询结果能够正确反映安琪酵母在2021年的管理层总薪酬。",
                "sql": "SELECT SUM(TotalYearPay) AS TotalManagementCompensation FROM astockoperationsdb.lc_rewardstat WHERE CompanyCode = 1288 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2021-01-01' AND '2021-12-31' AND InfoSource LIKE '%年度报告%'"
            },
            {
                "id": 6,
                "subquestion": "查询所有公司管理层的平均薪酬水平。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "本查询选择了SUM(TotalYearPay)与SUM(NumPayManagers)进行计算，以此导出所有管理层的平均薪酬水平。InfoSource被用作过滤条件，确保获取的数据源自年度报告，而YEAR(STR_TO_DATE(EndDate, '%Y-%m-%d')) = 2021保证了数据针对特定年份的准确性。通过设计这些条件，能保证查询结果是反映2021年的管理层薪酬数据，且是根据年度报告统计而来。",
                "sql": "SELECT SUM(TotalYearPay) / SUM(NumPayManagers) AS AverageManagerSalary FROM astockoperationsdb.lc_rewardstat WHERE InfoSource = '年度报告' AND YEAR(STR_TO_DATE(EndDate, '%Y-%m-%d')) = 2021;"
            },
            {
                "id": 7,
                "subquestion": "根据安琪酵母的管理层总薪酬和行业平均水平，计算管理层薪酬与行业平均水平的差异率，并四舍五入保留两位小数。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "本查询通过AVG(TotalYearPay)字段计算行业管理层的薪酬平均水平，InfoSource设置为'年度报告'是为确保获取的数据均来自同一类型的报告，提升数据的可靠性。通过这种方式，可以有效地获取整个行业的薪酬统计，这对后续计算和比较安琪酵母的薪酬水平提供必要的数据基础。",
                "sql": "SELECT AVG(TotalYearPay) AS AveragePay FROM astockoperationsdb.lc_rewardstat WHERE InfoSource = '年度报告';"
            }
        ]
    },
    {
        "question": "健康元药业集团股份有限公司在2020-2021年期间进行了几次股份回购？每次回购的金额(单位：万元，保留两位小数)和股数分别是多少？最近一次回购的主要目的是什么？是否涉及股权激励计划？该公司在2020-2021年期间的回购总金额在A股上市公司中排名如何？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询健康元药业集团股份有限公司在2020-2021年期间进行的股份回购次数。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "选择字段包括公司代码、起始日期和结束日期，以确保精准统计健康元药业在2020-2021年的股份回购次数。字段CompanyCode = 1360指定特定公司，StartDate和EndDate限制了查询的时间范围为2020-01-01至2021-12-31，从而确保结果的相关性和准确性。",
                "sql": "SELECT COUNT(*) AS BuybackCount FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1360 AND DATE(STR_TO_DATE(StartDate, '%Y-%m-%d %H:%i:%s.%f')) >= '2020-01-01' AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) <= '2021-12-31';"
            },
            {
                "id": 2,
                "subquestion": "查询健康元药业集团股份有限公司在2020-2021年期间每次回购的金额和股数。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "选择字段包括BuybackSum和BuybackMoney / 10000 AS BuybackMoneyWan，以便提供每次回购的股数和金额（万元）。通过CompanyCode = 1360确定公司，同时增加日期条件以限定回购记录在2020-2021年之间，确保所查询结果的有效性和相关性。",
                "sql": "SELECT BuybackSum, BuybackMoney / 10000 AS BuybackMoneyWan FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1360;"
            },
            {
                "id": 3,
                "subquestion": "查询健康元药业集团股份有限公司最近一次回购的主要目的是什么。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "选择字段PurposeDesc，用于获取健康元药业集团股份有限公司最近一次回购的主要目的。通过CompanyCode = 1360进行公司筛选，并按FirstPublDate降序排列，以确保获取到最新的回购记录，最后通过LIMIT 1仅返回一条记录，从而满足查询需求。",
                "sql": "SELECT PurposeDesc FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1360 ORDER BY DATE(STR_TO_DATE(FirstPublDate, '%Y-%m-%d %H:%i:%s.%f')) DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询健康元药业集团股份有限公司是否涉及股权激励计划。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "选择字段BuybackPurpose，以获取健康元药业最近一次回购的目的。通过CompanyCode = 1360确保查询针对该公司，同时按FirstPublDate降序排列并使用LIMIT 1获取最新的回购记录。此查询将帮助判断该回购是否涉及股权激励计划。",
                "sql": "SELECT BuybackPurpose FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1360 ORDER BY FirstPublDate DESC LIMIT 1;"
            },
            {
                "id": 5,
                "subquestion": "查询健康元药业集团股份有限公司在2020-2021年期间的回购总金额在A股上市公司中的排名。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "选择字段包括CompanyCode和SUM(BuybackMoney) AS TotalBuybackMoney，以获取健康元药业在2020-2021年期间的回购总金额。通过CompanyCode = 1360对公司进行筛选，设置StartDate的时间范围为2020-01-01至2021-12-31，并根据InfoSource确保只包括集中竞价交易的记录。这将有助于计算健康元的回购金额，以便在A股上市公司中进行排名。",
                "sql": "SELECT CompanyCode, SUM(BuybackMoney) AS TotalBuybackMoney FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1360 AND (DATE(STR_TO_DATE(StartDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2020-01-01' AND '2021-12-31') AND InfoSource LIKE '%集中竞价交易%' GROUP BY CompanyCode ORDER BY TotalBuybackMoney DESC;"
            }
        ]
    },
    {
        "question": "伟明环保最近一期员工持股计划的参与总人数是多少？其中管理层参与人数占比(四舍五入精确到小数点后两位，并以百分比形式表示)是多少？该期员工持股计划的股票来源是什么？计划购买股票数量是多少股？对比伟明环保与在证券市场和证券类别相同的公司的员工持股计划,分析:(1)在证券市场和证券类别相同的公司的员工持股计划的数量(2)该公司的持股计划规模处于什么水平(精确到小数点后两位，并以百分比形式表示)? (3)管理层参与人数比例处于什么水平(精确到小数点后两位，并以百分比形式表示)? (4)锁定期长度处于什么水平(精确到小数点后两位，并以百分比形式表示)?",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询伟明环保最近一期员工持股计划的参与总人数。",
                "table_name": [
                    "astockshareholderdb.lc_esop"
                ],
                "reason": "在查询中，我选择了字段PartiAmount作为关键字段，因为这个字段恰好代表了员工持股计划的参与总人数，这是题目所要求的主要信息。限制条件InnerCode=36006用于确保我们仅查询到伟明环保所对应的员工持股计划信息，ORDER BY ImpleEndDate DESC则帮助我获取最近一条记录，LIMIT 1确保只检索到一条结果，最终输出符合查询需求。",
                "sql": "SELECT PartiAmount FROM astockshareholderdb.lc_esop WHERE InnerCode = 36006 ORDER BY ImpleEndDate DESC LIMIT 1;"
            },
            {
                "id": 2,
                "subquestion": "查询伟明环保最近一期员工持股计划中的管理层参与人数。",
                "table_name": [
                    "astockshareholderdb.lc_esop"
                ],
                "reason": "在查询中，我选择了字段ManagementPartiAmount作为关键字段，因为这个字段确切地记录了管理层参与人数，正是题目所要求的主要信息。限制条件InnerCode=36006确保我限定查询到伟明环保特定的员工持股计划，ORDER BY ImpleEndDate DESC安排最近的记录，LIMIT 1则输出一条结果，保证查询满足需求。",
                "sql": "SELECT ManagementPartiAmount FROM astockshareholderdb.lc_esop WHERE InnerCode = 36006 ORDER BY ImpleEndDate DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询伟明环保最近一期员工持股计划管理层参与人数占比，并四舍五入到小数点后两位，以百分比形式表示。",
                "table_name": [
                    "astockshareholderdb.lc_esop"
                ],
                "reason": "在查询中，我选择了ManagementPartiAmount和EmployeePartiAmount字段，分别表示管理层参与人数和全体员工参与人数，以此计算管理层的参与占比。通过ROUND函数计算比例并四舍五入到小数点后两位，最后以百分比形式返回。限制条件InnerCode=36006确保仅选择伟明环保的员工持股计划，并通过ORDER BY ImpleEndDate DESC保证我获取的是最新的记录，LIMIT 1确保只输出一条结果，满足查询的目的。",
                "sql": "SELECT ROUND((ManagementPartiAmount / EmployeePartiAmount) * 100, 2) AS ManagementParticipationRate FROM astockshareholderdb.lc_esop WHERE InnerCode = 36006 ORDER BY ImpleEndDate DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询伟明环保最近一期员工持股计划的股票来源。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询伟明环保最近一期员工持股计划的计划购买股票数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "查询在证券市场和证券类别相同的公司员工持股计划的数量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 7,
                "subquestion": "查询伟明环保的员工持股计划规模，并与在证券市场和证券类别相同的公司进行对比，计算其处于什么水平（精确到小数点后两位，并以百分比形式表示）。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 8,
                "subquestion": "查询与在证券市场和证券类别相同的公司的员工持股计划相比，伟明环保的管理层参与人数比例处于什么水平（精确到小数点后两位，并以百分比形式表示）。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 9,
                "subquestion": "查询与在证券市场和证券类别相同的公司的员工持股计划相比，伟明环保的锁定期长度处于什么水平（精确到小数点后两位，并以百分比形式表示）",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "光环新网(代码:300383)的年度报告中在2021年年末的机构持股比例是多少(四舍五入精确到小数点后两位，并以百分比形式表示)？其中基金持股比例是多少(四舍五入精确到小数点后两位，并以百分比形式表示)？非基金定报，以最后一次统计日期为准，该公司2021年全年(第一季度末到第四季度末)机构持股比例分别是多少(四舍五入精确到小数点后两位，并以百分比形式表示)？对比2020年末和2021年末的数据，该公司的机构持股比例和基金持股比例分别是多少(四舍五入精确到小数点后两位，并以百分比形式表示)，变化了多少(保留正负符号，四舍五入精确到小数点后两位，并以百分比形式表示)？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询光环新网(代码:300383)在2021年年末的机构持股比例，并以百分比形式表示，保留两位小数。",
                "table_name": [
                    "astockshareholderdb.lc_stockholdingst"
                ],
                "reason": "查询的关键字段包括InstitutionsHoldPropA和FundsHoldPropA，分别代表机构和基金在2021年末持股比例的合计。选择CompanyCode (170593)、EndDate ('%2021-12-%') 和 InfoSource ('年度报告')作为限制条件，确保查询数据的正确性和相关性。InfoSource的限制确保接受到的数据来源为有效的年度报告。如此设置最大程度上缩小了查询范围，只返回有效信息。字段的取值设计涵盖了公司的必要信息以及报告的时效，使查询结果针对性强。",
                "sql": "SELECT round(InstitutionsHoldPropA,2),round(FundsHoldPropA,2) FROM astockshareholderdb.lc_stockholdingst WHERE CompanyCode = '170593' AND InfoSource like '年度报告' AND EndDate LIKE '%2021-12-%';"
            },
            {
                "id": 2,
                "subquestion": "查询光环新网(代码:300383)在2021年年末的基金持股比例，并以百分比形式表示，保留两位小数。",
                "table_name": [
                    "astockshareholderdb.lc_stockholdingst"
                ],
                "reason": "关键字段为FundsHoldPropA，代表光环新网在2021年年底的基金持股比例，查询中选择CompanyCode (170593)、EndDate ('%2021-12-%') 和 InfoSource ('年度报告')作为过滤条件，确保数据的及时性和相关性。选用的字段和条件确保结果聚焦于目标公司在特定时期的正式报告，FundHoldPropA提供准确的基金持股比例数据，这是查询的核心内容。",
                "sql": "SELECT round(InstitutionsHoldPropA,2),round(FundsHoldPropA,2) FROM astockshareholderdb.lc_stockholdingst WHERE CompanyCode = '170593' AND InfoSource like '年度报告' AND EndDate LIKE '%2021-12-%';"
            },
            {
                "id": 3,
                "subquestion": "查询光环新网(代码:300383)在2021年第一季度末、第二季度末、第三季度末和第四季度末的机构持股比例，并分别以百分比形式表示，保留两位小数。",
                "table_name": [
                    "astockshareholderdb.lc_stockholdingst",
                    "astockshareholderdb.lc_stockholdingst",
                    "astockshareholderdb.lc_stockholdingst",
                    "astockshareholderdb.lc_stockholdingst"
                ],
                "reason": "SELECT语句中涉及的字段有InstitutionsHoldPropA（机构持股比例）和StatDate（统计日期），其中前者是本查询关注的核心数据，后者用以记录每个季度的统计截止时间。公司代码CompanyCode (170593)锁定为光环新网，InfoSource根据季度要求分别设置为'第一季报'、'%半年%'、'第三季报'和'%年度%'，以获取准确的持股比例信息。StatDate的区间限制确保查询结果具体到2021年所有四个季度的报表，确保数据时效性和针对性。",
                "sql": "SELECT round(InstitutionsHoldPropA,2) ,StatDate FROM astockshareholderdb.lc_stockholdingst WHERE CompanyCode = '170593' and InfoSource like '第一季报' AND StatDate LIKE '%2021-%'  ORDER BY StatDate DESC LIMIT 1;SELECT round(InstitutionsHoldPropA,2) ,StatDate FROM astockshareholderdb.lc_stockholdingst WHERE CompanyCode = '170593' and InfoSource like '%半年%' AND StatDate LIKE '%2021-%'  ORDER BY StatDate DESC LIMIT 1;SELECT round(InstitutionsHoldPropA,2) ,StatDate FROM astockshareholderdb.lc_stockholdingst WHERE CompanyCode = '170593' and InfoSource like '第三季报' AND StatDate LIKE '%2021-%'  ORDER BY StatDate DESC LIMIT 1;SELECT round(InstitutionsHoldPropA,2) ,StatDate FROM astockshareholderdb.lc_stockholdingst WHERE CompanyCode = '170593' and InfoSource like '%年度%' AND StatDate LIKE '%2021-%'  ORDER BY StatDate DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询光环新网(代码:300383)在2020年年末的机构持股比例，并以百分比形式表示，保留两位小数。",
                "table_name": [
                    "astockshareholderdb.lc_stockholdingst"
                ],
                "reason": "本查询的主要目标是获取光环新网（公司代码170593）在2020年年末的机构持股比例，选择的字段为InstitutionsHoldPropA（机构持股比例），另保留FundsHoldPropA（基金持股比例）以扩充结果信息。限制条件选定公司代码（CompanyCode）为'170593'，信息来源（InfoSource）设定为'年度报告'，日期（EndDate）则通过模糊匹配'%2020-12-%'确保限定在年末数据。这样的限制条件确保查询结果是有效和精准的。",
                "sql": "SELECT round(InstitutionsHoldPropA,2),round(FundsHoldPropA,2) FROM astockshareholderdb.lc_stockholdingst WHERE CompanyCode = '170593' AND InfoSource like '年度报告' AND EndDate LIKE '%2020-12-%';"
            },
            {
                "id": 5,
                "subquestion": "查询光环新网(代码:300383)在2020年年末的基金持股比例，并以百分比形式表示，保留两位小数。",
                "table_name": [
                    "astockshareholderdb.lc_stockholdingst"
                ],
                "reason": "查询的核心字段是FundsHoldPropA（公募基金持股比例），设置CompanyCode（170593）锁定光环新网，InfoSource（'年度报告'）和EndDate（'%2020-12-%'）作为过滤条件，确保查询结果仅针对特定的年度报告数据，含2020年年末的有效信息。虽然InstitutionsHoldPropA为背景数据，但主要目的在于输出准确的基金持股比例。",
                "sql": "SELECT round(InstitutionsHoldPropA,2),round(FundsHoldPropA,2) FROM astockshareholderdb.lc_stockholdingst WHERE CompanyCode = '170593' AND InfoSource like '年度报告' AND EndDate LIKE '%2020-12-%';"
            },
            {
                "id": 6,
                "subquestion": "对比光环新网(代码:300383)2020年末和2021年年末的机构持股比例，计算变化值，并保留正负符号，四舍五入精确到小数点后两位。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 7,
                "subquestion": "对比光环新网(代码:300383)2020年末和2021年年末的基金持股比例，计算变化值，并保留正负符号，四舍五入精确到小数点后两位。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "九州通在2020-2021年间实施了几次分红方案？每次分红的合计派现金额（四舍五入保留两位小数，单位元）和实施公告日期（xxxx-xx-xx的格式）分别是多少？从公司年报中，在2020-2021年间，该公司的机构持无限售流通A股比例是是否增长(输出是/否)，请列出具体数据，保留4位小数。在2020-2021年间，公司发生了多少重大借贷事件（单笔金额超过3000万元）？这些借贷事件最大金额和对应的借款方和贷款方是谁？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询九州通在2020-2021年间实施的分红方案次数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 2,
                "subquestion": "查询每次分红方案的合计派现金额（四舍五入保留两位小数，单位元）和实施公告日期（xxxx-xx-xx的格式）。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询九州通在2020-2021年间机构持无限售流通A股比例的具体数据，并判断其是否增长，输出是/否，并保留4位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询九州通在2020-2021年间发生了多少笔重大借贷事件（单笔金额超过3000万元）。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询九州通在2020-2021年间重大借贷事件中的最大金额及其对应的借款方和贷款方。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "在2021-12-31这一天，A股市场中创出月度新高的公司有哪些（中文名称缩写即可）？他们的证券代码是多少？在这些创出新高的公司中，哪些公司的股东中包含企业资本？请列出公司名（中文名称缩写即可）和企业资本股东名称。对于同时具备企业资本背景和创新高的公司，请从以下维度深入分析：这些公司的行业代码是什么？行业相同的公司分别是什么（中文名称缩写即可）",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询2021年12月31日A股市场中创出月度新高的公司及其中文名称缩写。",
                "table_name": [
                    "constantdb.secumain",
                    "astockmarketquotesdb.cs_stockpatterns",
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "选择字段ChiNameAbbr和SecuCode以返回创出月度新高的公司信息。限制条件IfHighestHPriceRM=1确保选出符合要求的证券，并且对日期TradingDay加以限制为2021年12月31，日本时间。支持条件InnerCode在主表与股票技术形态表之间的关联，以获取相关的证券信息。",
                "sql": "select ChiNameAbbr,SecuCode from constantdb.secumain where InnerCode in (select InnerCode from astockmarketquotesdb.cs_stockpatterns where IfHighestHPriceRM =1 and date(TradingDay) = '2021-12-31'select InnerCode from astockmarketquotesdb.cs_stockpatterns where IfHighestHPriceRM =1 and date(TradingDay) = '2021-12-31')"
            },
            {
                "id": 2,
                "subquestion": "查询2021年12月31日A股市场中创出新高的公司的证券代码。",
                "table_name": [
                    "constantdb.secumain",
                    "astockmarketquotesdb.cs_stockpatterns",
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "选择字段SecuCode以返回创出新高的证券代码，该字段是查询目标。限制条件IfHighestHPriceRM=1确保选出符合新高标准的证券，TradingDay=2021-12-31则确保在特定日期内的数据查询。InnerCode用于在主表与技术形态表之间的关联以获取正确的证券信息。",
                "sql": "select ChiNameAbbr,SecuCode from constantdb.secumain where InnerCode in (select InnerCode from astockmarketquotesdb.cs_stockpatterns where IfHighestHPriceRM =1 and date(TradingDay) = '2021-12-31'select InnerCode from astockmarketquotesdb.cs_stockpatterns where IfHighestHPriceRM =1 and date(TradingDay) = '2021-12-31')"
            },
            {
                "id": 3,
                "subquestion": "查询创出新高的公司中，哪些公司的股东中包含企业资本，并列出这些公司的中文名称缩写和企业资本股东名称。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询同时具备企业资本背景和创出新高的公司的行业代码。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询行业相同的公司，并列出这些公司的中文名称缩写。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "华夏鼎康债券A在2019年的分红次数是多少？每次分红的派现比例是多少？基于上述分红数据，在2019年最后一次分红时，如果一位投资者持有1000份该基金，税后可以获得多少分红收益？请结合该基金所属的债券型基金分类，分析2019年同类基金的平均分红次数和平均派现比例（四舍五入保留4位小数）",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询华夏鼎康债券A在2019年的分红次数。",
                "table_name": [
                    "publicfunddb.mf_dividend"
                ],
                "reason": "选择InnerCode作为限制条件，以便针对特定基金进行查询。使用InfoPublDate限制年份为2019，用于获取特定时间段的分红记录。IfDistributed字段用来过滤出仅包含分红的记录，确保查询的准确性。最终，通过COUNT(*)来统计符合条件的分红次数，以满足业务需求。",
                "sql": "SELECT COUNT(*) AS DividendTimes FROM publicfunddb.mf_dividend WHERE InnerCode = '210208' AND YEAR(InfoPublDate) = 2019 AND IfDistributed = 1;"
            },
            {
                "id": 2,
                "subquestion": "查询华夏鼎康债券A在2019年的每次分红的派现比例。",
                "table_name": [
                    "publicfunddb.mf_dividend"
                ],
                "reason": "选择InnerCode为210208，确保我们查询的是华夏鼎康债券A的相关数据。通过IfDistributed限制记录为已分红的项，并用日期范围'2019-01-01'到'2019-12-31'筛选出2019年的记录。最终选择InfoPublDate和DividendRatioBeforeTax作为返回字段，以获取每次分红的时间和派现比例，这是满足查询需求的关键。",
                "sql": "SELECT InfoPublDate, DividendRatioBeforeTax FROM publicfunddb.mf_dividend WHERE InnerCode = 210208 AND IfDistributed = 1 AND DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31';"
            },
            {
                "id": 3,
                "subquestion": "基于华夏鼎康债券A在2019年的分红数据，查询如果投资者持有1000份该基金，税后可以获得的分红收益。",
                "table_name": [
                    "publicfunddb.mf_dividend"
                ],
                "reason": "选择InnerCode为210208，确保查询的是华夏鼎康债券A的相关数据。使用年份限制确认只关注2019年的数据，IfDistributed条件确保仅计算已分红的基础数据。通过将UnitProfit与实际税后比例相乘计算税后收益。使用ORDER BY ProfitDistDate DESC LIMIT 1确保只取2019年最后一次分红信息进行收益计算，符合查询要求。",
                "sql": "SELECT (UnitProfit * 1000 * ActualRatioAfterTax) AS AfterTaxEarnings FROM (SELECT UnitProfit, ActualRatioAfterTax FROM publicfunddb.mf_dividend WHERE InnerCode = 210208 AND YEAR(STR_TO_DATE(ProfitDistDate, '%Y-%m-%d')) = 2019 AND IfDistributed = 1 ORDER BY ProfitDistDate DESC LIMIT 1) AS LastDividend;"
            },
            {
                "id": 4,
                "subquestion": "查询华夏鼎康债券A所属的债券型基金分类的所有同类基金在2019年的平均分红次数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询华夏鼎康债券A所属的债券型基金分类的所有同类基金在2019年的平均派现比例，并保留4位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "中铁工业在2021年签订了哪些金额较大的重大合同？请列出前两大合同的发布日期(xxxx-xx-xx的格式)，合同标的和合同金额(四舍五入保留两位小数)。 中铁工业2021年重大合同的季度数量如何？ 分析2021年重大合同的交易对手特征：1. 重复交易的客户数量及其合同金额（保留两位小数）以及数量和金额占总量的占比（四舍五入保留两位小数，并以百分比形式表示）？ 2. 单一交易对手的合同总金额，最高是谁，总金额是多少（保留两位小数），全部交易对手合同总金额占比（四舍五入保留两位小数，并以百分比形式表示）？",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询中铁工业在2021年签订的金额较大的重大合同，列出前两大合同的发布日期、合同标的和合同金额。",
                "table_name": [
                    "astockeventsdb.lc_majorcontract"
                ],
                "reason": "选择了字段CompanyCode以过滤特定公司的数据，InfoPublDate和AgreementDate以限定查询范围在2021年，ContractObject和AmountInvolved是查询中必须返回的内容，其中格式化InfoPublDate为ContractReleaseDate以便于展示，同时AmountInvolved取值需要保证是金额较大。添加ORDER BY和LIMIT确保只返回金额排前两的记录。",
                "sql": "SELECT CONCAT(SUBSTRING(InfoPublDate, 1, 4),'-', SUBSTRING(InfoPublDate, 6, 2), '-', SUBSTRING(InfoPublDate, 9, 2)) AS ContractReleaseDate, ContractObject, ROUND(AmountInvolved, 2) AS ContractAmount FROM astockeventsdb.lc_majorcontract WHERE CompanyCode = '1468' AND (AgreementDate LIKE '%2021%' or InitialInfoPublDate LIKE '%2021%') ORDER BY AmountInvolved DESC LIMIT 2"
            },
            {
                "id": 2,
                "subquestion": "查询中铁工业在2021年的重大合同的季度数量。",
                "table_name": [
                    "astockeventsdb.lc_majorcontract",
                    "astockeventsdb.lc_majorcontract",
                    "astockeventsdb.lc_majorcontract",
                    "astockeventsdb.lc_majorcontract"
                ],
                "reason": "查询条件中包括CompanyCode以确保只获取中铁工业的记录，同时使用InitialInfoPublDate的多个LIKE条件覆盖2021年四个季度的不同月份。统计使用了count(*)以获取满足条件的记录数量，由于需要逐个季度统计，因此提供了多个SELECT查询。",
                "sql": "SELECT count(*) FROM astockeventsdb.lc_majorcontract WHERE CompanyCode = '1468' AND (InitialInfoPublDate LIKE '%2021-01%' or InitialInfoPublDate LIKE '%2021-02%' or InitialInfoPublDate LIKE '%2021-03%');SELECT count(*) FROM astockeventsdb.lc_majorcontract WHERE CompanyCode = '1468' AND (InitialInfoPublDate LIKE '%2021-04%' or InitialInfoPublDate LIKE '%2021-05%' or InitialInfoPublDate LIKE '%2021-06%');SELECT count(*) FROM astockeventsdb.lc_majorcontract WHERE CompanyCode = '1468' AND (InitialInfoPublDate LIKE '%2021-07%' or InitialInfoPublDate LIKE '%2021-08%' or InitialInfoPublDate LIKE '%2021-09%');SELECT count(*) FROM astockeventsdb.lc_majorcontract WHERE CompanyCode = '1468' AND (InitialInfoPublDate LIKE '%2021-10%' or InitialInfoPublDate LIKE '%2021-11%' or InitialInfoPublDate LIKE '%2021-12%')"
            },
            {
                "id": 3,
                "subquestion": "查询2021年中铁工业重复交易的客户数量及其合同金额。",
                "table_name": [
                    "astockeventsdb.lc_majorcontract"
                ],
                "reason": "通过CompanyCode限制，只统计中铁工业的合同记录。使用InitialInfoPublDate的LIKE条件确保仅包括2021年的合同，同时按照SubjectName分组以统计每个客户的合同数量和合同金额。",
                "sql": "SELECT COUNT(*) AS Count , sum(AmountInvolved), SubjectName FROM astockeventsdb.lc_majorcontract WHERE CompanyCode = '1468' AND  InitialInfoPublDate LIKE '%2021%' GROUP BY  SubjectName;"
            },
            {
                "id": 4,
                "subquestion": "查询2021年中铁工业重复交易客户的合同数量和金额占总量的占比，并以百分比形式表示。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询2021年中铁工业单一交易对手的合同总金额，找出合同金额最高的交易对手。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "查询合同金额最高的交易对手的总金额，并以保留两位小数表示。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 7,
                "subquestion": "查询2021年中铁工业全部交易对手的合同总金额占比，并以百分比形式表示。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "华峰化学在2019年发生了哪些舆情事件？请列出事件发生时间(YYYY-MM-DD)、事件名称和情感方向。在上述重大事件发生期间，华峰化学是否出现过停牌？如有，请列出停牌起止日期(YYYY-MM-DD)和具体原因。2019年期间，华峰化学发生的最大比例股权变动是在哪一天（xxxx-xx-xx）？这次变动前后5个交易日的股价累计涨跌幅是多少？（保留2位小数）",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询华峰化学在2019年发生的所有舆情事件及其发生时间。",
                "table_name": [
                    "institutiondb.ps_newssecurity"
                ],
                "reason": "本查询通过选择 EventName 和 EventDate 字段，确保获取华峰化学在2019年所有舆情事件的名称及其发生时间。InnerCode 的取值为 4503，限定了查询为特定公司（华峰化学）相关的舆情事件。根据要求，事件发生时间使用 YEAR(EventDate) = 2019，以确保只返回2019年内的事件。根据公司信息，可以获取 InnerCode 值。",
                "sql": "SELECT EventName, EventDate FROM institutiondb.ps_newssecurity WHERE InnerCode = 4503 AND YEAR(EventDate) = 2019;"
            },
            {
                "id": 2,
                "subquestion": "查询华峰化学在2019年发生的舆情事件及其事件名称。",
                "table_name": [
                    "institutiondb.ps_newssecurity"
                ],
                "reason": "本查询通过选择 EventName 字段，获取华峰化学在2019年所有舆情事件的名称。InnerCode 的取值为 4503 和 CompanyCode 的取值为 3754 确保只查询与华峰化学相关的信息。事件时间使用 DATE(STR_TO_DATE(EventDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31' 来确保只返回在2019年内发生的事件，保证查询的准确性与相关性。",
                "sql": "SELECT EventName FROM institutiondb.ps_newssecurity WHERE InnerCode = 4503 AND CompanyCode = 3754 AND DATE(STR_TO_DATE(EventDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31';"
            },
            {
                "id": 3,
                "subquestion": "查询华峰化学在2019年发生的舆情事件的情感方向。",
                "table_name": [
                    "institutiondb.ps_newssecurity"
                ],
                "reason": "本查询选择 EmotionDirection 字段，以提取华峰化学在2019年所有舆情事件的情感倾向。InnerCode 的取值为 4503 用于确定华峰化学，YEAR(EventDate) = 2019 限制事件在2019年，确保结果专注于所需时段内的舆情信息。",
                "sql": "SELECT EmotionDirection FROM institutiondb.ps_newssecurity WHERE InnerCode = 4503 AND YEAR(EventDate) = 2019;"
            },
            {
                "id": 4,
                "subquestion": "查询2019年华峰化学停牌的起止日期。",
                "table_name": [
                    "astockmarketquotesdb.lc_suspendresumption"
                ],
                "reason": "本查询选择 SuspendDate 和 ResumptionDate 字段，以获取华峰化学在2019年停牌的起止日期。InnerCode 的取值为 4503 确保查询的数据特定于华峰化学，而 SuspendDate 的过滤条件确保只返回2019年内的记录，通过 DATE(STR_TO_DATE(SuspendDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31' 保证日期范围的准确性。",
                "sql": "SELECT SuspendDate, ResumptionDate FROM astockmarketquotesdb.lc_suspendresumption WHERE InnerCode = 4503 AND DATE(STR_TO_DATE(SuspendDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31';"
            },
            {
                "id": 5,
                "subquestion": "查询2019年华峰化学停牌的具体原因。",
                "table_name": [
                    "astockmarketquotesdb.lc_suspendresumption"
                ],
                "reason": "本查询选择 SuspendReason 字段，以获取华峰化学在2019年停牌的具体原因。InnerCode 的取值为 4503 确保查询数据仅限于华峰化学，而 SuspendDate 的过滤条件确保只返回2019年内的停牌信息，确保结果的准确性。",
                "sql": "SELECT SuspendReason FROM astockmarketquotesdb.lc_suspendresumption WHERE InnerCode = 4503 AND DATE(STR_TO_DATE(SuspendDate, '%Y-%m-%d %H:%i:%s.%f')) >= '2019-01-01' AND DATE(STR_TO_DATE(SuspendDate, '%Y-%m-%d %H:%i:%s.%f')) <= '2019-12-31';"
            },
            {
                "id": 6,
                "subquestion": "查询2019年华峰化学最大比例股权变动的具体日期。",
                "table_name": [
                    "astockshareholderdb.lc_sharetransfer"
                ],
                "reason": "本查询选择 TranDate 字段，以便提取华峰化学在2019年最大比例股权变动的具体日期。其中，InnerCode 的取值为 4503 确保只查询华峰化学的数据，而 TranDate 的过滤条件确保只返回2019年内的记录。通过 ORDER BY PCTBeforeTran DESC LIMIT 1 的条件，我们能够找出持股比例最大的股权变动日期。",
                "sql": "SELECT TranDate FROM astockshareholderdb.lc_sharetransfer WHERE InnerCode = 4503 AND DATE(STR_TO_DATE(TranDate, '%Y-%m-%d %H:%i:%s')) BETWEEN '2019-01-01' AND '2019-12-31' ORDER BY PCTBeforeTran DESC LIMIT 1;"
            },
            {
                "id": 7,
                "subquestion": "查询华峰化学在最大股权变动日前后5个交易日的股价信息。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 8,
                "subquestion": "计算华峰化学在最大股权变动日前后5个交易日的股价累计涨跌幅，并保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "大北农在2019年第一季度末的资产负债率是多少？其中流动资产和非流动资产分别占总资产的比例是多少？（四舍五入保留2位小数）基于上述资产结构特征，该公司在2019年为其子公司提供担保的总金额是多少？(保留2位小数)最长担保期限为多少个月？（保留整数）针对上述担保事项，公司在2019年召开的股东大会的具体日期以及参会股东所持表决权占公司总股本的比例是多少？(可以使用最近一次可查总股本的数据)（四舍五入保留2位小数）",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询大北农在2019年第一季度末的资产负债率，并保留2位小数。",
                "table_name": [
                    "astockfinancedb.lc_balancesheetall"
                ],
                "reason": "我选择TotalLiability和TotalAssets字段用于计算资产负债率，这是因为资产负债率为总负债与总资产的比值，且需要保留两位小数。此外，限制条件细致地指定了根据CompanyCode、InfoSourceCode和EndDate来确保查询结论的准确性，特别是EndDate字段，我指定为2019年的第一季度末。格式控制采用ROUND函数保留2位小数，从而符合财务报表显示的常规需求。",
                "sql": "SELECT ROUND(TotalLiability / TotalAssets, 2) AS DebtRatio FROM astockfinancedb.lc_balancesheetall WHERE CompanyCode = 78397 AND InfoSourceCode = '110103' AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2019-03-31';"
            },
            {
                "id": 2,
                "subquestion": "查询大北农在2019年第一季度末的流动资产占总资产的比例，并保留2位小数。",
                "table_name": [
                    "astockfinancedb.lc_balancesheetall"
                ],
                "reason": "我选择了TotalCurrentAssets和TotalAssets字段用于计算流动资产占总资产的比例，这是因为流动资产的比例反映了公司的短期流动资金状况。通过SUM函数汇总这些字段，保证无论数据有多少行均可计算出正确的比例。此外，限制条件细致地设定了根据CompanyCode、EndDate、InfoSource和IfMerged来确保查询结果的准确性，特别是限制EndDate确保获取的是2019年第一个季度的数据。最后使用ROUND函数将结果格式化为两位小数，从而满足财务报告的常用要求。",
                "sql": "SELECT ROUND(SUM(TotalCurrentAssets) / SUM(TotalAssets) * 100, 2) AS CurrentAssetRatio FROM astockfinancedb.lc_balancesheetall WHERE CompanyCode = 78397 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-03-31' AND InfoSource LIKE '%第一季报%' AND IfMerged = 1;"
            },
            {
                "id": 3,
                "subquestion": "查询大北农在2019年第一季度末的非流动资产占总资产的比例，并保留2位小数。",
                "table_name": [
                    "astockfinancedb.lc_balancesheetall"
                ],
                "reason": "我选择了TotalNonCurrentAssets和TotalAssets字段用于计算非流动资产占总资产的比例，这是因为非流动资产的比例能够反映公司的资本结构和长期投资状况。通过ROUND函数确保结果格式为两位小数，以符合财务数据的展示标准。此外，限制条件中细致设定了CompanyCode、InfoSourceCode以及EndDate，确保只提取特定公司的特定时间段内的准确数据，保证数据的有效性与相关性。",
                "sql": "SELECT ROUND(TotalNonCurrentAssets / TotalAssets * 100, 2) AS NonCurrentAssetRatio FROM astockfinancedb.lc_balancesheetall WHERE CompanyCode = 78397 AND InfoSourceCode = 110103 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2019-03-31';"
            },
            {
                "id": 4,
                "subquestion": "查询大北农基于2019年资产结构特征为其子公司提供的总担保金额，并保留2位小数。",
                "table_name": [
                    "astockeventsdb.lc_warrant"
                ],
                "reason": "我选择了FirstGuaranteeSum字段用于计算大北农为其子公司提供的总担保金额，这个字段直接提供了担保金额的数据。采用ROUND函数将计算结果格式化为两位小数，以符合财务报告标准。同时，限制条件中的CompanyCode、SubjectAssociation和InfoPublDate确保查询只针对大北农在2019年子公司的相关担保信息，这保证了数据的准确性和相关性。",
                "sql": "SELECT ROUND(SUM(FirstGuaranteeSum), 2) AS TotalGuaranteeAmount FROM astockeventsdb.lc_warrant WHERE CompanyCode = 78397 AND SubjectAssociation = 10 AND DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31';"
            },
            {
                "id": 5,
                "subquestion": "查询大北农为子公司提供担保的最长担保期限（以月份为单位），并保留整数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "查询大北农在2019年召开的股东大会的具体日期。",
                "table_name": [
                    "astockshareholderdb.lc_smattendinfo"
                ],
                "reason": "我选择MeetingDate字段用于查询大北农在2019年召开的股东大会的日期，因为这是查询的核心字段，提供了必要的信息。同时设置CompanyCode为78397以确保只查询大北农的相关数据，并且通过YEAR函数将MeetingDate限制为2019年，以过滤出符合条件的具体日期。",
                "sql": "SELECT MeetingDate FROM astockshareholderdb.lc_smattendinfo WHERE CompanyCode = 78397 AND YEAR(MeetingDate) = 2019;"
            },
            {
                "id": 7,
                "subquestion": "查询2019年股东大会中参会股东所持表决权占公司总股本的比例，并保留2位小数。",
                "table_name": [
                    "astockshareholderdb.lc_smattendinfo"
                ],
                "reason": "我选择RatioInTotalShare字段用于查询2019年股东大会中参会股东的表决权占公司总股本的比例，因为这个字段提供了目标数据。使用ROUND函数将结果格式化为两位小数，以符合股东投票比例的展示标准。同时设置CompanyCode为78397和YEAR(MeetingDate) = 2019确保查询结果仅与大北农的2019年股东大会相关，这保证了数据的准确性和相关性。",
                "sql": "SELECT ROUND(RatioInTotalShare, 2) AS ShareholderVotingRatio FROM astockshareholderdb.lc_smattendinfo WHERE CompanyCode = 78397 AND YEAR(MeetingDate) = 2019;"
            }
        ]
    },
    {
        "question": "梅花生物在2019年进行了几次股票回购？回购金额合计是多少？(四舍五入保留2位小数) 在上述回购计划中，最大单笔回购的具体时间(xxxx-xx-xx的格式)和金额是多少？(四舍五入保留2位小数) 该公司2019年的平均回购时间跨度是多少？(天为单位，2位小数)平均回购金额是多少？(四舍五入保留2位小数)",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询梅花生物在2019年进行的股票回购次数。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "本查询通过计算梅花生物在2019年的股票回购次数，涉及的关键字段包括CompanyCode（用于确认公司的身份）和FirstPublDate（用于时间过滤）。由于针对特定公司的数据已有明确定义，因此直接使用了已知的CompanyCode值1806。查询的时间范围通过YEAR函数与FirstPublDate结合，确保没有遗漏2019年的任意回购。最终使用COUNT(*)来得到统计结果，以满足查询的需求。",
                "sql": "SELECT COUNT(*) AS BuybackCount FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1806 AND YEAR(STR_TO_DATE(FirstPublDate, '%Y-%m-%d')) = 2019;"
            },
            {
                "id": 2,
                "subquestion": "查询梅花生物在2019年股票回购的金额合计，并四舍五入保留2位小数。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "本查询旨在计算梅花生物在2019年股票回购的金额合计。涉及到的关键字段包括CompanyCode（用于确保数据来源于梅花生物）和BuybackMoney（用于聚合回购总金额）。通过使用ROUND(SUM(BuybackMoney), 2)来获取金额的合计值，并保留两位小数。关键的时间限制条件为YEAR函数与FirstPublDate结合，确保所有计算均为2019年内的回购。",
                "sql": "SELECT ROUND(SUM(BuybackMoney), 2) AS TotalBuybackMoney FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1806 AND YEAR(STR_TO_DATE(FirstPublDate, '%Y-%m-%d %H:%i:%s.%f')) = 2019;"
            },
            {
                "id": 3,
                "subquestion": "查询梅花生物在2019年最大单笔回购的具体时间(格式为xxxx-xx-xx)。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "本查询目的是获取梅花生物在2019年最大单笔回购的具体时间。涉及的关键字段包括CompanyCode（用于确认查询范围为梅花生物），BuybackMoney（用于排序以找出最大回购），和FirstPublDate与InsertTime（用于返回时间信息）。通过按BuybackMoney降序排序并限制结果为1，获取最大金额的记录。",
                "sql": "SELECT FirstPublDate,InsertTime,StartDate FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1806 AND YEAR(STR_TO_DATE(FirstPublDate, '%Y-%m-%d %H:%i:%s.%f')) = 2019 ORDER BY BuybackMoney DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询梅花生物在2019年最大单笔回购的金额，并四舍五入保留2位小数。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "本查询的目的是获取梅花生物在2019年最大的单笔回购金额。涉及的关键字段包括CompanyCode（确保只查询梅花生物的数据）和BuybackMoney（用于找出最大金额）。通过ROUND(MAX(BuybackMoney), 2)计算出最大回购金额并保留两位小数，确保只计入2019年的记录。",
                "sql": "SELECT ROUND(SUM(BuybackMoney), 2) FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1806 AND YEAR(STR_TO_DATE(FirstPublDate, '%Y-%m-%d %H:%i:%s.%f')) = 2019 ORDER BY BuybackMoney DESC LIMIT 1;"
            },
            {
                "id": 5,
                "subquestion": "查询梅花生物2019年所有股票回购的时间，计算其平均回购时间跨度(天为单位)，保留2位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "查询梅花生物2019年的平均回购金额，并四舍五入保留2位小数。",
                "table_name": [
                    "astockshareholderdb.lc_buyback"
                ],
                "reason": "本查询的目的是计算梅花生物在2019年的平均回购金额。涉及的关键字段包括CompanyCode（用于确认查询的数据为梅花生物）和BuybackMoney（用于计算平均值）。通过ROUND(AVG(BuybackMoney), 2)计算期间的平均回购金额，并保留到小数点后两位，确保在2019年的记录中进行该计算。",
                "sql": "SELECT ROUND(AVG(BuybackMoney), 2) AS TotalBuybackMoney FROM astockshareholderdb.lc_buyback WHERE CompanyCode = 1806 AND YEAR(STR_TO_DATE(FirstPublDate, '%Y-%m-%d %H:%i:%s.%f')) = 2019;"
            }
        ]
    },
    {
        "question": "深科技在2021年12月24日的交易数据如何?具体包括收盘价、成交量、换手率，保留2位小数。基于上述交易数据，该股当日是否创出了近一周、近一月的新高?如果不是,最高价分别是多少? 结合该股当日的MACD指标(考虑成交量)以及均线排列情况,从技术面分析其走势特征。",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询深科技在2021年12月24日的收盘价、成交量和换手率，保留2位小数。",
                "table_name": [
                    "astockmarketquotesdb.qt_dailyquote"
                ],
                "reason": "在这个查询中，选取了ClosePrice和TurnoverVolume作为关键字段。InnerCode用于定位特定的深科技（InnerCode=57），而TradingDay限制查询为特定的日期'2021-12-24'。由于目标是获得深科技在这个日期的收盘价和成交量，前两项是必不可少的，而关于TurnoverRate的提及可能是计算结果，正在寻求的值应保持两位小数，便于准确显示，因此在SQL查询中进行了ROUND操作来确保输出格式符合要求。",
                "sql": "SELECT ROUND(ClosePrice,2),ROUND(TurnoverVolume,2), ROUND(TurnoverRate,2) FROM astockmarketquotesdb.qt_dailyquote WHERE InnerCode = 57 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';"
            },
            {
                "id": 2,
                "subquestion": "查询深科技在2021年12月17日至2021年12月24日的最高价，并验证2021年12月24日是否为近一周的新高。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns",
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "在这个查询中，选取了IfHighestHPriceRW作为验证字段，确保确定2021年12月24日是否创近一周的新高的数据。同时，选取HighPriceRW字段获取该日期的最高价。InnerCode确定了指定证券，而TradingDay确保查询针对特定日期。这样的结构使我们能够有效获取目标日期的表现，并验证其相对表现，数据类型和取值均有助于满足这一需求。",
                "sql": "SELECT IfHighestHPriceRW FROM astockmarketquotesdb.cs_stockpatterns WHERE innercode = 57 AND DATE(TradingDay) = '2021-12-24';SELECT HighPriceRW FROM astockmarketquotesdb.QT_StockPerformance WHERE InnerCode=57 AND DATE(TradingDay) = '2021-12-24';"
            },
            {
                "id": 3,
                "subquestion": "查询深科技在2021年11月24日至2021年12月24日的最高价，并验证2021年12月24日是否为近一月的新高。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns",
                    "astockmarketquotesdb.qt_stockperformance"
                ],
                "reason": "在这个查询中，选取了IfHighestHPriceRM作为验证字段，以确保确定2021年12月24日是否创近一月的新高的数据。同时，选取HighPriceRM字段获取该日期的最高价。InnerCode确定了指定证券，而TradingDay确保查询针对特定日期。这样的结构使我们能够有效获取目标日期的表现，并验证其相对表现，数据类型和取值均有助于满足这一需求。",
                "sql": "SELECT IfHighestHPriceRM FROM astockmarketquotesdb.cs_stockpatterns WHERE innercode = 57 AND DATE(TradingDay) = '2021-12-24';SELECT HighPriceRM FROM astockmarketquotesdb.QT_StockPerformance WHERE InnerCode=57 AND DATE(TradingDay) = '2021-12-24';"
            },
            {
                "id": 4,
                "subquestion": "查询深科技在2021年12月24日的MACD指标。",
                "table_name": [
                    "astockmarketquotesdb.cs_turnovervoltecindex"
                ],
                "reason": "在这个查询中，选取了VMACD_MACD, VMACD_DIFF, 和 VMACD_DEA作为关键字段，以确保能够获取深科技在2021年12月24日的MACD指标信息。InnerCode字段用于定位特定的深科技证券，而TradingDay确保查找针对特定日期的数据。这样的结构使我们能够有效获取MACD的重要技术分析数据，以便进行进一步的市场研究和决策。",
                "sql": "SELECT VMACD_MACD, VMACD_DIFF, VMACD_DEA FROM astockmarketquotesdb.cs_turnovervoltecindex WHERE InnerCode = 57 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';"
            },
            {
                "id": 5,
                "subquestion": "查询深科技在2021年12月24日的均线排列情况并分析其技术面走势特征。",
                "table_name": [
                    "astockmarketquotesdb.cs_stockpatterns"
                ],
                "reason": "在这个查询中，选取了MAverageArrangements作为关键字段，以确保能够获取深科技在2021年12月24日的均线排列情况。InnerCode用于精确定位特定证券，而TradingDay则确保只查询特定日期的数据。这样的查询结构能够有效获取技术面走势特征，并为后续的市场走势分析提供直接依据。",
                "sql": "SELECT MAverageArrangements FROM astockmarketquotesdb.cs_stockpatterns WHERE InnerCode = 57 AND DATE(STR_TO_DATE(TradingDay, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-24';"
            }
        ]
    },
    {
        "question": "安井食品在2019年第一季度的最高价、最低价分别是多少？成交量最大的一天是哪天（XXXX-XX-XX）？在上述成交量最大的那天，该股票是否创下了近一周、近一月或近一季度的新高？如果是，分别创下了哪些新高？分析该股票2019年1月份的成交量特征：哪几天的成交量超过月均量的2倍？具体是多少比例？这些放量日的收盘价相比前一日分别上涨/下跌了多少？(四舍五入保留两位小数)",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询安井食品在2019年第一季度的最高价。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 2,
                "subquestion": "查询安井食品在2019年第一季度的最低价。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 3,
                "subquestion": "查询安井食品在2019年第一季度成交量最大的交易日期。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询成交量最大的一天安井食品的收盘价是否创下近一周的新高。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "查询成交量最大的一天安井食品的收盘价是否创下近一月的新高。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "查询成交量最大的一天安井食品的收盘价是否创下近一季度的新高。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 7,
                "subquestion": "查询安井食品2019年1月份的月均成交量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 8,
                "subquestion": "查询2019年1月份安井食品成交量超过月均量2倍的日期及具体成交量。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 9,
                "subquestion": "查询放量日的收盘价和前一日的收盘价，计算相对涨跌幅。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "美年健康在2019年发生的股权质押中，质押比例最大的一笔是哪个股东质押给了谁？质押股数和占总股本比例是多少，保留4位小数？在上述最大比例质押发生时，该公司的短期借款余额是多少？(保留两位小数) 该公司2019年全年累计发生几笔股权质押？质押融资总额占其年末总资产的比例是多少？(保留两位小数)",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询美年健康在2019年发生的所有股权质押记录。",
                "table_name": [
                    "astockshareholderdb.lc_sharefp"
                ],
                "reason": "选择所有字段是为了获取美年健康在2019年发生的所有股权质押记录的全面信息。关键字段包括：CompanyCode（2730，标识美年健康）、TypeSelect（3，代表股权质押）及StartDate（以确保日期范围为2019年），这些都直接满足查询条件。由于公司代码和质押类型是查询的主要限制条件，我们进行了必要的过滤，以确保获取准确的记录和信息。这种选择也保证了查询的效率，使我们能够得到想要的数据结果。",
                "sql": "SELECT * FROM astockshareholderdb.lc_sharefp WHERE CompanyCode = 2730 AND TypeSelect = 3 AND DATE(STR_TO_DATE(StartDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31';"
            },
            {
                "id": 2,
                "subquestion": "从美年健康在2019年的股权质押记录中，找到质押比例最大的股权质押。",
                "table_name": [
                    "astockshareholderdb.lc_sharefp"
                ],
                "reason": "选择所有字段是为了获得美年健康在2019年所有相关股权质押记录的详细信息。关键字段包括：CompanyCode（2730，为确认美年健康）、TypeSelect（3，指代股权质押）、InfoPublDate（日期范围限制），以及PCTOfPledger（用于按比例排序并确定最高的记录）。通过这些条件的组合，可以确保查询出2019年间质押比例最大的股权质押记录。所有的条件合在一起保障了查询的准确性。",
                "sql": "SELECT * FROM astockshareholderdb.lc_sharefp WHERE CompanyCode = 2730 AND TypeSelect = 3 AND DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31' ORDER BY PCTOfPledger DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询美年健康在2019质押比例最大的一笔股权质押的股东名称。",
                "table_name": [
                    "astockshareholderdb.lc_sharefp"
                ],
                "reason": "查询仅返回FPSHName字段，以获取美年健康在2019年质押比例最大股东的名称。关键条件包括：CompanyCode（2730，确保是针对美年健康公司）、TypeSelect（3，表示股权质押）、以及年份条件（确保是2019年数据），随后根据PCTOfPledger降序排列以找到最大质押比例记录。通过这些条件的结合，准确性和高效性得以保障。",
                "sql": "SELECT FPSHName FROM astockshareholderdb.lc_sharefp WHERE CompanyCode = 2730 AND TypeSelect = 3 AND YEAR(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) = 2019 ORDER BY PCTOfPledger DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询美年健康在2019质押比例最大的一笔股权质押的质押对象名称。",
                "table_name": [
                    "astockshareholderdb.lc_sharefp"
                ],
                "reason": "查询返回ReceiverName字段，目的是获取美年健康在2019年所有股权质押中质押比例最大的质押对象的名称。关键条件包括：CompanyCode（2730，指向美年健康）、TypeSelect（3，表示股权质押）、InfoPublDate（确保时间框架是2019年）；接着通过PCTOfPledger按比例降序排列，最后限制结果为1以获得最大质押比例的记录。通过这些条件组合，确保了查询的准确性和针对性。",
                "sql": "SELECT ReceiverName FROM astockshareholderdb.lc_sharefp WHERE CompanyCode = 2730 AND TypeSelect = 3 AND DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31' ORDER BY PCTOfPledger DESC LIMIT 1;"
            },
            {
                "id": 5,
                "subquestion": "查询美年健康在2019质押比例最大的一笔股权质押的质押股数。",
                "table_name": [
                    "astockshareholderdb.lc_sharefp"
                ],
                "reason": "查询返回InvolvedSum字段，其目的是为获取美年健康在2019年质押比例最大的一笔股权质押的质押股数。关键条件包括CompanyCode（2730，确保记录是美年健康的）、StartDate（确保时间框架是2019年）；接着通过PCTOfPledger按比例降序排列以找出最大质押比例的记录。通过这些条件组合，保证了查询的有效性和准确性。",
                "sql": "SELECT InvolvedSum FROM astockshareholderdb.lc_sharefp WHERE CompanyCode = 2730 AND YEAR(STR_TO_DATE(StartDate, '%Y-%m-%d')) = 2019 ORDER BY PCTOfPledger DESC LIMIT 1;"
            },
            {
                "id": 6,
                "subquestion": "查询质押比例最大的一笔股权质押的占总股本比例，并保留4位小数。",
                "table_name": [
                    "astockshareholderdb.lc_sharefpsta"
                ],
                "reason": "查询返回AccuProportion字段，这表明最大质押比例的占总股本比例，函数ROUND确保结果为四位小数。关键条件为CompanyCode（2730，指向美年健康），接着根据AccuProportion的值降序排列以找到最大比率的记录，并限制结果为1以确保只返回一项。通过这种组合，确保了查询的准确性与有效性。",
                "sql": "SELECT ROUND(AccuProportion, 4) AS MaxPledgeRatio FROM astockshareholderdb.lc_sharefpsta WHERE CompanyCode = 2730 ORDER BY AccuProportion DESC LIMIT 1;"
            },
            {
                "id": 7,
                "subquestion": "查询在质押比例最大的一笔股权质押发生时，美年健康的短期借款余额，并保留两位小数。",
                "table_name": [
                    "astockeventsdb.lc_credit"
                ],
                "reason": "查询返回LatestLoanSum字段的汇总金额，表示美年健康在质押比例最大的一笔股权质押发生时的短期借款余额，ROUND函数用于将结果保留两位小数。关键条件包含CompanyCode（2730，代表美年健康）、LoanBeginDate（确保起始日期在2019年结束之前）、IfEnded（确保只计算未结束的借款）、以及LoanEndDate（确保借款期限在2019年）。通过这些条件组合，确保了查询的有效性、准确性和类型要求。",
                "sql": "SELECT ROUND(SUM(LatestLoanSum), 2) AS ShortTermLoanBalance FROM astockeventsdb.lc_credit WHERE CompanyCode = 2730 AND DATE(LoanBeginDate) <= '2019-12-31' AND (IfEnded = 0 OR IfEnded IS NULL) AND YEAR(LoanEndDate) = 2019;"
            },
            {
                "id": 8,
                "subquestion": "查询美年健康在2019年全年累计发生的股权质押笔数。",
                "table_name": [
                    "astockshareholderdb.lc_sharefpsta"
                ],
                "reason": "查询使用COUNT(*)汇总指定条件下的记录数，统计在2019年全年美年健康的股权质押笔数。关键条件包括：CompanyCode（2730，用于限制记录为美年健康）、EndDate（确保记录是在2019年有效）、以及Category（3，确保记录为股权质押）。通过这些组合，确保查询的准确性与有效性。",
                "sql": "SELECT COUNT(*) AS PledgeCount FROM astockshareholderdb.lc_sharefpsta WHERE CompanyCode = 2730 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31' AND Category = 3;"
            },
            {
                "id": 9,
                "subquestion": "查询美年健康2019年质押融资的总额。",
                "table_name": [
                    "astockshareholderdb.lc_sharefp"
                ],
                "reason": "查询返回InitialPledgeSum字段的汇总金额，表示美年健康在2019年全年股权质押融资的总额。关键条件包括CompanyCode（2730，确保仅选中美年健康）、InfoPublDate（确保仅在2019年内有效的记录），以及TypeSelect（3，确保记录是股权质押类型）。通过这些条件的有效结合，确保所查询的数据反映了真实的融资状态，结果也有高度的精准性。",
                "sql": "SELECT SUM(InitialPledgeSum) AS TotalPledgeAmount FROM astockshareholderdb.lc_sharefp WHERE CompanyCode = 2730 AND DATE(STR_TO_DATE(InfoPublDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-12-31' AND TypeSelect = 3;"
            },
            {
                "id": 10,
                "subquestion": "查询美年健康2019年末的总资产。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 11,
                "subquestion": "计算2019年质押融资总额占美年健康年末总资产的比例，并保留两位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "横店东磁在2019年1月份进行了多少次投资者关系活动？这些活动中参与机构最多的一次活动发生在哪天(xxxx-xx-xx的格式)，有多少家机构参与？该公司高管的年度薪酬总额是多少？一年后呢？变化比例是(四舍五入保留到小数点两位)？请结合该公司所属的概念板块，列出2021年该公司所属的各个概念板块的平均高管薪酬和投资者关系活动频次是多少？（四舍五入保留两位小数）",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询横店东磁在2019年1月份进行的投资者关系活动次数。",
                "table_name": [
                    "astockeventsdb.lc_investorra"
                ],
                "reason": "在查询中，我选择了InnerCode字段（4427）以标识特定的公司横店东磁，并使用ReceptionDate字段以确保我能够针对2019年1月份的活动进行筛选。通过月份和年份的限制，我能精准地统计出在这一时段内的投资者关系活动次数。最终，我的查询返回字段是活动次数（ActivitiesCount），因为这是查询的核心目标。",
                "sql": "SELECT COUNT(*) AS ActivitiesCount FROM astockeventsdb.lc_investorra WHERE InnerCode = 4427 AND MONTH(ReceptionDate) = 1 AND YEAR(ReceptionDate) = 2019;"
            },
            {
                "id": 2,
                "subquestion": "查询横店东磁在2019年1月份投资者关系活动中参与机构最多的一次活动的日期。",
                "table_name": [
                    "astockeventsdb.lc_investorra"
                ],
                "reason": "在这次查询中，我选择了InnerCode字段（4427）来锁定特定的公司横店东磁。同时使用ReceptionDate字段并通过BETWEEN条件限制在2019年1月份，以确保筛选出特定时间范围内的活动。最重要的是，我还计数了Participant字段来找到参与机构最多的活动日期，最后选择了ReceptionDate作为输出字段，因为这是关键查询目标。",
                "sql": "SELECT ReceptionDate FROM astockeventsdb.lc_investorra WHERE InnerCode = 4427 AND DATE(STR_TO_DATE(ReceptionDate, '%Y-%m-%d %H:%i:%s.%f')) BETWEEN '2019-01-01' AND '2019-01-31' GROUP BY ReceptionDate ORDER BY COUNT(Participant) DESC LIMIT 1;"
            },
            {
                "id": 3,
                "subquestion": "查询参与机构最多的一次投资者关系活动中参与的机构数量。",
                "table_name": [
                    "astockeventsdb.lc_investorra"
                ],
                "reason": "在这次查询中，我选择了InnerCode字段（4427）来锁定特定的公司横店东磁，同时通过MONTH和YEAR函数限定了接待日期在2019年1月份，以确保选择的数据只对应这个时间段内的活动。对于参与机构数量的统计，我将Participant字段按参与单位进行分组，并计算每个单位的数量，从而找出参与机构最多的一次活动，最终把Participant作为输出字段。",
                "sql": "SELECT Participant FROM astockeventsdb.lc_investorra WHERE InnerCode = 4427 AND MONTH(ReceptionDate) = 1 AND YEAR(ReceptionDate) = 2019 GROUP BY Participant ORDER BY COUNT(Participant) DESC LIMIT 1;"
            },
            {
                "id": 4,
                "subquestion": "查询横店东磁的2019年度高管薪酬总额。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "在这次查询中，我选择了CompanyCode字段（3710）来锁定特定的公司横店东磁，同时通过InfoSource字段确保信息来源是年度报告，以过滤掉其他不相关的数据。此外，我还使用YEAR函数从InfoPublDate中提取年份，以确保限制在2019年内，这样我能准确查询到高管薪酬的总额。最终，以TotalYearPay字段作为输出，因为这是查询的核心数据。",
                "sql": "SELECT TotalYearPay FROM astockoperationsdb.lc_rewardstat WHERE CompanyCode = 3710 AND InfoSource = '年度报告' AND YEAR(InfoPublDate) = 2019;"
            },
            {
                "id": 5,
                "subquestion": "查询横店东磁一年后的高管薪酬总额。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "在这次查询中，我选择了CompanyCode字段（3710）以锁定特定的公司横店东磁。为了确保从有效的报告中得到信息，我设置了InfoSource为‘年度报告’。此外，我用YEAR函数从EndDate中提取年份，并将其限制为2020，以准确查询横店东磁一年后的高管薪酬总额。最终以TotalYearPay字段作为输出，因为这是查询的核心数据。",
                "sql": "SELECT TotalYearPay FROM astockoperationsdb.lc_rewardstat WHERE CompanyCode = 3710 AND InfoSource = '年度报告' AND YEAR(EndDate) = 2019;"
            },
            {
                "id": 6,
                "subquestion": "查询横店东磁的年度高管薪酬总额与一年后的薪酬总额的变化比例，并四舍五入保留到小数点两位。",
                "table_name": [
                    "astockoperationsdb.lc_rewardstat"
                ],
                "reason": "在这次查询中，我分别选择了CompanyCode字段（3710）以锁定特定的公司横店东磁，并通过InfoSource字段确保信息来源为年度报告。为了确保比较2019年与2020年高管薪酬总额之变化比例，我需要两次执行查询以获取2020年和2021年各自的TotalYearPay值。最终，可以使用这些值计算高管薪酬变化的比例，并四舍五入保留到小数点两位。",
                "sql": "SELECT TotalYearPay FROM astockoperationsdb.lc_rewardstat WHERE CompanyCode = 3710 AND InfoSource = '年度报告' AND YEAR(EndDate) = 2020;"
            },
            {
                "id": 7,
                "subquestion": "查询横店东磁所属的概念板块。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 8,
                "subquestion": "查询横店东磁所属的概念板块的高管薪酬的平均值和投资者关系活动频次。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 9,
                "subquestion": "列出2021年横店东磁所属的各个概念板块的平均高管薪酬和投资者关系活动频次，并四舍五入保留到小数点两位。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    },
    {
        "question": "中直股份在2021年12月31日的总股本是多少？其中有限售条件的流通股占比是多少？(保留两位小数) 在这个时间点，该股票的境内自然人持股和境外自然人持股比例分别是多少？两者相差多少个百分点？(保留两位小数) 该股票属于哪些概念板块？在这些概念板块中，其他公司2021年12月31日的平均有限售股比例是多少？该股票是高于还是低于板块平均水平，偏离了多少个百分点？(保留两位小数)",
        "subquestions": [
            {
                "id": 1,
                "subquestion": "查询中直股份在2021年12月31日的总股本。",
                "table_name": [
                    "astockshareholderdb.lc_sharestru"
                ],
                "reason": "在这个查询中，使用了TotalShares作为必选字段，因为我们只需查询中直股份在2021年12月31日的总股本。筛选条件中CompanyCode明确指定为1058，是查询该公司的必要条件。同时，EndDate字段约束为特定日期，以确保获取到正确的股本数据。选定的取值是基于题目中提供的具体信息，确保查询的准确性。",
                "sql": "SELECT TotalShares FROM AStockShareholderDB.LC_ShareStru WHERE CompanyCode = 1058 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31';"
            },
            {
                "id": 2,
                "subquestion": "查询中直股份在2021年12月31日有限售条件的流通股占比。",
                "table_name": [
                    "astockshareholderdb.lc_sharestru"
                ],
                "reason": "在这个查询中，RestrictedShareProp字段根据有限售条件的流通股与总股本的比例进行计算，这是查询的核心目标。CompanyCode指定为1058，确保我们关注的是中直股份；而EndDate限制为'2021-12-31'以获取这个特定日期的数据。选定的取值和字段是基于题目中提供的信息，确保我们获取的结果是准确且完整的。",
                "sql": "SELECT ROUND((RestrictedShares / TotalShares) * 100, 2) AS RestrictedShareProp FROM AStockShareholderDB.LC_ShareStru WHERE CompanyCode = 1058 AND DATE(STR_TO_DATE(EndDate, '%Y-%m-%d %H:%i:%s.%f')) = '2021-12-31';"
            },
            {
                "id": 3,
                "subquestion": "查询中直股份在2021年12月31日境内自然人持股比例。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 4,
                "subquestion": "查询中直股份在2021年12月31日境外自然人持股比例。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 5,
                "subquestion": "计算中直股份在2021年12月31日境内自然人持股与境外自然人持股的差值，并保留两位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 6,
                "subquestion": "查询中直股份在2021年12月31日所属的概念板块。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 7,
                "subquestion": "查询2021年12月31日其他公司在中直股份所属于的概念板块的平均有限售股比例。",
                "table_name": [],
                "reason": "",
                "sql": ""
            },
            {
                "id": 8,
                "subquestion": "比较中直股份在2021年12月31日有限售条件的流通股占比与概念板块平均有限售股比例，判断是高于还是低于，并计算偏离了多少个百分点，保留两位小数。",
                "table_name": [],
                "reason": "",
                "sql": ""
            }
        ]
    }
]